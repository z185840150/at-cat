{"version":3,"sources":["webpack:///./src/lib/@cat/scene-object.js","webpack:///./src/lib/@cat/scene-object-assets.js","webpack:///./src/lib/@cat/user.js","webpack:///./src/lib/cat-breeds/index.js","webpack:///./src/lib/star-material/index.js","webpack:///./src/lib/@cat/game.js","webpack:///./src/lib/@cat/cat-breeds.js","webpack:///./src/lib/@cat/cat-maker.js","webpack:///./src/main.js","webpack:///./src/lib/@cat/scene.js","webpack:///./src/lib/@cat/cat-gene.js","webpack:///./src/lib/@cat/cat-mesh.js","webpack:///./src/lib/@cat/outline.js","webpack:///./src/scenes/SceneHouse.js","webpack:///./src/lib/@cat/scene-object-assets-loader-progress-event.js","webpack:///./src/lib/cat-gene/index.js","webpack:///./src/lib/@cat/index.js","webpack:///./src/lib/fur-material/index.js","webpack:///./src/scenes/SceneLoading.js","webpack:///./src/lib/cat-maker/src/target-maker.js","webpack:///./src/lib/cat-maker/index.js"],"names":["_babylonjs","__webpack_require__","_index","asyncImport","BABYLON","SceneLoader","ImportMeshAsync","SceneObject","game","name","assets","_classCallCheck","this","_game","_name","_root","_childs","Map","_assets","value","val","_display","root","visibility","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","childs","values","Symbol","iterator","next","done","err","return","_assetsIsLoaded","justChilds","onProgress","e","hidden","scene","path","file","dispose","_ref4","l","loaded","t","total","c","lengthComputable","SceneObjectAssetsLoaderProgressEvent","then","_ref5","meshes","map","m","_this","includes","set","receiveShadows","shadowGenerator","getShadowMap","renderList","push","SceneObjectAssets","arguments","length","_path","_file","User","token","_token","Breeds","_siamese","_ragdoll","_scottishFold","_britishShorthair","_persian","_russianBlue","_americanShorthair","_exotic","_norwegianForest","_bombay","_maineCoon","_egyptianMau","_canadianHairless","num","Effect","ShadersStore","StarMaterial","ShaderMaterial","vertex","fragment","attributes","uniforms","Game","canvas","init","_canvas","_engine","_scene","_camera","_skybox","_light","_shadowGenerator","_pipeline","_assetsManager","_catMaker","_cat","_user","initBefore","Engine","Scene","engine","clearColor","Color4","AssetsManager","window","addEventListener","resize","initAfter","_this2","debug","startBefore","runRenderLoop","render","debugLayer","show","startAfter","CatBreeds","json","Object","keys","key","CatMaker","_targets","_basePosition","_textures","callback","textures","env","CubeTexture","CreateFromPrefilteredData","eyeBaseColorLeft","Texture","eyeNormalLeft","eyeOcclusionRoughnessMetallicLeft","eyeBaseColorRight","eyeNormalRight","eyeOcclusionRoughnessMetallicRight","eyeBaseColorGlass","eyeNormalGlass","eyeOcclusionRoughnessMetallicGlass","siameseBaseColor","siameseNormalColor","siameseOcclusionRoughnessMetallic","ragdollBaseColor","ragdollNormalColor","ragdollOcclusionRoughnessMetallic","persianBaseColor","persianNormalColor","persianOcclusionRoughnessMetallic","assetsManager","reset","taskBaseTarget","addTextFileTask","taskTargets","_taskBaseSuccess","_taskTargetsSuccess","onSuccess","_ref","arr","text","split","i","basePosition","Number","_ref2","sections","lines","replace","trim","target","Vector3","targets","load","Promise","resolve","reject","loadTargets","v","min","max","cat","hash","gene","genes","pos","concat","_this3","COMPUTE_AGE","COMPUTE_SEX","COMPUTE_WEIGHT","COMPUTE_HEIGHT","COMPUTE_FATRATE","COMPUTE_HEAD_AGE","COMPUTE_HEAD_FAT","COMPUTE_HEAD_ANGLE","COMPUTE_HEAD_OVAL","COMPUTE_HEAD_ROUND","COMPUTE_HEAD_RECTANGULAR","COMPUTE_HEAD_SQUARE","COMPUTE_HEAD_TRIANGULAR","COMPUTE_HEAD_TRIANGULAR_INVERTED","COMPUTE_HEAD_DIAMOND","COMPUTE_HEAD_PARIETAL_SCALE_DEPTH","COMPUTE_HEAD_SCALE_DEPTH","COMPUTE_HEAD_SCALE_HORIZONTALLY","COMPUTE_HEAD_SCALE_VERTICALLY","COMPUTE_HEAD_MOVE_DEPTH","COMPUTE_HEAD_MOVE_HORIZONTALLY","COMPUTE_HEAD_MOVE_VERTICALLY","COMPUTE_FOREHEAD_BULGE","COMPUTE_FOREHEAD_SCALE_VERTICALLY","COMPUTE_FOREHEAD_CRANIC_SHAPE","COMPUTE_FOREHEAD_TEMPLE_BULGE","COMPUTE_EYEBROWS_BULGE","COMPUTE_EYEBROWS_ANGLE","COMPUTE_EYEBROWS_MOVE_VERTICALLY","COMPUTE_NECK_DOUBLE","COMPUTE_NECK_SCALE_DEPTH","COMPUTE_NECK_SCALE_DEPTH_OF_NAPE","COMPUTE_NECK_SCALE_HORIZONTALLY","COMPUTE_NECK_SCALE_VERTICALLY","COMPUTE_NECK_MOVE_DEPTH","COMPUTE_NECK_MOVE_HORIZONTALLY","COMPUTE_NECK_MOVE_VERTICALLY","COMPUTE_EYE_BAG_VOLUME","COMPUTE_EYE_BAG_DISTORSION","COMPUTE_EYE_BAG_HEIGHT","COMPUTE_EYE_FOLD_ANGLE","COMPUTE_EYE_FOLD_VOLUME","COMPUTE_EYE_EPICANTHUS","COMPUTE_EYE_SCALEHEIGHT_0","COMPUTE_EYE_SCALEHEIGHT_1","COMPUTE_EYE_SCALEHEIGHT_2","COMPUTE_EYE_SCALEHEIGHT_3","COMPUTE_EYE_SCALEHEIGHT_4","COMPUTE_EYE_MOVE_OUTER_CORNER_HORIZONTALLY","COMPUTE_EYE_MOVE_INNER_CORNER_HORIZONTALLY","COMPUTE_EYE_MOVE_OUTER_CORNER_VERTICALLY","COMPUTE_EYE_MOVE_INNER_CORNER_VERTICALLY","COMPUTE_EYE_MOVE_HORIZONTALLY","COMPUTE_EYE_MOVE_VERTICALLY","COMPUTE_EYE_SCALE","positions","COMPUTE_EYE_COLOR","COMPUTE_BREEDS","mats","metallic","roughness","albedoColor","Color3","albedoTexture","hasAlpha","metallicTexture","useRoughnessFromMetallicTextureAlpha","useRoughnessFromMetallicTextureGreen","useMetallnessFromMetallicTextureBlue","useAlphaFromAlbedoTexture","useRadianceOverAlpha","environmentTexture","eyeColorLeft","bumpTexture","eyeColorRight","console","log","breeds","names","breed","useAmbientOcclusionFromMetallicTextureRed","base","multiple","clamp","age","lerp","_iterator2","_iteratorNormalCompletion2","_step2","x","y","z","sex","_iterator3","_iteratorNormalCompletion3","_step3","fatRate","_iterator4","_iteratorNormalCompletion4","_step4","weight","_iterator5","_iteratorNormalCompletion5","_step5","headAge","_iterator6","_iteratorNormalCompletion6","_step6","headFat","_iterator7","_iteratorNormalCompletion7","_step7","headAngle","_iterator8","_iteratorNormalCompletion8","_step8","headOval","_iterator9","_iteratorNormalCompletion9","_step9","headRound","_iterator10","_iteratorNormalCompletion10","_step10","headRectangular","_iterator11","_iteratorNormalCompletion11","_step11","headSquare","_iterator12","_iteratorNormalCompletion12","_step12","headTriangular","_iterator13","_iteratorNormalCompletion13","_step13","headInvertedTriangular","_iterator14","_iteratorNormalCompletion14","_step14","headDiamond","_iterator15","_iteratorNormalCompletion15","_step15","headParietalScaleDepth","_iterator16","_iteratorNormalCompletion16","_step16","headScaleDepth","_iterator17","_iteratorNormalCompletion17","_step17","headScaleHorizontally","_iterator18","_iteratorNormalCompletion18","_step18","headScaleVertically","_iterator19","_iteratorNormalCompletion19","_step19","headMoveDepth","_iterator20","_iteratorNormalCompletion20","_step20","headMoveHorizontally","_iterator21","_iteratorNormalCompletion21","_step21","headMoveVertically","_iterator22","_iteratorNormalCompletion22","_step22","foreheadBulge","_iterator23","_iteratorNormalCompletion23","_step23","foreheadScaleVertically","_iterator24","_iteratorNormalCompletion24","_step24","foreheadTempleBulge","_iterator25","_iteratorNormalCompletion25","_step25","eyebrowsBulge","_iterator26","_iteratorNormalCompletion26","_step26","eyebrowsAngle","_iterator27","_iteratorNormalCompletion27","_step27","eyebrowsMoveVertically","_iterator28","_iteratorNormalCompletion28","_step28","_iterator29","_iteratorNormalCompletion29","_step29","neckScaleDepth","_iterator30","_iteratorNormalCompletion30","_step30","neckScaleDepthOfNape","_iterator31","_iteratorNormalCompletion31","_step31","neckScaleHorizontally","_iterator32","_iteratorNormalCompletion32","_step32","neckScaleVertically","_iterator33","_iteratorNormalCompletion33","_step33","eyeBagVolume","_iterator34","_iteratorNormalCompletion34","_step34","eyeBagDistorsion","_iterator35","_iteratorNormalCompletion35","_step35","eyeBagHeight","_iterator36","_iteratorNormalCompletion36","_step36","eyeFoldAngle","_iterator37","_iteratorNormalCompletion37","_step37","eyeFoldVolume","_iterator38","_iteratorNormalCompletion38","_step38","eyeEpicanthus","_iterator39","_iteratorNormalCompletion39","_step39","eyeScaleHeight0","_iterator40","_iteratorNormalCompletion40","_step40","eyeScaleHeight1","_iterator41","_iteratorNormalCompletion41","_step41","eyeScaleHeight2","_iterator42","_iteratorNormalCompletion42","_step42","eyeScaleHeight3","_iterator43","_iteratorNormalCompletion43","_step43","eyeScaleHeight4","_iterator44","_iteratorNormalCompletion44","_step44","eyeMoveOuterCornerHorizontally","_iterator45","_iteratorNormalCompletion45","_step45","eyeMoveInnerCornerHorizontally","_iterator46","_iteratorNormalCompletion46","_step46","eyeMoveOuterCornerVertically","_iterator47","_iteratorNormalCompletion47","_step47","eyeMoveInnerCornerVertically","_iterator48","_iteratorNormalCompletion48","_step48","eyeScale","_iterator49","_iteratorNormalCompletion49","_step49","MainGame","location","search","Error","reg","RegExp","r","substr","match","user","unescape","camera","ArcRotateCamera","setPosition","setTarget","Zero","light","DirectionalLight","position","intensity","ShadowGenerator","useBlurExponentialShadowMap","useKernelBlur","blurKernel","pipeline","DefaultRenderingPipeline","samples","fxaaEnabled","imageProcessing","toneMappingEnabled","contrast","exposure","bloomEnabled","bloomKernel","bloomWeight","bloomThreshold","bloomScale","CatMesh","sceneLoading","SceneLoading","sceneHouse","Scenehouse","__loadHouseScene","__guiTextLoadingProgressText","__getUserCats","res","_json$i$catGene","catGene","CatGene","loadAssetsAsync","p","catMaker","loadTargetsAsync","build","meshs","cat_body","setVerticesData","VertexBuffer","PositionKind","run","__disposeGUI","allReady","fetch","headers","content-type","method","body","JSON","stringify","catch","document","removeChild","loading","cb","_this4","d","_this5","skeletons","FreeCamera","attachControl","str","getMeshByName","getVerticesData","touch","changeCatIndex","index","getElementById","start","on","_outline","Outline","initOutLine","outline","percents","obj","percent","_didIteratorError2","_iteratorError2","size","toFixed","Gene","parse","_breeds","convertHex2RGB","_age","_sex","_fatRate","_weight","_height","_headAge","_headFat","_headAngle","_headOval","_headRound","_headRectangular","_headSquare","_headTriangular","_headInvertedTriangular","_headDiamond","_headParietalScaleDepth","_headScaleDepth","_headScaleHorizontally","_headScaleVertically","_headMoveHorizontally","_headMoveVertically","_headMoveDepth","_foreheadBulge","_foreheadScaleVertically","_foreheadCranicShape","_foreheadTempleBulge","_eyebrowsBulge","_eyebrowsAngle","_eyebrowsMoveVertically","_neckDouble","_neckScaleDepth","_neckScaleDepthOfNape","_neckScaleHorizontally","_neckScaleVertically","_neckMoveDepth","_neckMoveHorizontally","_neckMoveVertically","_eyeColorLeft","_eyeColorRight","_eyeBagVolume","_eyeBagDistorsion","_eyeBagHeight","_eyeFoldAngle","_eyeFoldVolume","_eyeEpicanthus","_eyeScaleHeight0","_eyeScaleHeight1","_eyeScaleHeight2","_eyeScaleHeight3","_eyeScaleHeight4","_eyeMoveOuterCornerHorizontally","_eyeMoveInnerCornerHorizontally","_eyeMoveOuterCornerVertically","_eyeMoveInnerCornerVertically","_eyeMoveHorizontally","_eyeMoveVertically","_eyeScale","_breastCupSize","_breastFirmness","_breastVerticalPosition","_breastHorizontalPosition","_breastSharpness","_breastVolumeVerticalPosition","_breastNippleSize","_breastNipplePoint","_noseMoveVertically","_noseMoveHorizontally","_noseMoveDepth","_noseScaleVertically","_noseScaleHorizontally","_noseScaleDepth","_noseScaleNostrilsWidth","_noseScaleTipWidth","_noseMoveBaseVertically","_noseScaleWidth0","_noseScaleWidth1","_noseScaleWidth2","_noseCompression","_noseCurve","_noseGreek","_noseHump","_noseVolume","_noseNostrilsAngle","_noseMoveTipVertically","_noseSeptumAngle","_noseScaleNostrilsFlaring","_mouseScaleVertically","_mouseScaleHorizontally","_mouseScaleDepth","_mouseMoveVertically","_mouseMoveHorizontally","_mouseMoveDepth","_mouseScaleLowerlipHeight","_mouseScaleLowerlipWidth","_mouseScaleUpperlipHeight","_mouseScaleUpperlipWidth","_mouseCupidsBowWidth","_mouseDimples","_mouseLaughLines","_mouseLowerlipCurvedShape","_mouseMoveCornersVertically","_mouseScaleMiddleLowerlip","_mouseScaleLowerlipVolume","_mouseScalePhiltrumVolume","_mouseScaleUpperlipVolume","_mouseUpperlipCurvedShape","_mouseScaleMiddleUpperlip","_mouseCupidsBowShape","_earMoveDepth","_earMoveHorizontally","_earMoveVertically","_earScale","_earScaleHeight","_earScaleLobe","_earRatation","_earShape","_earWingShaped","_earFlapped","_chinToneOfSide","_chinCLeft","_chinScaleProminence","_chinScaleWidth","_chinScaleHeight","_chinScaleAngular","_chinScalePrognathism","_cheekOuterVolume","_cheekScaleProminence","_cheekInnerVolume","_cheekMoveVertically","_torsoScaleDepth","_torsoScaleHorizontally","_torsoScaleVertically","_torsoMoveHorizontally","_torsoMoveVertically","_torsoMoveDepth","_torsoConeScale","_torsoDrosiMuscle","_torsoPectoralMuscle","_torsoHipScaleDepth","_torsoHipScaleHorizontally","_torsoHipScaleVertically","_torsoHipMoveHorizontally","_torsoHipMoveVertically","_torsoHipMoveDepth","_torsoWaistVertically","_torsoStomachMuscular","_torsoStomachPregnancy","_torsoStomachNavieBump","_torsoStomachNaviePosition","_torsoButtocksVolume","_torsoPelvisMuscular","_torsoGenitalVolume","_armsLowerarmThinckness","_armsLowerarmLength","_armsLowerarmSinnyFat","_armsLowerarmMuscles","_armsUpperarmThinckness","_armsUpperarmlength","_armsUpperarmSinnyFat","_armsUpperarmMuscles","_handFingersDistence","_handFingersDiameter","_handFingerslength","_handScale","_handPosition","_fingernailLength","_legsUpperlegsHeight","_legsLowerlegsHeight","_legsKneeMoveHorizontally","_legsKneeMoveVertically","_legsLowerlegsScaleDepth","_legsLowerlegsHorizontally","_legsLowerlegsSinnyFat","_legsLowerlegsMuscles","_legsUpperlegsScaleDepth","_legsUpperlegsHorizontally","_legsUpperlegsSinnyFat","_legsUpperlegsMuscles","_tailLength","_tailWidth","hex","sColor","toLowerCase","test","sColorNew","slice","sColorChange","parseInt","_genes","_positions","_meshs","_mats","material","PBRMaterial","cat_eye_left_glass","m_cat_eye_glass_pbr_mr","cat_eye_right_glass","assetsIsLoaded","SceneHouse","_possibleConstructorReturn","__proto__","getPrototypeOf","call","skybox","createDefaultSkybox","shadowsEnabled","forEach","display","get","beginWeightedAnimation","skeleton","scaling","DeviceOrientationEvent","gamma","beta","advancedTexture","GUI","AdvancedDynamicTexture","CreateFullscreenUI","panel","debugPanel","addControl","debugChkBox","usePoissonSampling","useExponentialShadowMap","useCloseExponentialShadowMap","useBlurCloseExponentialShadowMap","usePercentageCloserFiltering","useContactHardeningShadow","forceBackFacesOnly","StackPanel","width","isVertical","paddingRight","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","func","initialValue","left","checkbox","Checkbox","height","isChecked","color","fontSize","onIsCheckedChangedObservable","add","header","AddHeader","isHorizontal","controlFirst","SceneLoaderProgressEvent","_catBreeds","FurMaterialDefines","props","DIFFUSE","HEIGHTMAP","CLIPPLANE","ALPHATEST","DEPTHPREPASS","POINTSIZE","FOG","NORMAL","UV1","UV2","VERTEXCOLOR","VERTEXALPHA","NUM_BONE_INFLUENCERS","BonesPerMesh","INSTANCES","HIGHLEVEL","rebuild","MaterialDefines","FurMaterial","serialize","expandToProperty","serializeAsVector3","serializeAsColor3","serializeAsTexture","diffuseColor","furLength","furAngle","furColor","furOffset","furSpacing","furGravity","furSpeed","furDensity","_disableLighting","_maxSimultaneousLights","highLevelFur","_furTime","PushMaterial","_highLevelFur","_furDensity","_furSpeed","_furGravity","_furSpacing","_furOffset","_furColor","_furAngle","_furLength","_diffuseColor","_diffuseTexture","_maskTexture","_heightTexture","alpha","_meshes","offsetFur","diffuseTexture","furTexture","maskTexture","furTime","mesh","subMesh","useInstances","isFrozen","_wasPreviouslyReady","effect","_materialDefines","defines","getScene","checkReadyOnEveryCall","_renderId","getRenderId","getEngine","_areTexturesDirty","texturesEnabled","StandardMaterial","DiffuseTextureEnabled","isReady","_needUVs","heightTexture","getCaps","maxVertexTextureImageUnits","markAsUnprocessed","MaterialHelper","PrepareDefinesForMisc","pointsCloud","fogEnabled","_shouldTurnAlphaTestOn","_needNormals","PrepareDefinesForLights","PrepareDefinesForFrameBoundValues","PrepareDefinesForAttributes","isDirty","markAsProcessed","resetCachedMaterial","fallbacks","EffectFallbacks","addFallback","HandleFallbacksForShadows","maxSimultaneousLights","addCPUSkinningFallback","attribs","NormalKind","UVKind","UV2Kind","ColorKind","PrepareAttributesForBones","PrepareAttributesForInstances","join","toString","samplers","uniformBuffers","PrepareUniformsAndSamplersList","uniformsNames","uniformBuffersNames","setEffect","createEffect","onCompiled","onError","indexParameters","world","_activeEffect","bindOnlyWorldMatrix","setMatrix","getTransformMatrix","BindBonesParameters","getCachedMaterial","setTexture","setFloat2","coordinatesIndex","level","getTextureMatrix","BindClipPlane","setFloat","pointSize","BindEyePosition","setColor4","lightsEnabled","disableLighting","BindLights","applyFog","fogMode","FOGMODE_NONE","getViewMatrix","BindFogParameters","setVector3","getDeltaTime","_afterBind","results","animations","activeTextures","texture","_get","prototype","forceDisposeEffect","mat","SerializationHelper","Clone","serializationObject","Serialize","customType","sourceMeshName","quality","source","rootUrl","Parse","executeWhenReady","sourceMesh","GenerateTexture","FurifyMesh","DynamicTexture","context","getContext","fillStyle","Math","floor","random","fillRect","getSize","update","wrapU","WRAP_ADDRESSMODE","wrapV","materials","pop","Tags","EnableFor","AddTagsTo","offsetMesh","clone","parent","_main","TextBlock","_splashIsReady","_starShaderTime","_starSpeed","GUI_BEGIN_ALPHA_CHANGE_TIME","GUI_MOVE_TO_RIGHT_BOTTOM_TIME","GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME","_particleSys","ParticleSystem","particleTexture","emitter","minEmitBox","maxEmitBox","color1","color2","colorDead","minSize","maxSize","minLifeTime","maxLifeTime","emitRate","blendMode","BLENDMODE_ONEONE","gravity","direction1","direction2","minAngularSpeed","maxAngularSpeed","PI","minEmitPower","maxEmitPower","updateSpeed","_aniEmitRate","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","_aniMinSize","_aniMaxSize","_aniMaxEmitPower","_aniUpdateSpeed","setKeys","frame","beginDirectAnimation","splashReadyCallback","splash","splashSkeletons","emissiveColor","alphaMode","ALPHA_ADD","splashIsReady","splashShow","GUI_LABEL_MOVE_TO_END","setTimeout","starShow","beginAnimation","GUI_LOADING_MESSAGE_SHOW","sound","Sound","loop","autoplay","volume","options","sideOrientation","Mesh","DOUBLESIDE","star","MeshBuilder","CreatePlane","starMaterial","starSpeed","aniSpeed","starShaderTimer","setInterval","starShaderTime","GUI_LABEL_REMOVE_TO_CENTER","opacity","opacityTimer","guis","textCompany","textBestOf","textPowerBy","clearInterval","_guis","_star","_starMaterial","_starShaderTimer","_ref3","renderAtIdealSize","fontFamily","resizeToFit","scaleY","scaleX","__guiTextRemoveCenter","__splashMeshShow","_ref4$","_width","internalValue","top","_top","duration","t0","t1","t2","w","h","ui","tb0","_left","tb1","tb2","timed","timer","_loadingText","LoadingProgressText","__guiTextRemoveToScreenRB","__soundPlay","__starShow","__guiTextLoadingProgressShow","_this6","__starBindDeviceOrientation","_this7","_this8","_text","_textCache","_rotateCursors","_rotateCursorsIndex","_errorCharas","_errorCharaTime","_TIMER","INIT_TEXTBLOCK","_textBlock","_this9","substring","ceil","TargetMaker","targetMesh","_sourceMesh","_targetMesh","filePath","fileName","error","result","POSITION_KIND","TARGET_NAMES","_targetsIsReady","_base","ASSETS_MANAGER","TARGETS","line","addMeshTask","loadedMeshes","onTaskSuccessObservable","task","onTasksDoneObservable","tasks","targetsIsReady","maker","Array","COMPUTE_FAT","COMPUTE_NOSE_MOVE_VERTICALLY","COMPUTE_NOSE_MOVE_HORIZONTALLY","COMPUTE_NOSE_MOVE_DEPTH","COMPUTE_NOSE_SCALE_VERTICALLY","COMPUTE_NOSE_SCALE_HORIZONTALLY","COMPUTE_NOSE_SCALE_DEPTH","COMPUTE_NOSE_SCALE_NOSTRILS_WIDTH","COMPUTE_NOSE_TIP_WIDTH","COMPUTE_NOSE_MOVE_BASE_VERTICALLY","COMPUTE_NOSE_SCALE_WIDTH_0","COMPUTE_NOSE_SCALE_WIDTH_1","COMPUTE_NOSE_SCALE_WIDTH_2","COMPUTE_NOSE_COMPRESSION","COMPUTE_NOSE_CURVE","COMPUTE_NOSE_GREEK","COMPUTE_NOSE_HUMP","COMPUTE_NOSE_VOLUME","COMPUTE_NOSE_NOSTRILS_ANGLE","COMPUTE_NOSE_MOVE_TIP_VERTICALLY","COMPUTE_NOSE_SEPTUM_ANGLE","COMPUTE_NOSE_SCALE_NOSTRILS_FLARING","GENE","BASE_POSITION","VALUE","NAME","LERP"],"mappings":"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","file":"static/js/main.53ae3904f1b47797f54e.js","sourcesContent":["import BABYLON from 'babylonjs'\r\n// eslint-disable-next-line no-unused-vars\r\nimport {Game, SceneObjectAssets, SceneObjectAssetsLoaderProgressEvent} from './index'\r\n\r\nconst [{ImportMeshAsync: asyncImport}] = [BABYLON.SceneLoader]\r\n\r\n/**\r\n * 场景内的对象\r\n *\r\n * @export\r\n * @class SceneObject\r\n */\r\nexport default class SceneObject {\r\n  /**\r\n   * 游戏\r\n   *\r\n   * @type {Game}\r\n   * @memberof SceneObject\r\n   */\r\n  get game () { return this._game }\r\n  set game (value) { this._game = value }\r\n  /**\r\n   * 名称\r\n   *\r\n   * @type {string}\r\n   * @memberof SceneObject\r\n   */\r\n  get name () { return this._name }\r\n  set name (val) { this._name = val }\r\n  /**\r\n   * 根节点\r\n   *\r\n   * @type {BABYLON.Mesh}\r\n   * @memberof SceneObject\r\n   */\r\n  get root () { return this._root }\r\n  set root (val) { this._root = val }\r\n  /**\r\n   * 子节点\r\n   *\r\n   * @type {Map<string, BABYLON.Mesh>}\r\n   * @memberof SceneObject\r\n   */\r\n  get childs () { return this._childs }\r\n  set childs (val) { this._childs = val }\r\n  /**\r\n   * 资源\r\n   *\r\n   * @type {SceneObjectAssets}\r\n   * @memberof SceneObject\r\n   */\r\n  get assets () { return this._assets }\r\n  set assets (val) { this._assets = val }\r\n  /**\r\n   * 对象是否可见\r\n   *\r\n   * @type {boolean}\r\n   * @memberof SceneObject\r\n   */\r\n  get display () { return this._display }\r\n  set display (val) {\r\n    if (this._display !== val) {\r\n      this._display = val\r\n      this.root.visibility = val ? 1 : 0\r\n      for (let mesh of this.childs.values()) mesh.visibility = val ? 1 : 0\r\n    }\r\n  }\r\n  /**\r\n   * 标记资源已经被加载\r\n   *\r\n   * @type {boolean}\r\n   * @memberof SceneObject\r\n   */\r\n  get assetsIsLoaded () { return this._assetsIsLoaded }\r\n\r\n  /**\r\n   * 构造函数\r\n   *\r\n   * @param {Game} game 游戏\r\n   * @param {String} name 名称\r\n   * @param {SceneObjectAssets} assets 资源实例\r\n   * @memberof SceneObject\r\n   */\r\n  constructor (game, name, assets) {\r\n    this._game = game\r\n    this._name = name\r\n    this._root = null\r\n    this._childs = new Map()\r\n    this._assets = assets || null\r\n  }\r\n\r\n  /**\r\n   * 异步加载资源进度函数\r\n   *\r\n   * @typedef {function(SceneObjectAssetsLoaderProgressEvent)} loadAssetsCallback\r\n   * @callback loadAssetsCallback\r\n   * @param {SceneObjectAssetsLoaderProgressEvent} 进度事件\r\n   */\r\n  /**\r\n   * 异步加载资源\r\n   * @param {boolean} [justChilds=false] 仅加载子节点包含的名称，默认 false\r\n   * @param {loadAssetsCallback} onProgress 进度函数\r\n   * @param {boolean} [hidden=false] 加载完毕自动隐藏，默认 true\r\n   */\r\n  async loadAssetsAsync (justChilds = false, onProgress = e => {}, hidden = true) {\r\n    const [{scene}, {path, file, root, childs}] = [this.game, this.assets]\r\n    this._assetsIsLoaded = false\r\n    // 清理资源\r\n    this.root && this.root.dispose()\r\n    this._root = null\r\n    this._childs = new Map()\r\n    // 加载资源\r\n    await asyncImport(justChilds ? childs : '', path, file, scene,\r\n      ({loaded: l, total: t, lengthComputable: c}) => {\r\n        onProgress(new SceneObjectAssetsLoaderProgressEvent(c, l, t))\r\n      })\r\n      .then(({meshes: ms}) => {\r\n        ms.map(m => {\r\n          m.visibility = 0\r\n          if (root === m.name) this.root = m\r\n          else if (childs.includes(m.name)) this.childs.set(m.name, m)\r\n          m.visibility = hidden ? 0 : 1\r\n          m.receiveShadows = true // 接受阴影\r\n          this.game.shadowGenerator.getShadowMap().renderList.push(m)\r\n        })\r\n        this._assetsIsLoaded = true\r\n      })\r\n\r\n    return this\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/scene-object.js","/**\r\n * 场景内对象的资源类\r\n *\r\n * @export\r\n * @class SceneObjectAssets\r\n */\r\nexport default class SceneObjectAssets {\r\n  /**\r\n   * 资源路径\r\n   * @type {String}\r\n   * @memberof SceneObjectAssets\r\n   */\r\n  get path () { return this._path }\r\n  set path (val) { this._path = val }\r\n\r\n  /**\r\n   * 资源名称\r\n   * @type {String}\r\n   * @memberof SceneObjectAssets\r\n   */\r\n  get file () { return this._file }\r\n  set file (val) { this._file = val }\r\n\r\n  /**\r\n   * 根节点资源名称\r\n   * @type {String}\r\n   * @memberof SceneObjectAssets\r\n   */\r\n  get root () { return this._root }\r\n  set root (val) { this._root = val }\r\n\r\n  /**\r\n   * 子节点资源名称\r\n   * @type {String[]}\r\n   * @memberof SceneObjectAssets\r\n   */\r\n  get childs () { return this._childs }\r\n  set childs (val) { this._childs = val }\r\n\r\n  /**\r\n   * SceneObjectAssets 构造函数\r\n   * @param {String} path 资源路径\r\n   * @param {String} file 资源名称\r\n   * @param {String} root 根节点资源名称\r\n   * @param {String[]} childs 子节点资源名称\r\n   * @memberof SceneObjectAssets\r\n   */\r\n  constructor (path, file, root = '__root__', childs = []) {\r\n    this._path = path\r\n    this._file = file\r\n    this._root = root\r\n    this._childs = childs\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/scene-object-assets.js","/**\r\n * 用户\r\n *\r\n * @class User\r\n */\r\nexport default class User {\r\n  /**\r\n   * 用户令牌\r\n   *\r\n   * @type {string}\r\n   * @memberof User\r\n   */\r\n  get token () { return this._token }\r\n  set token (val) { this._token = val }\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param {string} token\r\n   * @memberof User\r\n   */\r\n  constructor (token) {\r\n    this._token = token\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/user.js","export default class Breeds {\r\n  constructor () {\r\n    this._siamese = 0\r\n    this._ragdoll = 0\r\n    this._scottishFold = 0\r\n    this._britishShorthair = 0\r\n    this._persian = 0\r\n    this._russianBlue = 0\r\n    this._americanShorthair = 0\r\n    this._exotic = 0\r\n    this._norwegianForest = 0\r\n    this._bombay = 0\r\n    this._maineCoon = 0\r\n    this._egyptianMau = 0\r\n    this._canadianHairless = 0\r\n  }\r\n\r\n  // #region get properties\r\n  get siamese () { return this._siamese }\r\n  get ragdoll () { return this._ragdoll }\r\n  get scottishFold () { return this._scottishFold }\r\n  get britishShorthair () { return this._britishShorthair }\r\n  get persian () { return this._persian }\r\n  get russianBlue () { return this._russianBlue }\r\n  get americanShorthair () { return this._americanShorthair }\r\n  get exotic () { return this._exotic }\r\n  get norwegianForest () { return this._norwegianForest }\r\n  get bombay () { return this._bombay }\r\n  get maineCoon () { return this._maineCoon }\r\n  get egyptianMau () { return this._egyptianMau }\r\n  get canadianHairless () { return this._canadianHairless }\r\n  // #endregion\r\n\r\n  // #region set properties\r\n  set siamese (num) { this._siamese = num }\r\n  set ragdoll (num) { this._ragdoll = num }\r\n  set scottishFold (num) { this._scottishFold = num }\r\n  set britishShorthair (num) { this._britishShorthair = num }\r\n  set persian (num) { this._persian = num }\r\n  set russianBlue (num) { this._russianBlue = num }\r\n  set americanShorthair (num) { this._americanShorthair = num }\r\n  set exotic (num) { this._exotic = num }\r\n  set norwegianForest (num) { this._norwegianForest = num }\r\n  set bombay (num) { this._bombay = num }\r\n  set maineCoon (num) { this._maineCoon = num }\r\n  set egyptianMau (num) { this._egyptianMau = num }\r\n  set canadianHairless (num) { this._canadianHairless = num }\r\n  // #endregion\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/cat-breeds/index.js","import * as BABYLON from 'babylonjs'\r\n\r\nBABYLON.Effect.ShadersStore['starVertexShader'] = `\r\n  precision highp float;\r\n  // Attributes\r\n  attribute vec3 position;\r\n  attribute vec2 uv;\r\n  \r\n  // Uniforms\r\n  uniform mat4 worldViewProjection;\r\n  \r\n  // Varying\r\n  varying vec2 vUV;\r\n  \r\n  void main(void) {\r\n    gl_Position = worldViewProjection * vec4(position, 1.);\r\n    vUV = uv;\r\n  }\r\n`\r\nBABYLON.Effect.ShadersStore['starPixelShader'] = `\r\n  precision highp float;\r\n\r\n  uniform float time;\r\n\r\n  uniform sampler2D textureSampler;\r\n\r\n  varying vec2 vUV;\r\n\r\n  const float tau = 6.28318530717958647692;\r\n\r\n  // Gamma correction\r\n  #define GAMMA (2.2)\r\n\r\n  vec3 ToLinear(in vec3 col) {\r\n    // simulate a monitor, converting colour values into light values\r\n    return pow(col, vec3(GAMMA));\r\n  }\r\n\r\n  vec3 ToGamma(in vec3 col) {\r\n    // convert back into colour values, so the correct light will come out of the monitor\r\n    return pow(col, vec3(1.0 / GAMMA));\r\n  }\r\n\r\n  vec4 Noise(in ivec2 x) {\r\n    return texture2D(textureSampler, (vec2(x) + 0.5) / 256.0, -100.0);\r\n  }\r\n\r\n  vec4 Rand( in int x ) {\r\n    vec2 uv;\r\n    uv.x = (float(x) + 0.5) / 256.0;\r\n    uv.y = (floor(uv.x) + 0.5) / 256.0;\r\n    return texture2D(textureSampler, uv, -100.0);\r\n  }\r\n\r\n  void main(void) {\r\n    vec3 ray;\r\n    ray.x = vUV.x;\r\n    ray.y = vUV.y;\r\n    ray.xy = 2.0*(vUV.xy - vec2(1).xy*.5)/1.;\r\n    ray.z = 1.0;\r\n\r\n    float offset = time * 0.5;\r\n    float speed2 = (cos(offset) + 1.0) * 2.0;\r\n    float speed = speed2 + .1;\r\n    offset += sin(offset) * .96;\r\n    offset *= 2.0;\r\n\r\n    vec3 col = vec3(0);\r\n\r\n    vec3 stp = ray / max(abs(ray.x), abs(ray.y));\r\n\r\n    vec3 pos = 2.0 * stp + .5;\r\n    for (int i = 0; i < 8; i++) {\r\n      float z = Noise(ivec2(pos.xy)).x;\r\n      z = fract(z - offset);\r\n      float d = 50.0 * z - pos.z;\r\n      float w = pow(max(0.0, 1.0 - 8.0 * length(fract(pos.xy)- .5)), 2.0);\r\n      vec3 c = max(vec3(0), vec3(1.0 - abs(d + speed2 * .5) / speed, 1.0 - abs(d) / speed, 1.0 - abs(d - speed2 * .5) / speed));\r\n      col += 1.5 * (1.0 - z) * c * w;\r\n      pos += stp;\r\n    }\r\n\r\n    gl_FragColor = vec4(ToGamma(col), 1.);\r\n    //gl_FragColor = vec4(ray.g, 0, 0, 1.);\r\n  }\r\n`\r\n\r\nfunction StarMaterial (name, scene) {\r\n  return new BABYLON.ShaderMaterial('shader', scene, {\r\n    vertex: 'star', fragment: 'star'\r\n  }, {\r\n    attributes: ['position', 'normal', 'uv'],\r\n    uniforms: [ 'world', 'worldView', 'worldViewProjection', 'view', 'projection', 'time', 'direction' ]\r\n  })\r\n}\r\n\r\nBABYLON.StarMaterial = StarMaterial\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/star-material/index.js","import BABYLON from 'babylonjs'\r\n\r\nimport {CatMaker, CatMesh, User} from './index' // eslint-disable-line\r\n\r\n/**\r\n * 游戏类\r\n *\r\n * @export\r\n * @class Game\r\n */\r\nexport default class Game {\r\n  /**\r\n   * Canvas DOM 元素\r\n   *\r\n   * @type {HTMLCanvasElement}\r\n   * @memberof Game\r\n   */\r\n  get canvas () { return this._canvas }\r\n  set canvas (val) { this._canvas = val }\r\n  /**\r\n   * Babylon 引擎\r\n   *\r\n   * @type {BABYLON.Engine}\r\n   * @memberof Game\r\n   */\r\n  get engine () { return this._engine }\r\n  set engine (val) { this._engine = val }\r\n  /**\r\n   * 主场景\r\n   *\r\n   * @type {BABYLON.Scene}\r\n   * @memberof Game\r\n   */\r\n  get scene () { return this._scene }\r\n  set scene (val) { this._scene = val }\r\n  /**\r\n   * 主摄像机\r\n   *\r\n   * @type {BABYLON.Camera}\r\n   * @memberof Game\r\n   */\r\n  get camera () { return this._camera }\r\n  set camera (val) { this._camera = val }\r\n  /**\r\n   * 天空盒\r\n   *\r\n   * @type {BABYLON.Mesh}\r\n   * @memberof Game\r\n   */\r\n  get skybox () { return this._skybox }\r\n  set skybox (val) { this._skybox = val }\r\n  /**\r\n   * 主光源\r\n   *\r\n   * @type {BABYLON.Light}\r\n   * @memberof Game\r\n   */\r\n  get light () { return this._light }\r\n  set light (val) { this._light = val }\r\n  /**\r\n   * 主阴影\r\n   *\r\n   * @type {BABYLON.ShadowGenerator}\r\n   * @memberof Game\r\n   */\r\n  get shadowGenerator () { return this._shadowGenerator }\r\n  set shadowGenerator (val) { this._shadowGenerator = val }\r\n  /**\r\n   * 默认渲染管线\r\n   *\r\n   * @type {BABYLON.PostProcessRenderPipeline}\r\n   * @memberof Game\r\n   */\r\n  get pipeline () { return this._pipeline }\r\n  set pipeline (val) { this._pipeline = val }\r\n  /**\r\n   * 资源管理器\r\n   *\r\n   * @type {BABYLON.AssetsManager}\r\n   * @memberof Game\r\n   */\r\n  get assetsManager () { return this._assetsManager }\r\n  set assetsManager (val) { this._assetsManager = val }\r\n  /**\r\n   * 猫生成器\r\n   *\r\n   * @type {CatMaker}\r\n   * @memberof Game\r\n   */\r\n  get catMaker () { return this._catMaker }\r\n  set catMaker (val) { this._catMaker = val }\r\n  /**\r\n   * 所有的猫\r\n   *\r\n   * @type {CatMesh}\r\n   *\r\n   * @memberof Game\r\n   */\r\n  get cat () { return this._cat }\r\n  set cat (val) { this._cat = val }\r\n  /**\r\n   * 用户\r\n   *\r\n   * @type {User}\r\n   * @memberof Game\r\n   */\r\n  get user () { return this._user }\r\n  set user (val) { this._user = val }\r\n\r\n  /**\r\n   * 构造函数\r\n   *\r\n   * @param {HTMLCanvasElement} canvas - Canvas DOM 元素，默认为：null\r\n   * @memberof Game\r\n   */\r\n  constructor (canvas) {\r\n    this.canvas = canvas\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   *\r\n   * @returns {Game} 自身\r\n   * @readonly\r\n   * @memberof Game\r\n   */\r\n  init () {\r\n    this.initBefore()\r\n    // 初始化引擎\r\n    this._engine = new BABYLON.Engine(this.canvas, true, null, false)\r\n    // 初始化场景\r\n    this._scene = new BABYLON.Scene(this.engine)\r\n    this._scene.clearColor = new BABYLON.Color4(0, 0, 0, 1)\r\n    // 资源管理器\r\n    this._assetsManager = new BABYLON.AssetsManager(this.scene)\r\n\r\n    // 注册浏览器尺寸变更事件\r\n    window.addEventListener &&\r\n    window.addEventListener('resize', () => this.engine.resize())\r\n\r\n    this.initAfter()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * 初始化 执行之前函数\r\n   *\r\n   * @type {function}\r\n   * @memberof Game\r\n   */\r\n  initBefore () {}\r\n\r\n  /**\r\n   * 初始化 执行之后函数\r\n   *\r\n   * @type {function}\r\n   * @memberof Game\r\n   */\r\n  initAfter () {}\r\n\r\n  /**\r\n   * 开始游戏\r\n   *\r\n   * @type {function}\r\n   * @param {boolean} [debug=false] 是否开启Babylon JS Debug视图层，默认 false\r\n   * @readonly\r\n   * @memberof Game\r\n   */\r\n  start (debug = false) {\r\n    this.startBefore()\r\n\r\n    // 引擎开始循环渲染\r\n    this.engine.runRenderLoop(() => this.scene.render())\r\n    // 是否渲染Debug层\r\n    debug && this.scene.debugLayer.show()\r\n\r\n    this.startAfter()\r\n  }\r\n\r\n  /**\r\n   * 开始游戏 之前执行函数\r\n   *\r\n   * @type {function}\r\n   * @memberof Game\r\n   */\r\n  startBefore () {} // Interface\r\n\r\n  /**\r\n   * 开始游戏 之后执行函数\r\n   *\r\n   * @type {function}\r\n   * @memberof Game\r\n   */\r\n  startAfter () {} // Interface\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/game.js","/**\r\n * 猫的种族\r\n *\r\n * @export\r\n * @class CatBreeds\r\n */\r\nexport default class CatBreeds {\r\n  /**\r\n   * 构造函数\r\n   *\r\n   * @param {any} json 后端过来的种族JSON\r\n   * @memberof CatBreeds\r\n   */\r\n  constructor (json) {\r\n    Object.keys(json).map(key => {\r\n      this[`_${key}`] = json[key]\r\n    })\r\n  }\r\n\r\n  // #region get properties\r\n  /**\r\n   * 暹罗猫\r\n   *\r\n   * @type {number}\r\n   * @memberof CatBreeds\r\n   */\r\n  get siamese () { return this._siamese }\r\n  set siamese (num) { this._siamese = num }\r\n  /**\r\n   * 布偶猫\r\n   *\r\n   * @type {number}\r\n   * @memberof CatBreeds\r\n   */\r\n  get ragdoll () { return this._ragdoll }\r\n  set ragdoll (num) { this._ragdoll = num }\r\n  get scottishFold () { return this._scottishFold }\r\n  get britishShorthair () { return this._britishShorthair }\r\n  get persian () { return this._persian }\r\n  get russianBlue () { return this._russianBlue }\r\n  get americanShorthair () { return this._americanShorthair }\r\n  get exotic () { return this._exotic }\r\n  get norwegianForest () { return this._norwegianForest }\r\n  get bombay () { return this._bombay }\r\n  get maineCoon () { return this._maineCoon }\r\n  get egyptianMau () { return this._egyptianMau }\r\n  get canadianHairless () { return this._canadianHairless }\r\n  // #endregion\r\n\r\n  // #region set properties\r\n  set scottishFold (num) { this._scottishFold = num }\r\n  set britishShorthair (num) { this._britishShorthair = num }\r\n  set persian (num) { this._persian = num }\r\n  set russianBlue (num) { this._russianBlue = num }\r\n  set americanShorthair (num) { this._americanShorthair = num }\r\n  set exotic (num) { this._exotic = num }\r\n  set norwegianForest (num) { this._norwegianForest = num }\r\n  set bombay (num) { this._bombay = num }\r\n  set maineCoon (num) { this._maineCoon = num }\r\n  set egyptianMau (num) { this._egyptianMau = num }\r\n  set canadianHairless (num) { this._canadianHairless = num }\r\n  // #endregion\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/cat-breeds.js","import * as BABYLON from 'babylonjs' // eslint-disable-line\r\n\r\nimport { Game, CatMesh, CatGene } from './index' // eslint-disable-line\r\n/**\r\n * 猫生成器\r\n *\r\n * @export\r\n * @class CatMaker\r\n */\r\nexport default class CatMaker {\r\n  /**\r\n   * 游戏\r\n   *\r\n   * @type {Game}\r\n   * @memberof CatMaker\r\n   */\r\n  get game () { return this._game }\r\n  set game (val) { this._game = val }\r\n  /**\r\n   * 全部目标数据\r\n   *\r\n   * @type {Object.<string, Object.<number, BABYLON.Vector3>>}\r\n   * @memberof CatMaker\r\n   */\r\n  get targets () { return this._targets }\r\n  set targets (val) { this._targets = val }\r\n  /**\r\n   * 基本模型Position数据\r\n   *\r\n   * @type {Number[]}\r\n   * @memberof CatMaker\r\n   */\r\n  get basePosition () { return this._basePosition }\r\n  set basePosition (val) { this._basePosition = val }\r\n  /**\r\n   * 全部贴图\r\n   *\r\n   * @type {Object.<string, BABYLON.Texture>}\r\n   * @memberof CatMaker\r\n   */\r\n  get textures () { return this._textures }\r\n  set textures (val) { this._textures = val }\r\n\r\n  /**\r\n   * 构造函数\r\n   *\r\n   * @param {Game} game 游戏\r\n   * @memberof CatMaker\r\n   */\r\n  constructor (game) {\r\n    this._game = game\r\n    this._targets = {}\r\n    this._basePosition = []\r\n    this._textures = {}\r\n  }\r\n  /**\r\n   * 加载目标资源文件\r\n   *\r\n   * @param {function} callback\r\n   * @memberof CatMaker\r\n   */\r\n  loadTargets (callback) {\r\n    // 加载所有贴图\r\n    this.textures.env = BABYLON.CubeTexture.CreateFromPrefilteredData('./static/assets/resources/hdri/skybox_2.dds', this.game.scene)\r\n\r\n    this.textures.eyeBaseColorLeft = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_left_pbr_mr_baseColor.png')\r\n    this.textures.eyeNormalLeft = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_left_pbr_mr_normal.png')\r\n    this.textures.eyeOcclusionRoughnessMetallicLeft = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_left_pbr_mr_occlusionRoughnessMetallic.png')\r\n    this.textures.eyeBaseColorRight = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_right_pbr_mr_baseColor.png')\r\n    this.textures.eyeNormalRight = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_right_pbr_mr_normal.png')\r\n    this.textures.eyeOcclusionRoughnessMetallicRight = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_right_pbr_mr_occlusionRoughnessMetallic.png')\r\n    this.textures.eyeBaseColorGlass = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_glass_pbr_mr_baseColor.png')\r\n    this.textures.eyeNormalGlass = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_glass_pbr_mr_baseColor.png')\r\n    this.textures.eyeOcclusionRoughnessMetallicGlass = new BABYLON.Texture('./static/assets/resources/cat/textures/eye/m_cat_eye_glass_pbr_mr_baseColor.png')\r\n\r\n    this.textures.siameseBaseColor = new BABYLON.Texture('./static/assets/resources/cat/textures/siamese/m_cat_body_pbr_mr_baseColor.png')\r\n    this.textures.siameseNormalColor = new BABYLON.Texture('./static/assets/resources/cat/textures/siamese/m_cat_body_pbr_mr_normal.png')\r\n    this.textures.siameseOcclusionRoughnessMetallic = new BABYLON.Texture('./static/assets/resources/cat/textures/siamese/m_cat_body_pbr_mr_occlusionRoughnessMetallic.png')\r\n\r\n    this.textures.ragdollBaseColor = new BABYLON.Texture('./static/assets/resources/cat/textures/ragdoll/m_cat_body_pbr_mr_baseColor.png')\r\n    this.textures.ragdollNormalColor = new BABYLON.Texture('./static/assets/resources/cat/textures/ragdoll/m_cat_body_pbr_mr_normal.png')\r\n    this.textures.ragdollOcclusionRoughnessMetallic = new BABYLON.Texture('./static/assets/resources/cat/textures/ragdoll/m_cat_body_pbr_mr_occlusionRoughnessMetallic.png')\r\n\r\n    this.textures.persianBaseColor = new BABYLON.Texture('./static/assets/resources/cat/textures/persian/m_cat_body_pbr_mr_baseColor.png')\r\n    this.textures.persianNormalColor = new BABYLON.Texture('./static/assets/resources/cat/textures/persian/m_cat_body_pbr_mr_normal.png')\r\n    this.textures.persianOcclusionRoughnessMetallic = new BABYLON.Texture('./static/assets/resources/cat/textures/persian/m_cat_body_pbr_mr_occlusionRoughnessMetallic.png')\r\n\r\n    this.game.assetsManager.reset() // 资源管理器初始化\r\n\r\n    let taskBaseTarget = this.game.assetsManager.addTextFileTask('target-base-file-load-task', `./static/assets/resources/cat/target/cat.target`)\r\n    let taskTargets = this.game.assetsManager.addTextFileTask('target-file-load-task', `./static/assets/resources/cat/target/cat-target.target`)\r\n\r\n    let _taskBaseSuccess = false\r\n    let _taskTargetsSuccess = false\r\n\r\n    taskBaseTarget.onSuccess = ({text: str}) => {\r\n      const arr = str.split('|') // 点字符串数组\r\n      for (let i = 0; i < arr.length; i++) this.basePosition.push(Number(arr[i]))\r\n      _taskBaseSuccess = true\r\n      _taskTargetsSuccess && callback && callback()\r\n    }\r\n    taskTargets.onSuccess = ({text: str}) => {\r\n      const sections = str.split('\\n*') // 段落数组\r\n\r\n      for (let i = 0; i < sections.length; i++) {\r\n        let lines = sections[i].split('\\n')\r\n        let name = lines[0].replace('*', '').trim()\r\n\r\n        let target = {}\r\n        for (let i = 1; i < lines.length; i++) {\r\n          let arr = lines[i].split(' ')\r\n          target[arr[0]] = new BABYLON.Vector3(Number(arr[1]), Number(arr[2]), Number(arr[3]))\r\n        }\r\n        this.targets[name] = target\r\n        _taskTargetsSuccess = true\r\n        _taskBaseSuccess && callback && callback()\r\n      }\r\n    }\r\n    // 资源管理器启动加载任务\r\n    this.game.assetsManager.load()\r\n  }\r\n  /**\r\n   * 同步加载目标资源文件\r\n   *\r\n   * @param {function} callback\r\n   * @memberof CatMaker\r\n   */\r\n  loadTargetsAsync () {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadTargets(function () { resolve() })\r\n    })\r\n  }\r\n  /**\r\n   * 范围化数字\r\n   *\r\n   * @param {any} v\r\n   * @param {any} min\r\n   * @param {any} max\r\n   * @returns {number}\r\n   * @memberof CatMaker\r\n   */\r\n  clamp (v, min, max) {\r\n    return v > max ? max : v < min ? min : v\r\n  }\r\n  /**\r\n   * 重建一只猫\r\n   *\r\n   * @param {CatMesh} cat 猫\r\n   * @memberof CatMaker\r\n   */\r\n  async build (cat) {\r\n    for (let hash of Object.keys(cat.genes)) {\r\n      let gene = cat.genes[hash]\r\n      let pos = [].concat(cat.basePosition)\r\n\r\n      await this.COMPUTE_AGE(pos, gene, cat.basePosition)\r\n        .then(pos => this.COMPUTE_SEX(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_WEIGHT(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_HEIGHT(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_FATRATE(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => this.COMPUTE_HEAD_AGE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_HEAD_FAT(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_HEAD_ANGLE(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => this.COMPUTE_HEAD_OVAL(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_ROUND(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_RECTANGULAR(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_SQUARE(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_TRIANGULAR(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_TRIANGULAR_INVERTED(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_DIAMOND(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_PARIETAL_SCALE_DEPTH(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_DEPTH(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_HORIZONTALLY(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_VERTICALLY(pos, gene, cat.basePosition, 0.6))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_DEPTH(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_HORIZONTALLY(pos, gene, cat.basePosition, 0.2))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_VERTICALLY(pos, gene, cat.basePosition, 0.2))\r\n\r\n        .then(pos => this.COMPUTE_FOREHEAD_BULGE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_FOREHEAD_SCALE_VERTICALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_FOREHEAD_CRANIC_SHAPE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_FOREHEAD_TEMPLE_BULGE(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => this.COMPUTE_EYEBROWS_BULGE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYEBROWS_ANGLE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYEBROWS_MOVE_VERTICALLY(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => this.COMPUTE_NECK_DOUBLE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_DEPTH(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_DEPTH_OF_NAPE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_HORIZONTALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_VERTICALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_DEPTH(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_HORIZONTALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_VERTICALLY(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => this.COMPUTE_EYE_BAG_VOLUME(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_BAG_DISTORSION(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_BAG_HEIGHT(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_FOLD_ANGLE(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_FOLD_VOLUME(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_EPICANTHUS(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_0(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_1(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_2(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_3(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_4(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_OUTER_CORNER_HORIZONTALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_INNER_CORNER_HORIZONTALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_OUTER_CORNER_VERTICALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_INNER_CORNER_VERTICALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_HORIZONTALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_VERTICALLY(pos, gene, cat.basePosition))\r\n        .then(pos => this.COMPUTE_EYE_SCALE(pos, gene, cat.basePosition))\r\n\r\n        .then(pos => {\r\n          cat.positions[hash] = pos\r\n        })\r\n        .then(() => this.COMPUTE_EYE_COLOR(gene, cat))\r\n        .then(() => this.COMPUTE_BREEDS(gene, cat))\r\n    }\r\n  }\r\n  /** 计算模型Promise返回项\r\n   * @typedef {Number[]} computePromiseObject\r\n   */\r\n  /**\r\n   *\r\n   *\r\n   * @param {CatGene} gene\r\n   * @param {CatMesh} cat\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_COLOR (gene, cat) {\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].metallic = 1\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].roughness = 0\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].albedoColor = new BABYLON.Color3(0, 0, 0)\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].albedoTexture = this.textures.eyeBaseColorGlass\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].albedoTexture.hasAlpha = true\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].bumpTexture = this.textures.eyeNormalGlass\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].metallicTexture = this.textures.eyeOcclusionRoughnessMetallicGlass\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].useRoughnessFromMetallicTextureAlpha = false\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].useRoughnessFromMetallicTextureGreen = true\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].useMetallnessFromMetallicTextureBlue = true\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].useParallax = true\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].useParallaxOcclusion = true\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].parallaxScaleBias = 0.1\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].useAlphaFromAlbedoTexture = true\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].useRadianceOverAlpha = true\r\n    cat.mats['m_cat_eye_glass_pbr_mr'].environmentTexture = this.textures.env\r\n    // 折射\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].linkRefractionWithTransparency = true\r\n    // cat.mats['m_cat_eye_glass_pbr_mr'].indexOfRefraction = 0.52\r\n\r\n    cat.mats['m_cat_eye_left_pbr_mr'].metallic = 1\r\n    cat.mats['m_cat_eye_left_pbr_mr'].roughness = 1\r\n    cat.mats['m_cat_eye_left_pbr_mr'].albedoColor = gene.eyeColorLeft\r\n    cat.mats['m_cat_eye_left_pbr_mr'].albedoTexture = this.textures.eyeBaseColorLeft\r\n    cat.mats['m_cat_eye_left_pbr_mr'].bumpTexture = this.textures.eyeNormalLeft\r\n    cat.mats['m_cat_eye_left_pbr_mr'].metallicTexture = this.textures.eyeOcclusionRoughnessMetallicLeft\r\n    cat.mats['m_cat_eye_left_pbr_mr'].useRoughnessFromMetallicTextureAlpha = false\r\n    cat.mats['m_cat_eye_left_pbr_mr'].useRoughnessFromMetallicTextureGreen = true\r\n    cat.mats['m_cat_eye_left_pbr_mr'].useMetallnessFromMetallicTextureBlue = true\r\n    // cat.mats['m_cat_eye_left_pbr_mr'].useParallax = true\r\n    // cat.mats['m_cat_eye_left_pbr_mr'].useParallaxOcclusion = true\r\n    // cat.mats['m_cat_eye_left_pbr_mr'].parallaxScaleBias = 0.1\r\n    cat.mats['m_cat_eye_left_pbr_mr'].environmentTexture = this.textures.env\r\n\r\n    cat.mats['m_cat_eye_right_pbr_mr'].metallic = 1\r\n    cat.mats['m_cat_eye_right_pbr_mr'].roughness = 1\r\n    cat.mats['m_cat_eye_right_pbr_mr'].albedoColor = gene.eyeColorRight\r\n    cat.mats['m_cat_eye_right_pbr_mr'].albedoTexture = this.textures.eyeBaseColorRight\r\n    cat.mats['m_cat_eye_right_pbr_mr'].bumpTexture = this.textures.eyeNormalRight\r\n    cat.mats['m_cat_eye_right_pbr_mr'].metallicTexture = this.textures.eyeOcclusionRoughnessMetallicRight\r\n    cat.mats['m_cat_eye_right_pbr_mr'].useRoughnessFromMetallicTextureAlpha = false\r\n    cat.mats['m_cat_eye_right_pbr_mr'].useRoughnessFromMetallicTextureGreen = true\r\n    cat.mats['m_cat_eye_right_pbr_mr'].useMetallnessFromMetallicTextureBlue = true\r\n    // cat.mats['m_cat_eye_right_pbr_mr'].useParallax = true\r\n    // cat.mats['m_cat_eye_right_pbr_mr'].useParallaxOcclusion = true\r\n    // cat.mats['m_cat_eye_right_pbr_mr'].parallaxScaleBias = 0.1\r\n    cat.mats['m_cat_eye_right_pbr_mr'].environmentTexture = this.textures.env\r\n  }\r\n  /**\r\n   * 计算种族\r\n   *\r\n   * @param {CatGene} gene\r\n   * @param {CatMesh} cat\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_BREEDS (gene, cat) {\r\n    console.log(gene.breeds)\r\n    let names = ['americanShorthair', 'bombay', 'britishShorthair', 'canadianHairless', 'egyptianMau', 'exotic', 'maineCoon', 'norwegianForest', 'persian', 'ragdoll', 'russianBlue', 'scottishFold', 'siamese']\r\n    let breed = 'americanShorthair'\r\n    for (let i = 1; i < names.length; i++) {\r\n      breed = gene.breeds[breed] >= gene.breeds[names[i]] ? breed : names[i]\r\n    }\r\n    if (!['ragdoll', 'persian', 'siamese'].includes(breed)) breed = 'ragdoll'\r\n\r\n    cat.mats['m_cat_body_pbr_mr'].metallic = 1\r\n    cat.mats['m_cat_body_pbr_mr'].roughness = 1\r\n    cat.mats['m_cat_body_pbr_mr'].albedoColor = new BABYLON.Color3(1, 1, 1)\r\n    cat.mats['m_cat_body_pbr_mr'].albedoTexture = this.textures[`${breed}BaseColor`]\r\n    cat.mats['m_cat_body_pbr_mr'].bumpTexture = this.textures[`${breed}NormalColor`]\r\n    cat.mats['m_cat_body_pbr_mr'].metallicTexture = this.textures[`${breed}OcclusionRoughnessMetallic`]\r\n    cat.mats['m_cat_body_pbr_mr'].useAmbientOcclusionFromMetallicTextureRed = true\r\n    cat.mats['m_cat_body_pbr_mr'].useRoughnessFromMetallicTextureAlpha = false\r\n    cat.mats['m_cat_body_pbr_mr'].useRoughnessFromMetallicTextureGreen = true\r\n    cat.mats['m_cat_body_pbr_mr'].useMetallnessFromMetallicTextureBlue = true\r\n    // cat.mats['m_cat_body_pbr_mr'].useParallax = true\r\n    // cat.mats['m_cat_body_pbr_mr'].useParallaxOcclusion = true\r\n    // cat.mats['m_cat_body_pbr_mr'].parallaxScaleBias = 0.1\r\n  }\r\n\r\n  /** 计算年龄\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_AGE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.age, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'body_age_min' : 'body_age_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return base\r\n  }\r\n  /** 计算性别\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_SEX (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.sex, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'body_sex_min' : 'body_sex_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算体脂率\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FATRATE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.fatRate, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'body_fatRate_max' : 'body_fatRate_min']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥胖度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_WEIGHT (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.weight, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'body_weight_min' : 'body_weight_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEIGHT (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算肥面部年龄\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_AGE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headAge, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_age_min' : 'head_age_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部肥胖度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_FAT (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headFat, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_fat_min' : 'head_fat_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部角度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_ANGLE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headAngle, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_angle_min' : 'head_angle_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部椭圆形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_OVAL (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headOval - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_oval']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部圆形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_ROUND (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headRound - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_round']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部矩形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_RECTANGULAR (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headRectangular - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_rectangular']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部正方形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_SQUARE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headSquare - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_square']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部三角形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_TRIANGULAR (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headTriangular - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_triangular']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部倒三角形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_TRIANGULAR_INVERTED (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headInvertedTriangular - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_triangular_inverted']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥面部菱形\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_DIAMOND (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headDiamond - 0.5, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets['head_diamond']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头顶缩放深度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_PARIETAL_SCALE_DEPTH (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headParietalScaleDepth, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_parietal_scale_depth_min' : 'head_parietal_scale_depth_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n\r\n  /** 计算头部缩放深度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_SCALE_DEPTH (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headScaleDepth, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_scale_depth_min' : 'head_scale_depth_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头部水平缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_SCALE_HORIZONTALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headScaleHorizontally, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_scale_horizontally_min' : 'head_scale_horizontally_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头部垂直缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_SCALE_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headScaleVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_scale_vertically_min' : 'head_scale_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头部深度位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_MOVE_DEPTH (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headMoveDepth, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_move_depth_min' : 'head_move_depth_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头部水平位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_MOVE_HORIZONTALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headMoveHorizontally, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_move_horizontally_min' : 'head_move_horizontally_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算头部垂直位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_MOVE_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.headMoveVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'head_move_vertically_min' : 'head_move_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算额头凸起\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FOREHEAD_BULGE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.foreheadBulge, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'forehead_bulge_min' : 'forehead_bulge_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算额头垂直缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FOREHEAD_SCALE_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.foreheadScaleVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'forehead_scale_vertically_max' : 'forehead_scale_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算额头颅骨凸起\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FOREHEAD_CRANIC_SHAPE (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算额头太阳穴凸起\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FOREHEAD_TEMPLE_BULGE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.foreheadTempleBulge, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'forehead_temple_bulge_min' : 'forehead_temple_bulge_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n\r\n  /** 计算眉骨凸起\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYEBROWS_BULGE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyebrowsBulge, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eyebrows_bulge_min' : 'eyebrows_bulge_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眉骨角度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYEBROWS_ANGLE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyebrowsAngle, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eyebrows_angle_min' : 'eyebrows_angle_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眉骨垂直位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYEBROWS_MOVE_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyebrowsMoveVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eyebrows_move_vertically_min' : 'eyebrows_move_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n\r\n  /** 计算颈部双下巴\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_DOUBLE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyebrowsMoveVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eyebrows_move_vertically_min' : 'eyebrows_move_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算颈部深度缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_SCALE_DEPTH (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.neckScaleDepth, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'neck_scale_depth_min' : 'neck_scale_depth_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算后颈深度缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_SCALE_DEPTH_OF_NAPE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.neckScaleDepthOfNape, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'neck_scale_depth_of_nape_min' : 'neck_scale_depth_of_nape_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算颈部水平缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_SCALE_HORIZONTALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.neckScaleHorizontally, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'neck_scale_horizontally_min' : 'neck_scale_horizontally_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算颈部垂直缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_SCALE_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.neckScaleVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'neck_scale_vertically_min' : 'neck_scale_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算颈部深度位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_MOVE_DEPTH (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算颈部水平位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_MOVE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算颈部垂直位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_NECK_MOVE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n\r\n  /** 计算眼袋体积\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_BAG_VOLUME (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeBagVolume, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_bag_volume_min' : 'eye_bag_volume_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼袋歪曲\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_BAG_DISTORSION (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeBagDistorsion, 0, 1)\r\n    let lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_bag_distorsion_min' : 'eye_bag_distorsion_max']\r\n    lerp *= multiple\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼袋高度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_BAG_HEIGHT (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeBagHeight, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_bag_height_min' : 'eye_bag_height_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼褶角度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_FOLD_ANGLE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeFoldAngle, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_fold_angle_min' : 'eye_fold_angle_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼褶体积\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_FOLD_VOLUME (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeFoldVolume, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_fold_volume_min' : 'eye_fold_volume_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼内眦赘皮深度\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_EPICANTHUS (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeEpicanthus, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_epicanthus_min' : 'eye_epicanthus_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度（内眼角方向开始）\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALEHEIGHT_0 (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScaleHeight0, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_height_0_min' : 'eye_scale_height_0_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度（内眼角方向开始）\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALEHEIGHT_1 (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScaleHeight1, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_height_1_min' : 'eye_scale_height_1_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度（内眼角方向开始）\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALEHEIGHT_2 (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScaleHeight2, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_height_2_min' : 'eye_scale_height_2_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度（内眼角方向开始）\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALEHEIGHT_3 (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScaleHeight3, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_height_3_min' : 'eye_scale_height_3_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算高度（内眼角方向开始）\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALEHEIGHT_4 (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScaleHeight4, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_height_4_min' : 'eye_scale_height_4_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼角水平位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_OUTER_CORNER_HORIZONTALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeMoveOuterCornerHorizontally, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_move_outer_corner_horizontally_min' : 'eye_move_outer_corner_horizontally_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算内眼角水平位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_INNER_CORNER_HORIZONTALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeMoveInnerCornerHorizontally, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_move_innter_corner_horizontally_min' : 'eye_move_innter_corner_horizontally_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼角垂直位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_OUTER_CORNER_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeMoveOuterCornerVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_move_outer_corner_vertically_min' : 'eye_move_outer_corner_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算内眼角垂直位移\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_INNER_CORNER_VERTICALLY (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeMoveInnerCornerVertically, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_move_innter_corner_vertically_min' : 'eye_move_innter_corner_vertically_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算眼睛水平移动\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算眼睛垂直移动\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_MOVE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  /** 计算眼睛缩放\r\n   *\r\n   * @param {number[]} pos 网格点\r\n   * @param {CatGene} gene 基因\r\n   * @param {number[]} base 标准网格点\r\n   * @param {number} [multiple = 1] 倍数\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_EYE_SCALE (pos, gene, base, multiple = 1) {\r\n    const value = this.clamp(gene.eyeScale, 0, 1)\r\n    const lerp = value < 0.5 ? 1 - 2 * value : 2 * value - 1\r\n\r\n    const target = this.targets[value < 0.5 ? 'eye_scale_min' : 'eye_scale_max']\r\n    for (let i of Object.keys(target)) {\r\n      pos[i * 3 + 0] += (target[i].x - base[i * 3 + 0]) * lerp * multiple\r\n      pos[i * 3 + 1] += (target[i].y - base[i * 3 + 1]) * lerp * multiple\r\n      pos[i * 3 + 2] += (target[i].z - base[i * 3 + 2]) * lerp * multiple\r\n    }\r\n\r\n    return pos\r\n  }\r\n\r\n  async COMPUTE_NOSE_MOVE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_MOVE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_MOVE_DEPTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_DEPTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_NOSTRILS_WIDTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_TIP_WIDTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_MOVE_BASE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_0 (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_1 (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_2 (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_COMPRESSION (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_CURVE (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_GREEK (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_HUMP (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_VOLUME (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_NOSTRILS_ANGLE (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_MOVE_TIP_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SEPTUM_ANGLE (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_NOSE_SCALE_NOSTRILS_FLARING (pos, gene, base, multiple = 1) { return pos }\r\n\r\n  async COMPUTE_MOUSE_SCALE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_DEPTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_VERTICALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_HORIZONTALLY (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_DEPTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_LOWERLIP_HEIGHT (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_LOWERLIP_WIDTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_UPPERLIP_HEIGHT (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_UPPERLIP_WIDTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_CUPIDS_BOW_WIDTH (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_DIMPLES (pos, gene, base, multiple = 1) { return pos }\r\n  async COMPUTE_MOUSE_LAUGH_LINES (pos, gene, base, multiple = 1) { return pos }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/cat-maker.js","/** Created by chameleon <magic.alone.k@gmail.com>\r\n * ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\r\n * │                                                                                                                                                        │\r\n * │                                      ;XBX3                                                                                                             │\r\n * │                                     X@3;5@@r                                                       ;995                                                │\r\n * │                                     @@    9@        :riSS9S@@@@@@Bi                              9@@G9B@s                                              │\r\n * │                             B@@@B;   @B    @A:5GA9BX93S5s,@@:   ;iB@@                           @@     @@                                              │\r\n * │                            @@  :9@@   @B:sB@BG3;rB9AA;    @r     ,r B@,            ;r35G9AGAGA5X@X :   @A     5@@@@S                                   │\r\n * │                            @@     B@,;B@@rr;    @rs: @@   B@  @@ B@  B@      :5X@@@BBXAS533s5rrX@r9B@@@@Br  X@A;: r@@                                  │\r\n * │                             @@;   r@@X:  A59@B ;@9@B:@B    @@        5@    B@@@BSs;           ,S5;    S5;B@@@r      @3                                 │\r\n * │                              r@BB@B:   ;@;3: @@ ;BXBB;      B@9:    A@9  B@B r;    S3        @@;ri@B        i@@r  X@B                                  │\r\n * │                               ,@@s     s@5@B @B               SBAB@@@;  @@   B;    rB       :@5 @XX@ :@@XBX   s@@@B:                                   │\r\n * │                              9@,        ;XAABs                  9@@r   @@     95sr55:        :B@BB@  @9 rr3@   r@X                                     │\r\n * │                             9@                               9@@@;     @5       ::                   @B:@B3@    ,@                                     │\r\n * │                            :@:  i33s53r                  5@@@Xr       ;@s                             9A59B      @9                                    │\r\n * │                            @@  B;    :rB;                ,:@@          @@                              ,r;,;i5;  @B                                    │\r\n * │                            @X rG        @                   @B         S@: 9@                        :B;      Si @X                                    │\r\n * │                            @X  @        B               @;  ;@          B@  @B          AA           @:        G @;                                    │\r\n * │                            @@   93;  :rB;  5r          @@    @r          A@r 5@BSr;;r5@@@r           X3       9 @@                                     │\r\n * │                            ;@s   ,rsr3r    A@@Ar;,,rS@@X    5@            :@@;  rABBBBS:              95;;;rsi B@                                      │\r\n * │                             B@;              rB@@@@BG;     ;@5              r@@A:                       ;;;   @@:                                      │\r\n * │                              X@9                          G@i                  9@@@S,                       A@S                                        │\r\n * │                               ,@@5                     r@@@           :9r          @@@@@@BX3r;,       ;rSB@@@@;                                        │\r\n * │                                X@@@@Ar:           ,3X@@@sr@@        ,@@@@@A5GXAA5r9@s   ;39BB@@@@@@@@@@@BS,  r@@                                       │\r\n * │                               @@   rB@@@@@@@@@@@@@@@9;     @@@@@@@@@@@@@@@@B@BB9G@@:                           @@                                      │\r\n * │                              @@          ,;;;;,:            B@:      sX ;       G@  :                           @@                                     │\r\n * │                             @@                              :@@       ;BX;  ;i3B@@@@B                            @@                                    │\r\n * │                            5@r                             9B@@@@@@@@@@@@@@@@@@@X                                r@r                                   │\r\n * │                            @@                                 3@r    ,@@@@B   @@                                  @@                                   │\r\n * │                      rBX: 9@                                   @@      :s:   ,@A                                  ,@GABBBs                             │\r\n * │                  S@:r@B@@ @@                                   5@;           @@                                    @@; :@@B;                           │\r\n * │                  :@@@@@@@9@r                                    @@           @@                                    S@   :3;@3                          │\r\n * │                     ,: :;@@                                     @@          i@i                                     @B   B@@:                          │\r\n * │                          @B                                     r@;         @@                                      @@@BB@G                            │\r\n * │                         s@9                                     :@@         @@;;rrr;;;;::   ::;;;;;;r;;;;,: ;;ri3s3;@@, :                              │\r\n * │                         r@B@@@BB9X@@B9XB@@@@@@@@BGSX@@9GB@B@B@@@B@9         r3SXAXAXGG9X@@@BAGXBBBBBXBGA9A@@@X5S99993s                                 │\r\n * │                                 BX@@@@;          9@@@@@B                               @BB@9@5          B@B@BB@                                        │\r\n * │                                9@    @@,;,       @B   5@r;;                        S9S@@    @@      r9SS@B   :@;                                       │\r\n * │                                9@    ;5r3X@;     @5    33r5@@                     @9        @@     B@         @:                                       │\r\n * │                                A@:       ,@5     @B        @@                     @Brr;rs33s@@     X@i;r;is3iB@:                                       │\r\n * │                                 9599A9GSS5;      r95AGA9GSSr                        ;rrrirr;,        ;rririrr;                                         │\r\n * │                                                                                                                                                        │\r\n * ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\r\n * │                                                          ____ ____ ___     ___  _    ____ ____ ____      _  _ ____ _  _ ____ ____    ___  _  _ ____    │\r\n * │                                                          | __ |  | |  \\    |__| |    |___ |__  |__       |\\ | |___ |  | |___ |__/    |__| |  | | __    │\r\n * │                                                          |__| |__| |__/    |__| |___ |___ ___| ___| ,    | \\| |___  \\/  |___ |  \\    |__| |__| |__|    │\r\n * │                                                                                                                                                        │\r\n * ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\r\n * │                                                                                                                 __ .  ..__..  ..___.   .___.__..  .    │\r\n * │                                                                                                                /  `|__||__||\\/||__ |   |__ |  ||\\ |    │\r\n * │                                                                                                                \\__.|  ||  ||  ||___|___|___|__|| \\|    │\r\n * │                                                                                                                                                        │\r\n * ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\r\n * │ Description: Program entry file.                                                                                                                       │\r\n * │ Author: Chameleon <magic.alone.k@gmail.com>                                                                                                            │\r\n * │ Version: 1.0.0.0                                                                                                                                       │\r\n * │ Company: HeFei Parity Ltd.                                                                                                                             │\r\n * ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\r\n */\r\n\r\nimport * as BABYLON from 'babylonjs'\r\nimport 'babylonjs-materials'\r\nimport 'babylonjs-loaders'\r\nimport './lib/fur-material'\r\nimport './lib/star-material'\r\n\r\nimport SceneLoading from './scenes/SceneLoading'\r\nimport Scenehouse from './scenes/SceneHouse'\r\n\r\nimport TargetMaker from './lib/cat-maker/src/target-maker' // eslint-disable-line\r\nimport {Game, CatMaker, CatMesh, Gene, CatGene, User} from './lib/@cat/index' // eslint-disable-line\r\n\r\nconst DEBUG = false // 控制是否游戏中渲染Debug层\r\n\r\nclass MainGame extends Game {\r\n  initBefore () {\r\n    if (window && window.location && window.location.search) {\r\n      const reg = new RegExp(`(^|&)token=([^&]*)(&|$)`, 'i')\r\n      const r = window.location.search.substr(1).match(reg)\r\n\r\n      if (r) this.user = new User(unescape(r[2]))\r\n      else throw new Error('错误的提交参数！')\r\n    } else throw new Error('不支持的运行环境！')\r\n  }\r\n\r\n  initAfter () {\r\n    // 初始化渲染摄像机\r\n    this.camera = new BABYLON.ArcRotateCamera('main-camera', 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), this.scene)\r\n    this.camera.setPosition(new BABYLON.Vector3(0, 0, 10))\r\n    this.camera.setTarget(BABYLON.Vector3.Zero())\r\n    // this.camera.attachControl(this.canvas, true)\r\n\r\n    // 初始化主灯光以及阴影发生器\r\n    this.light = new BABYLON.DirectionalLight('main-light', new BABYLON.Vector3(-1, -2, -1), this.scene)\r\n    this.light.position = new BABYLON.Vector3(20, 50, 20)\r\n    this.light.intensity = 0.7\r\n    this.shadowGenerator = new BABYLON.ShadowGenerator(2048, this.light)\r\n    // this.shadowGenerator.useBlurExponentialShadowMap = true\r\n    // this.shadowGenerator.useCloseExponentialShadowMap = true\r\n    this.shadowGenerator.useBlurExponentialShadowMap = true\r\n    this.shadowGenerator.useKernelBlur = true\r\n    this.shadowGenerator.blurKernel = 64\r\n\r\n    // 初始化渲染管线\r\n    this.pipeline = new BABYLON.DefaultRenderingPipeline('DEFAULT_PIPELINE', true, this.scene, [this.camera], true)\r\n\r\n    this.pipeline.samples = 4 // 多采样抗锯齿 1~4 默认：1\r\n    this.pipeline.fxaaEnabled = true // 快速抗锯齿，默认：false\r\n    this.pipeline.imageProcessing.toneMappingEnabled = false // Tone Mapping, default false\r\n    this.pipeline.imageProcessing.contrast = 1 // Camera contrast, range 1-4, default 1\r\n    this.pipeline.imageProcessing.exposure = 3 // Camera exposure, range 1-4, default 1\r\n    this.pipeline.bloomEnabled = true // Bloom, default false\r\n    this.pipeline.bloomKernel = 80 // Kernel, range 1-500, default 64\r\n    this.pipeline.bloomWeight = 0.8 // Weight\r\n    this.pipeline.bloomThreshold = 0.2 // Threshold\r\n    this.pipeline.bloomScale = 0.5 // Scale\r\n\r\n    // 初始化生成器\r\n    this._catMaker = new CatMaker(this)\r\n    // 初始化所有猫\r\n    this._cat = new CatMesh(this)\r\n  }\r\n\r\n  startAfter () {\r\n    // this.__loadCatTargetMaker()\r\n    // return\r\n    let sceneLoading = new SceneLoading(this)\r\n    let sceneHouse = new Scenehouse(this)\r\n    sceneLoading.__loadHouseScene = () => {\r\n      sceneLoading.__guiTextLoadingProgressText('连接网络')\r\n      this.__getUserCats() // 获取用户猫数据\r\n        // 转为JSON基因\r\n        .then(res => res.json())\r\n        // 根据基因创建 CatMesh\r\n        .then(json => {\r\n          sceneLoading.__guiTextLoadingProgressText('提取基因')\r\n          for (let i = 0; i < Object.keys(json).length; i++) {\r\n            let {hash, gene} = json[i].catGene\r\n            this.cat.genes[hash] = new CatGene(gene)\r\n          }\r\n        })\r\n        // CatMesh 加载资源\r\n        .then(() => sceneLoading.__guiTextLoadingProgressText('生成器初始化'))\r\n        .then(() => this.cat.loadAssetsAsync())\r\n        // 加载环境场景资源\r\n        .then(() => sceneLoading.__guiTextLoadingProgressText('生成环境'))\r\n        .then(() => sceneHouse.loadAssetsAsync(p => {}))\r\n        // 构建 CatMesh 网格\r\n        .then(() => sceneLoading.__guiTextLoadingProgressText('获取基因控制范围'))\r\n        // CatMaker 读取网格目标文件\r\n        .then(() => this.catMaker.loadTargetsAsync())\r\n        // CatMaker 重构目标网格\r\n        .then(() => sceneLoading.__guiTextLoadingProgressText('匹配基因'))\r\n        .then(() => this.catMaker.build(this.cat))\r\n        .then(() => {\r\n          console.log(this.cat)\r\n          this.cat.meshs.cat_body.setVerticesData(BABYLON.VertexBuffer.PositionKind, this.cat.positions[this.cat.hash])\r\n          this.cat.meshs.cat_body.visibility = 1\r\n          sceneHouse.run()\r\n          sceneLoading.__disposeGUI()\r\n          allReady = true\r\n        })\r\n        .then(() => {})\r\n    }\r\n    sceneLoading.loadAssetsAsync(p => {}).then(scene => scene.run())\r\n  }\r\n\r\n  /**\r\n   * 连接后端并获取猫的数据\r\n   *\r\n   * @returns\r\n   * @memberof AtCatGame\r\n   */\r\n  __getUserCats () {\r\n    return fetch('https://sc.atmao.net/api/cat/myCat', {\r\n      headers: { 'content-type': 'application/json' },\r\n      method: 'POST',\r\n      body: JSON.stringify({ 'token': this.user.token })\r\n    }).catch(() => {\r\n      this.engine.dispose()\r\n      document.removeChild(this.canvas)\r\n      throw new Error('无效令牌')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 解码基因JSON\r\n   *\r\n   * @param {SceneLoading} loading 读取场景\r\n   * @memberof AtCatGame\r\n   */\r\n  __decodeGene (loading, json, cb) {\r\n    loading.__guiTextLoadingProgressText('解码基因原型')\r\n    json.map(d => {\r\n      // this.cat.genes.set(d.catGene.hash, new CatGene(d.catGene.gene))\r\n      this.cat.genes[d.catGene.hash] = new CatGene(d.catGene.gene)\r\n      // this.cat.postions[d.catGene.hash] = [].concat(this.cat.basePosition)\r\n    })\r\n    cb()\r\n  }\r\n\r\n  /**\r\n   * 读取房屋场景资源\r\n   *\r\n   * @param {SceneLoading} loading 场景\r\n   * @memberof AtCatGame\r\n   */\r\n  _loadSceneHouseAssets (loading) {\r\n    loading.__guiTextLoadingProgressText('生成环境结构')\r\n  }\r\n\r\n  __loadCatTargetMaker () {\r\n    BABYLON.SceneLoader.ImportMeshAsync(\r\n      '', './static/assets/resources/cat/babylon/',\r\n      'cat-target.babylon', this.scene).then(({meshes, skeletons}) => {\r\n      let names = []\r\n      this.camera.dispose()\r\n      this.camera = new BABYLON.FreeCamera('Default-Camera', new BABYLON.Vector3(0, 0, 10), this.scene)\r\n      this.camera.setTarget(BABYLON.Vector3.Zero())\r\n      this.camera.attachControl(this.canvas, true)\r\n      // console.log(meshes[10].getVerticesData(BABYLON.VertexBuffer.PositionKind))\r\n      meshes.map(({name}, i) => { if (!(['cat', 'cat_eye_left', 'cat_eye_right', 'cat_body', 'cat_eye_left_glass', 'cat_eye_right_glass'].includes(name))) names.push(name) })\r\n      let str = ''\r\n      this.scene.getMeshByName('cat_body').getVerticesData(BABYLON.VertexBuffer.PositionKind).map(v => {\r\n        str += `${v}|`\r\n      })\r\n      // names.map(name => {\r\n      //   str += `*${name}\\n`\r\n      //   str += new TargetMaker(this.scene.getMeshByName('cat_body'), this.scene.getMeshByName(name)).build()\r\n      // })\r\n      console.log(str)\r\n    })\r\n  }\r\n}\r\n\r\nconst touch = require('touchjs')\r\n\r\nlet allReady = false\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  window.game = new MainGame(document.getElementById('renderCanvas'))\r\n  window.game.start(DEBUG)\r\n  touch.on(document.body, 'swipeleft', () => {\r\n    if (allReady) changeCatIndex(window.game.cat.index + 1)\r\n  })\r\n  touch.on(document.body, 'swiperight', () => {\r\n    if (allReady) changeCatIndex(window.game.cat.index - 1)\r\n  })\r\n})\r\n\r\nfunction changeCatIndex (index) {\r\n  console.log(index, Object.keys(window.game.cat.genes))\r\n  if (index < 0) return\r\n  if (index > Object.keys(window.game.cat.genes).length - 1) return\r\n  console.log(index)\r\n\r\n  window.game.cat.index = index\r\n\r\n  window.game.catMaker.build(window.game.cat).then(() => {\r\n    window.game.cat.meshs.cat_body.setVerticesData(BABYLON.VertexBuffer.PositionKind, window.game.cat.positions[window.game.cat.hash])\r\n    window.game.cat.meshs.cat_body.visibility = 1\r\n  })\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// eslint-disable-next-line no-unused-vars\r\nimport {Game, SceneObject, Outline} from './index'\r\n\r\n/**\r\n * 场景\r\n *\r\n * @class Scene\r\n */\r\nclass Scene {\r\n  /**\r\n   * 游戏\r\n   *\r\n   * @type {Game}\r\n   * @memberof Scene\r\n   */\r\n  get game () { return this._game }\r\n  set game (value) { this._game = value }\r\n  /**\r\n   * 场景名称\r\n   *\r\n   * @type {string}\r\n   * @memberof Scene\r\n   */\r\n  get name () { return this._name }\r\n  set name (value) { this._name = value }\r\n  /**\r\n   * 大纲\r\n   *\r\n   * @type {Outline}\r\n   * @memberof Scene\r\n   */\r\n  get outline () { return this._outline }\r\n  set outline (val) { return this._outline }\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param {Game} game 游戏\r\n   * @param {string} name 场景名称\r\n   * @memberof Scene\r\n   */\r\n  constructor (game, name) {\r\n    this._game = game\r\n    this._name = name\r\n    this._outline = new Outline()\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   * 初始化游戏场景\r\n   *\r\n   * @return {Scene} 自身\r\n   * @memberof Scene\r\n   */\r\n  init () {\r\n    this.initOutLine()\r\n    this.initAfter()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * 复写初始化大纲函数\r\n   *\r\n   * @memberof Scene\r\n   */\r\n  initOutLine () {\r\n  }\r\n\r\n  /**\r\n   * 复写初始化函数\r\n   *\r\n   * @memberof Scene\r\n   */\r\n  initAfter () {\r\n  }\r\n\r\n  /**\r\n   * 运行\r\n   *\r\n   * @memberof Scene\r\n   */\r\n  run () {}\r\n\r\n  /**\r\n   * 异步加载场景大纲内所有资源\r\n   * @memberof Scene\r\n   */\r\n  async loadAssetsAsync (onProgress) {\r\n    const [{outline}] = [this]\r\n    let percents = new Map() // 进度百分比\r\n\r\n    for (let [name, obj] of outline) {\r\n      await obj.loadAssetsAsync(false, ({lengthComputable: c, loaded: l, total: t, percent: p}) => {\r\n        percents.set(name, p)\r\n        let percent = 0\r\n        for (let _p of percents.values()) percent += _p\r\n        onProgress((percent / outline.size).toFixed(2))\r\n      }).then(root => {})\r\n    }\r\n    return this\r\n  }\r\n}\r\n\r\nexport default Scene\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/scene.js","import * as BABYLON from 'babylonjs'\r\n// eslint-disable-next-line no-unused-vars\r\nimport {CatBreeds} from './index'\r\n\r\nconst reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n\r\nexport default class Gene {\r\n  set breeds (val) { this._breeds = val }\r\n  set age (val) { this._age = val }\r\n  set sex (val) { this._sex = val }\r\n  set fatRate (val) { this._fatRate = val }\r\n  set weight (val) { this._weight = val }\r\n  set height (val) { this._height = val }\r\n\r\n  set headAge (val) { this._headAge = val }\r\n  set headFat (val) { this._headFat = val }\r\n  set headAngle (val) { this._headAngle = val }\r\n  set headOval (val) { this._headOval = val }\r\n  set headRound (val) { this._headRound = val }\r\n  set headRectangular (val) { this._headRectangular = val }\r\n  set headSquare (val) { this._headSquare = val }\r\n  set headTriangular (val) { this._headTriangular = val }\r\n  set headInvertedTriangular (val) { this._headInvertedTriangular = val }\r\n  set headDiamond (val) { this._headDiamond = val }\r\n  set headParietalScaleDepth (val) { this._headParietalScaleDepth = val }\r\n  set headScaleDepth (val) { this._headScaleDepth = val }\r\n  set headScaleHorizontally (val) { this._headScaleHorizontally = val }\r\n  set headScaleVertically (val) { this._headScaleVertically = val }\r\n  set headMoveHorizontally (val) { this._headMoveHorizontally = val }\r\n  set headMoveVertically (val) { this._headMoveVertically = val }\r\n  set headMoveDepth (val) { this._headMoveDepth = val }\r\n\r\n  set foreheadBulge (val) { this._foreheadBulge = val }\r\n  set foreheadScaleVertically (val) { this._foreheadScaleVertically = val }\r\n  set foreheadCranicShape (val) { this._foreheadCranicShape = val }\r\n  set foreheadTempleBulge (val) { this._foreheadTempleBulge = val }\r\n\r\n  set eyebrowsBulge (val) { this._eyebrowsBulge = val }\r\n  set eyebrowsAngle (val) { this._eyebrowsAngle = val }\r\n  set eyebrowsMoveVertically (val) { this._eyebrowsMoveVertically = val }\r\n\r\n  set neckDouble (val) { this._neckDouble = val }\r\n  set neckScaleDepth (val) { this._neckScaleDepth = val }\r\n  set neckScaleDepthOfNape (val) { this._neckScaleDepthOfNape = val }\r\n  set neckScaleHorizontally (val) { this._neckScaleHorizontally = val }\r\n  set neckScaleVertically (val) { this._neckScaleVertically = val }\r\n  set neckMoveDepth (val) { this._neckMoveDepth = val }\r\n  set neckMoveHorizontally (val) { this._neckMoveHorizontally = val }\r\n  set neckMoveVertically (val) { this._neckMoveVertically = val }\r\n\r\n  set eyeColorLeft (val) { this._eyeColorLeft = val }\r\n  set eyeColorRight (val) { this._eyeColorRight = val }\r\n\r\n  set eyeBagVolume (val) { this._eyeBagVolume = val }\r\n  set eyeBagDistorsion (val) { this._eyeBagDistorsion = val }\r\n  set eyeBagHeight (val) { this._eyeBagHeight = val }\r\n\r\n  set eyeFoldAngle (val) { this._eyeFoldAngle = val }\r\n  set eyeFoldVolume (val) { this._eyeFoldVolume = val }\r\n  set eyeEpicanthus (val) { this._eyeEpicanthus = val }\r\n  set eyeScaleHeight0 (val) { this._eyeScaleHeight0 = val }\r\n  set eyeScaleHeight1 (val) { this._eyeScaleHeight1 = val }\r\n  set eyeScaleHeight2 (val) { this._eyeScaleHeight2 = val }\r\n  set eyeScaleHeight3 (val) { this._eyeScaleHeight3 = val }\r\n  set eyeScaleHeight4 (val) { this._eyeScaleHeight4 = val }\r\n  set eyeMoveOuterCornerHorizontally (val) { this._eyeMoveOuterCornerHorizontally = val }\r\n  set eyeMoveInnerCornerHorizontally (val) { this._eyeMoveInnerCornerHorizontally = val }\r\n  set eyeMoveOuterCornerVertically (val) { this._eyeMoveOuterCornerVertically = val }\r\n  set eyeMoveInnerCornerVertically (val) { this._eyeMoveInnerCornerVertically = val }\r\n  set eyeMoveHorizontally (val) { this._eyeMoveHorizontally = val }\r\n  set eyeMoveVertically (val) { this._eyeMoveVertically = val }\r\n  set eyeScale (val) { this._eyeScale = val }\r\n\r\n  // 基本形态\r\n  /** 品种 @type {CatBreeds} */ get breeds () { return this._breeds }\r\n  /** 年龄 @type {Number} */ get age () { return this._age }\r\n  /** 性别 @type {Number} */ get sex () { return this._sex }\r\n  /** 体脂 @type {Number} */ get fatRate () { return this._fatRate }\r\n  /** 体重 @type {Number} */ get weight () { return this._weight }\r\n  /** 身高 @type {Number} */ get height () { return this._height }\r\n\r\n  // 头部形态\r\n  /** 面部年龄 @type {Number} */ get headAge () { return this._headAge }\r\n  /** 面部肥胖 @type {Number} */ get headFat () { return this._headFat }\r\n  /** 面部角度 @type {Number} */ get headAngle () { return this._headAngle }\r\n  /** 面部椭圆形 @type {Number} */ get headOval () { return this._headOval }\r\n  /** 面部圆形 @type {Number} */ get headRound () { return this._headRound }\r\n  /** 面部矩形 @type {Number} */ get headRectangular () { return this._headRectangular }\r\n  /** 面部正方形 @type {Number} */ get headSquare () { return this._headSquare }\r\n  /** 面部正三角形 @type {Number} */ get headTriangular () { return this._headTriangular }\r\n  /** 面部倒三角形 @type {Number} */ get headInvertedTriangular () { return this._headInvertedTriangular }\r\n  /** 面部菱形形态 @type {Number} */ get headDiamond () { return this._headDiamond }\r\n  /** 头顶缩放深度 @type {Number} */ get headParietalScaleDepth () { return this._headParietalScaleDepth }\r\n  /** 头部缩放深度 @type {Number} */ get headScaleDepth () { return this._headScaleDepth }\r\n  /** 头部水平缩放 @type {Number} */ get headScaleHorizontally () { return this._headScaleHorizontally }\r\n  /** 头部垂直缩放 @type {Number} */ get headScaleVertically () { return this._headScaleVertically }\r\n  /** 头部水平位移 * @type {Number} */ get headMoveHorizontally () { return this._headMoveHorizontally }\r\n  /** 头部垂直位移 * @type {Number} */ get headMoveVertically () { return this._headMoveVertically }\r\n  /** 头部深度位移 * @type {Number} */ get headMoveDepth () { return this._headMoveDepth }\r\n\r\n  // 额头形态\r\n  /** 额头凸起 @type {Number} */ get foreheadBulge () { return this._foreheadBulge }\r\n  /** 额头垂直缩放 @type {Number} */ get foreheadScaleVertically () { return this._foreheadScaleVertically }\r\n  /** 额头颅骨凸起 * @type {Number} */ get foreheadCranicShape () { return this._foreheadCranicShape }\r\n  /** 额头太阳穴凸起 @type {Number} */ get foreheadTempleBulge () { return this._foreheadTempleBulge }\r\n\r\n  // 眉骨\r\n  /** 眉骨凸起 @type {Number} */ get eyebrowsBulge () { return this._eyebrowsBulge }\r\n  /** 眉骨角度 @type {Number} */ get eyebrowsAngle () { return this._eyebrowsAngle }\r\n  /** 眉骨垂直位移 @type {Number} */ get eyebrowsMoveVertically () { return this._eyebrowsMoveVertically }\r\n\r\n  // 颈部\r\n  /** 颈部双下巴 @type {Number} */ get neckDouble () { return this._neckDouble }\r\n  /** 颈部深度缩放 @type {Number} */ get neckScaleDepth () { return this._neckScaleDepth }\r\n  /** 后颈深度缩放 @type {Number} */ get neckScaleDepthOfNape () { return this._neckScaleDepthOfNape }\r\n  /** 颈部水平缩放 @type {Number} */ get neckScaleHorizontally () { return this._neckScaleHorizontally }\r\n  /** 颈部垂直缩放 * @type {Number} */ get neckScaleVertically () { return this._neckScaleVertically }\r\n  /** 颈部深度位移 * @type {Number} */ get neckMoveDepth () { return this._neckMoveDepth }\r\n  /** 颈部水平位移 * @type {Number} */ get neckMoveHorizontally () { return this._neckMoveHorizontally }\r\n  /** 颈部垂直位移 * @type {Number} */ get neckMoveVertically () { return this._neckMoveVertically }\r\n\r\n  // 眼睛\r\n  /** 左眼颜色 @type {BABYLON.Color3} */ get eyeColorLeft () { return this._eyeColorLeft }\r\n  /** 右眼颜色 @type {BABYLON.Color3} */ get eyeColorRight () { return this._eyeColorRight }\r\n  /** 眼袋体积 @type {Number} */ get eyeBagVolume () { return this._eyeBagVolume }\r\n  /** 眼袋歪曲 @type {Number} */ get eyeBagDistorsion () { return this._eyeBagDistorsion }\r\n  /** 眼袋高度 @type {Number} */ get eyeBagHeight () { return this._eyeBagHeight }\r\n  /** 眼褶角度 @type {Number} */ get eyeFoldAngle () { return this._eyeFoldAngle }\r\n  /** 眼褶体积 @type {Number} */ get eyeFoldVolume () { return this._eyeFoldVolume }\r\n  /** 眼内眦赘皮深度 @type {Number} */ get eyeEpicanthus () { return this._eyeEpicanthus }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight0 () { return this._eyeScaleHeight0 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight1 () { return this._eyeScaleHeight1 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight2 () { return this._eyeScaleHeight2 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight3 () { return this._eyeScaleHeight3 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight4 () { return this._eyeScaleHeight4 }\r\n  /** 眼角水平位移 @type {Number} */ get eyeMoveOuterCornerHorizontally () { return this._eyeMoveOuterCornerHorizontally }\r\n  /** 内眼角水平位移 @type {Number} */ get eyeMoveInnerCornerHorizontally () { return this._eyeMoveInnerCornerHorizontally }\r\n  /** 眼角垂直位移 @type {Number} */ get eyeMoveOuterCornerVertically () { return this._eyeMoveOuterCornerVertically }\r\n  /** 内眼角垂直位移 @type {Number} */ get eyeMoveInnerCornerVertically () { return this._eyeMoveInnerCornerVertically }\r\n  /** 眼睛水平移动 * @type {Number} */ get eyeMoveHorizontally () { return this._eyeMoveHorizontally }\r\n  /** 眼睛垂直移动 * @type {Number} */ get eyeMoveVertically () { return this._eyeMoveVertically }\r\n  /** 眼睛缩放 @type {Number} */ get eyeScale () { return this._eyeScale }\r\n\r\n  // 乳房形态 仅限母猫(sex < 0.5)\r\n  /** 乳房大小 @type {Number} */ get breastCupSize () { return this._breastCupSize }\r\n  /** 乳房坚挺 @type {Number} */ get breastFirmness () { return this._breastFirmness }\r\n  /** 乳房垂直位移 @type {Number} */ get breastVerticalPosition () { return this._breastVerticalPosition }\r\n  /** 乳房水平位移 @type {Number} */ get breastHorizontalPosition () { return this._breastHorizontalPosition }\r\n  /** 乳房尖锐度 @type {Number} */ get breastSharpness () { return this._breastSharpness }\r\n  /** 乳房体积垂直位移 @type {Number} */ get breastVolumeVerticalPosition () { return this._breastVolumeVerticalPosition }\r\n  /** 乳头尺寸 @type {Number} */ get breastNippleSize () { return this._breastNippleSize }\r\n  /** 乳晕大小 @type {Number} */ get breastNipplePoint () { return this._breastNipplePoint }\r\n\r\n  get noseMoveVertically () { return this._noseMoveVertically }\r\n  get noseMoveHorizontally () { return this._noseMoveHorizontally }\r\n  get noseMoveDepth () { return this._noseMoveDepth }\r\n  get noseScaleVertically () { return this._noseScaleVertically }\r\n  get noseScaleHorizontally () { return this._noseScaleHorizontally }\r\n  get noseScaleDepth () { return this._noseScaleDepth }\r\n  get noseScaleNostrilsWidth () { return this._noseScaleNostrilsWidth }\r\n  get noseScaleTipWidth () { return this._noseScaleTipWidth }\r\n  get noseMoveBaseVertically () { return this._noseMoveBaseVertically }\r\n  get noseScaleWidth0 () { return this._noseScaleWidth0 }\r\n  get noseScaleWidth1 () { return this._noseScaleWidth1 }\r\n  get noseScaleWidth2 () { return this._noseScaleWidth2 }\r\n  get noseCompression () { return this._noseCompression }\r\n  get noseCurve () { return this._noseCurve }\r\n  get noseGreek () { return this._noseGreek }\r\n  get noseHump () { return this._noseHump }\r\n  get noseVolume () { return this._noseVolume }\r\n  get noseNostrilsAngle () { return this._noseNostrilsAngle }\r\n  get noseMoveTipVertically () { return this._noseMoveTipVertically }\r\n  get noseSeptumAngle () { return this._noseSeptumAngle }\r\n  get noseScaleNostrilsFlaring () { return this._noseScaleNostrilsFlaring }\r\n\r\n  get mouseScaleVertically () { return this._mouseScaleVertically }\r\n  get mouseScaleHorizontally () { return this._mouseScaleHorizontally }\r\n  get mouseScaleDepth () { return this._mouseScaleDepth }\r\n  get mouseMoveVertically () { return this._mouseMoveVertically }\r\n  get mouseMoveHorizontally () { return this._mouseMoveHorizontally }\r\n  get mouseMoveDepth () { return this._mouseMoveDepth }\r\n  get mouseScaleLowerlipHeight () { return this._mouseScaleLowerlipHeight }\r\n  get mouseScaleLowerlipWidth () { return this._mouseScaleLowerlipWidth }\r\n  get mouseScaleUpperlipHeight () { return this._mouseScaleUpperlipHeight }\r\n  get mouseScaleUpperlipWidth () { return this._mouseScaleUpperlipWidth }\r\n  get mouseCupidsBowWidth () { return this._mouseCupidsBowWidth }\r\n  get mouseDimples () { return this._mouseDimples }\r\n  get mouseLaughLines () { return this._mouseLaughLines }\r\n  get mouseLowerlipCurvedShape () { return this._mouseLowerlipCurvedShape }\r\n  get mouseMoveCornersVertically () { return this._mouseMoveCornersVertically }\r\n  get mouseScaleMiddleLowerlip () { return this._mouseScaleMiddleLowerlip }\r\n  get mouseScaleLowerlipVolume () { return this._mouseScaleLowerlipVolume }\r\n  get mouseScalePhiltrumVolume () { return this._mouseScalePhiltrumVolume }\r\n  get mouseScaleUpperlipVolume () { return this._mouseScaleUpperlipVolume }\r\n  get mouseUpperlipCurvedShape () { return this._mouseUpperlipCurvedShape }\r\n  get mouseScaleMiddleUpperlip () { return this._mouseScaleMiddleUpperlip }\r\n  get mouseCupidsBowShape () { return this._mouseCupidsBowShape }\r\n\r\n  get earMoveDepth () { return this._earMoveDepth }\r\n  get earMoveHorizontally () { return this._earMoveHorizontally }\r\n  get earMoveVertically () { return this._earMoveVertically }\r\n  get earScale () { return this._earScale }\r\n  get earScaleHeight () { return this._earScaleHeight }\r\n  get earScaleLobe () { return this._earScaleLobe }\r\n  get earRatation () { return this._earRatation }\r\n  get earShape () { return this._earShape }\r\n  get earWingShaped () { return this._earWingShaped }\r\n  get earFlapped () { return this._earFlapped }\r\n\r\n  get chinToneOfSide () { return this._chinToneOfSide }\r\n  get chinCLeft () { return this._chinCLeft }\r\n  get chinScaleProminence () { return this._chinScaleProminence }\r\n  get chinScaleWidth () { return this._chinScaleWidth }\r\n  get chinScaleHeight () { return this._chinScaleHeight }\r\n  get chinScaleAngular () { return this._chinScaleAngular }\r\n  get chinScalePrognathism () { return this._chinScalePrognathism }\r\n\r\n  get cheekOuterVolume () { return this._cheekOuterVolume }\r\n  get cheekScaleProminence () { return this._cheekScaleProminence }\r\n  get cheekInnerVolume () { return this._cheekInnerVolume }\r\n  get cheekMoveVertically () { return this._cheekMoveVertically }\r\n\r\n  get torsoScaleDepth () { return this._torsoScaleDepth }\r\n  get torsoScaleHorizontally () { return this._torsoScaleHorizontally }\r\n  get torsoScaleVertically () { return this._torsoScaleVertically }\r\n  get torsoMoveHorizontally () { return this._torsoMoveHorizontally }\r\n  get torsoMoveVertically () { return this._torsoMoveVertically }\r\n  get torsoMoveDepth () { return this._torsoMoveDepth }\r\n  get torsoConeScale () { return this._torsoConeScale }\r\n  get torsoDrosiMuscle () { return this._torsoDrosiMuscle }\r\n  get torsoPectoralMuscle () { return this._torsoPectoralMuscle }\r\n  get torsoHipScaleDepth () { return this._torsoHipScaleDepth }\r\n  get torsoHipScaleHorizontally () { return this._torsoHipScaleHorizontally }\r\n  get torsoHipScaleVertically () { return this._torsoHipScaleVertically }\r\n  get torsoHipMoveHorizontally () { return this._torsoHipMoveHorizontally }\r\n  get torsoHipMoveVertically () { return this._torsoHipMoveVertically }\r\n  get torsoHipMoveDepth () { return this._torsoHipMoveDepth }\r\n  get torsoWaistVertically () { return this._torsoWaistVertically }\r\n  get torsoStomachMuscular () { return this._torsoStomachMuscular }\r\n  get torsoStomachPregnancy () { return this._torsoStomachPregnancy }\r\n  get torsoStomachNavieBump () { return this._torsoStomachNavieBump }\r\n  get torsoStomachNaviePosition () { return this._torsoStomachNaviePosition }\r\n  get torsoButtocksVolume () { return this._torsoButtocksVolume }\r\n  get torsoPelvisMuscular () { return this._torsoPelvisMuscular }\r\n  get torsoGenitalVolume () { return this._torsoGenitalVolume }\r\n\r\n  get armsLowerarmThinckness () { return this._armsLowerarmThinckness }\r\n  get armsLowerarmLength () { return this._armsLowerarmLength }\r\n  get armsLowerarmSinnyFat () { return this._armsLowerarmSinnyFat }\r\n  get armsLowerarmMuscles () { return this._armsLowerarmMuscles }\r\n  get armsUpperarmThinckness () { return this._armsUpperarmThinckness }\r\n  get armsUpperarmlength () { return this._armsUpperarmlength }\r\n  get armsUpperarmSinnyFat () { return this._armsUpperarmSinnyFat }\r\n  get armsUpperarmMuscles () { return this._armsUpperarmMuscles }\r\n\r\n  get handFingersDistence () { return this._handFingersDistence }\r\n  get handFingersDiameter () { return this._handFingersDiameter }\r\n  get handFingerslength () { return this._handFingerslength }\r\n  get handScale () { return this._handScale }\r\n  get handPosition () { return this._handPosition }\r\n\r\n  get fingernailLength () { return this._fingernailLength }\r\n\r\n  get legsUpperlegsHeight () { return this._legsUpperlegsHeight }\r\n  get legsLowerlegsHeight () { return this._legsLowerlegsHeight }\r\n  get legsKneeMoveHorizontally () { return this._legsKneeMoveHorizontally }\r\n  get legsKneeMoveVertically () { return this._legsKneeMoveVertically }\r\n  get legsLowerlegsScaleDepth () { return this._legsLowerlegsScaleDepth }\r\n  get legsLowerlegsHorizontally () { return this._legsLowerlegsHorizontally }\r\n  get legsLowerlegsSinnyFat () { return this._legsLowerlegsSinnyFat }\r\n  get legsLowerlegsMuscles () { return this._legsLowerlegsMuscles }\r\n  get legsUpperlegsScaleDepth () { return this._legsUpperlegsScaleDepth }\r\n  get legsUpperlegsHorizontally () { return this._legsUpperlegsHorizontally }\r\n  get legsUpperlegsSinnyFat () { return this._legsUpperlegsSinnyFat }\r\n  get legsUpperlegsMuscles () { return this._legsUpperlegsMuscles }\r\n\r\n  get tailLength () { return this._tailLength }\r\n  get tailWidth () { return this._tailWidth }\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param {string} str 后端传输的基因JSON\r\n   * @memberof Gene\r\n   */\r\n  constructor (str) {\r\n    const json = JSON.parse(str)\r\n    Object.keys(json).map(key => {\r\n      switch (key) {\r\n        case 'breeds':\r\n          this._breeds = new CatBreeds(json.breeds)\r\n          break\r\n        case 'eyeColorLeft':\r\n        case 'eyeColorRight':\r\n          this[`_${key}`] = this.convertHex2RGB(json[key])\r\n          break\r\n        default:\r\n          this[`_${key}`] = json[key]\r\n      }\r\n    })\r\n  }\r\n\r\n  /** 基因重组 */\r\n  recombination () {\r\n\r\n  }\r\n\r\n  /**\r\n   * 16进制颜色转换为BABYLON.Color3\r\n   *\r\n   * @param {string} hex 16进制颜色\r\n   * @returns {BABYLON.Color3} 颜色\r\n   * @memberof Gene\r\n   */\r\n  convertHex2RGB (hex) {\r\n    let sColor = hex.toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n      if (sColor.length === 4) {\r\n        let sColorNew = '#'\r\n        for (let i = 1; i < 4; i += 1) {\r\n          sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n        }\r\n        sColor = sColorNew\r\n      }\r\n      // 处理六位的颜色值\r\n      let sColorChange = []\r\n      for (let i = 1; i < 7; i += 2) {\r\n        sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\r\n      }\r\n      return new BABYLON.Color3(sColorChange[0] / 255, sColorChange[1] / 255, sColorChange[2] / 255) // 'RGB(' + sColorChange.join(',') + ')'\r\n    } else {\r\n      return sColor\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/cat-gene.js","import * as BABYLON from 'babylonjs' // eslint-disable-line\r\nimport { Game, CatGene } from './index' // eslint-disable-line\r\n\r\nexport default class CatMesh {\r\n  /**\r\n   * 游戏\r\n   *\r\n   * @type {Game}\r\n   * @memberof CatMaker\r\n   */\r\n  get game () { return this._game }\r\n  set game (val) { this._game = val }\r\n  /**\r\n   * 基因\r\n   *\r\n   * @type {Object.<string, CatGene>}\r\n   * @memberof CatMaker\r\n   */\r\n  get genes () { return this._genes }\r\n  set genes (val) { this._genes = val }\r\n  /**\r\n   * 每只猫的点数据\r\n   *\r\n   * @type {Object.<string, number[]>}\r\n   * @memberof CatMesh\r\n   */\r\n  get positions () { return this._positions }\r\n  set positions (val) { this._positions = val }\r\n  /**\r\n   * 基本坐标\r\n   *\r\n   * @type {number[]}\r\n   * @memberof CatMesh\r\n   */\r\n  get basePosition () { return this._basePosition }\r\n  set basePosition (val) { this._basePosition = val }\r\n  /**\r\n   * 所有模型\r\n   *\r\n   * @type {Object.<string, BABYLON.Mesh>}\r\n   * @memberof CatMesh\r\n   */\r\n  get meshs () { return this._meshs }\r\n  set meshs (val) { this._meshs = val }\r\n  /**\r\n   * 所有材质\r\n   *\r\n   * @type {Object.<string, BABYLON.PBRMaterial>}\r\n   * @memberof CatMesh\r\n   */\r\n  get mats () { return this._mats }\r\n  set mats (val) { this._mats = val }\r\n  /**\r\n   * 所显示的猫的基因key的顺序索引\r\n   *\r\n   * @type {number}\r\n   * @memberof CatMesh\r\n   */\r\n  get index () { return this._index }\r\n  set index (val) { this._index = val }\r\n  /**\r\n   * 所显示的猫的hash\r\n   *\r\n   * @type {string}\r\n   * @readonly\r\n   * @memberof CatMesh\r\n   */\r\n  get hash () { return Object.keys(this.genes)[this.index] }\r\n  /**\r\n   * 构造函数\r\n   * @memberof CatMesh\r\n   */\r\n  constructor (game) {\r\n    this._game = game\r\n    this._genes = {}\r\n    this._positions = {}\r\n    this._meshs = {}\r\n    this._mats = {}\r\n    this._index = 0\r\n  }\r\n\r\n  async loadAssetsAsync () {\r\n    await BABYLON.SceneLoader.ImportMeshAsync('', './static/assets/resources/cat/babylon/', 'cat.babylon', this.game.scene)\r\n      .then(({meshes}) => {\r\n        for (let i = 0; i < meshes.length; i++) {\r\n          this.meshs[meshes[i].name] = meshes[i]\r\n          if (meshes[i].material) {\r\n            meshes[i].receiveShadows = true // 开启接受阴影\r\n            const name = meshes[i].material.name\r\n            if (meshes[i].material.name !== 'm_cat_eye_glass_pbr_mr') {\r\n              this.mats[name] = new BABYLON.PBRMaterial(meshes[i].material.name, this.game.scene)\r\n              meshes[i].material.dispose()\r\n              // this.mats[name] && this.mats[name].dispose()\r\n              meshes[i].material = this.mats[name]\r\n              this.game.shadowGenerator.getShadowMap().renderList.push(meshes[i])\r\n            }\r\n          }\r\n        }\r\n        this.meshs.cat_eye_left_glass.material.dispose()\r\n        // this.meshs.cat_eye_right_glass.material.dispose()\r\n        this.mats.m_cat_eye_glass_pbr_mr = new BABYLON.PBRMaterial('m_cat_eye_glass_pbr_mr', this.game.scene)\r\n        this.meshs.cat_eye_left_glass.material = this.mats['m_cat_eye_glass_pbr_mr']\r\n        this.meshs.cat_eye_right_glass.material = this.mats['m_cat_eye_glass_pbr_mr']\r\n\r\n        this.basePosition = [].concat(this.meshs.cat_body.getVerticesData(BABYLON.VertexBuffer.PositionKind))\r\n      })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/cat-mesh.js","import {SceneObject} from './index' // eslint-disable-line no-unused-vars\r\n\r\n/**\r\n * 大纲类\r\n *\r\n * @export\r\n * @class OutLine\r\n * @extends {Map<string, SceneObject>}\r\n */\r\nexport default class Outline extends Map {\r\n  /**\r\n   * 获取大纲内资源是否已经全部加载\r\n   *\r\n   * @type {boolean}\r\n   * @readonly\r\n   * @memberof OutLine\r\n   */\r\n  get allIsLoaded () {\r\n    for (let obj of this.values()) {\r\n      if (!obj.assetsIsLoaded) return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/outline.js","import * as BABYLON from 'babylonjs'\r\nimport CatMaker from './../lib/cat-maker'\r\nimport TargetMaker from './../lib/cat-maker/src/target-maker'\r\nimport Gene from './../lib/cat-gene'\r\n\r\nimport {Scene, SceneObject, SceneObjectAssets, Outline} from './../lib/@cat/index' // eslint-disable-line\r\n\r\nconst MAKE_TARGET = false\r\nconst MESH_NAMES = [\r\n  'cat_body',\r\n  'body-fat-max', 'body-fat-min'\r\n  // 'head-angle-max', 'head-angle-min',\r\n  // 'forehead-bulge-max', 'forehead-bulge-min'\r\n]\r\n\r\nclass SceneHouse extends Scene {\r\n  constructor (game) {\r\n    super(game, 'scene house')\r\n  }\r\n\r\n  initAfter () {\r\n    // const game = this.game\r\n    // // 初始化场景\r\n    // game.scene.ambientColor = new BABYLON.Color3(1, 1, 1)\r\n    // // 初始化摄像机\r\n    // game.camera.position = new BABYLON.Vector3(50, 10, 50)\r\n    // game.camera.speed /= 1\r\n    // game.camera.setTarget(BABYLON.Vector3.Zero())\r\n\r\n    // // 初始化灯光\r\n    // game.light.dispose()\r\n    // game.light = new BABYLON.DirectionalLight('light default', new BABYLON.Vector3(-1, -2, 1), game.scene)\r\n    // game.light.intensity = 1\r\n    // game.light.position = new BABYLON.Vector3(20, 40, -20)\r\n\r\n    // // 初始化灯光阴影发生器\r\n    // game.shadowGenerator = new BABYLON.ShadowGenerator(1024, game.light)\r\n    // game.shadowGenerator.usePoissonSampling = true\r\n    // game.shadowGenerator.useExponentialShadowMap = true // Exponential shadow map\r\n    // game.shadowGenerator.useBlurExponentialShadowMap = true\r\n    // game.shadowGenerator.useCloseExponentialShadowMap = true\r\n\r\n    // game.shadowGenerator.useBlurCloseExponentialShadowMap = true\r\n    // game.shadowGenerator.usePercentageCloserFiltering = true // Percentage Closer Filtering\r\n    // game.shadowGenerator.filteringQuality = BABYLON.ShadowGenerator.QUALITY_LOW\r\n    // game.shadowGenerator.useContactHardeningShadow = true // Contact hardening shadow (Webgl2 only)\r\n    // game.shadowGenerator.forceBackFacesOnly = true\r\n    // game.shadowGenerator.useKernelBlur = true\r\n    // game.shadowGenerator.blurKernel = 32\r\n\r\n    // game.skybox && game.skybox.dispose()\r\n    // game.skybox = null\r\n    // game.skybox = game.scene.createDefaultSkybox(BABYLON.CubeTexture\r\n    //   .CreateFromPrefilteredData('./static/assets/resources/hdri/skybox.dds', game.scene), true, 1000, 0, true)\r\n    // game.skybox.name = 'skybox default'\r\n  }\r\n\r\n  initOutLine () {\r\n    this.outline.set('house', new SceneObject(this.game, 'house', new SceneObjectAssets(\r\n      './static/assets/resources/house/', 'house.gltf', '__root__',\r\n      [ 'house_mesh', 'house_pillar_mesh', 'house_planks_mesh', 'house_frame_mesh',\r\n        'house_carpet_mesh', 'house_bowl_water_mesh', 'house_floor_mesh',\r\n        'house_board_mesh', 'house_bowl_food_mesh' ])))\r\n  }\r\n\r\n  run () {\r\n    if (MAKE_TARGET) return this.computeTarget('body-fat-min')\r\n\r\n    const game = this.game\r\n    const scene = game.scene\r\n\r\n    game.skybox && game.skybox.dispose()\r\n    game.skybox = null\r\n    game.skybox = scene.createDefaultSkybox(BABYLON.CubeTexture.CreateFromPrefilteredData('./static/assets/resources/hdri/skybox.dds', scene), true, 1000, 0, true)\r\n    game.skybox.name = 'skybox default'\r\n\r\n    game.camera.position = new BABYLON.Vector3.Zero()\r\n\r\n    scene.shadowsEnabled = true\r\n\r\n    // this.game.light.shadowMinZ = 10\r\n    // this.game.light.shadowMaxZ = 70\r\n\r\n    this.outline.forEach((obj, key) => {\r\n      obj.display = true\r\n    })\r\n    this.outline.get('house').root.position = new BABYLON.Vector3(0, 5, -90)\r\n    this.game.cat.meshs.cat.position = new BABYLON.Vector3(0, 0, 0)\r\n    this.game.cat.meshs.cat.visibility = 1\r\n    this.game.scene.beginWeightedAnimation(this.game.cat.meshs['cat_body'].skeleton, 20, 150, 1, true, 1)\r\n    this.game.cat.meshs.cat.scaling = new BABYLON.Vector3(0.8, 0.8, 0.8)\r\n    this.game.cat.meshs.cat.position = new BABYLON.Vector3(8, -5.1, -120)\r\n\r\n    this.game.scene.getMeshByName('star-plane').dispose()\r\n\r\n    window.DeviceOrientationEvent && window.addEventListener('deviceorientation', e => {\r\n      this.game.camera.setTarget(new BABYLON.Vector3(e.gamma / 90 * 1.5, e.beta / 180 * 1.5, 0))\r\n    }, true)\r\n\r\n    // this.game.camera.dispose()\r\n    // this.game.camera = new BABYLON.FreeCamera('Default-Camera', new BABYLON.Vector3(0, 0, 10), this.game.scene)\r\n    // this.game.camera.setTarget(BABYLON.Vector3.Zero())\r\n    // this.game.camera.attachControl(this.game.canvas, true)\r\n    // this.game.camera.speed /= 2\r\n\r\n    // this.game.camera.dispose()\r\n    // this.game.camera = new BABYLON.DeviceOrientationCamera('Default-Camera', new BABYLON.Vector3(0, 0, 10), this.game.scene)\r\n    // this.game.camera.setTarget(BABYLON.Vector3.Zero())\r\n    // this.game.camera.angularSensibility = 10000000\r\n    // this.game.camera.moveSensibility = 10000000\r\n    // this.game.camera.attachControl(this.game.canvas, true)\r\n\r\n    this.game.pipeline = new BABYLON.DefaultRenderingPipeline('DEFAULT_PIPELINE', true, this.game.scene, [this.game.camera], true)\r\n\r\n    this.game.pipeline.samples = 1 // 多采样抗锯齿 1~4 默认：1\r\n    this.game.pipeline.fxaaEnabled = false // 快速抗锯齿，默认：false\r\n    this.game.pipeline.imageProcessing.toneMappingEnabled = false // Tone Mapping, default false\r\n    this.game.pipeline.imageProcessing.contrast = 1 // Camera contrast, range 1-4, default 1\r\n    this.game.pipeline.imageProcessing.exposure = 1 // Camera exposure, range 1-4, default 1\r\n    this.game.pipeline.bloomEnabled = true // Bloom, default false\r\n    this.game.pipeline.bloomKernel = 60 // Kernel, range 1-500, default 64\r\n    this.game.pipeline.bloomWeight = 0.5 // Weight\r\n    this.game.pipeline.bloomThreshold = 0.70 // Threshold\r\n    this.game.pipeline.bloomScale = 0.25 // Scale\r\n\r\n    console.log(this.game.shadowGenerator.getShadowMap())\r\n    // let tasks = {}\r\n    // let targets = {}\r\n    // let names = ['body-fat-max']\r\n\r\n    // names.map((name, i) => {\r\n    //   tasks[name] = assetsManager.addTextFileTask(name, `./static/assets/resources/cat/target/${name}.target`)\r\n    //   tasks[name].onSuccess = task => {\r\n    //     targets[name] = {}\r\n    //     task.text.split('\\n').map((line, i) => {\r\n    //       let arr = line.split(' ')\r\n    //       targets[name][Number(arr[0])] = [Number(arr[1]), Number(arr[2]), Number(arr[3])]\r\n    //     })\r\n    //   }\r\n    // })\r\n\r\n    // assetsManager.load()\r\n    // assetsManager.onTaskSuccessObservable.add(task => {})\r\n    // assetsManager.onTasksDoneObservable.add(tasks => {\r\n    //   console.log(targets)\r\n    //   this.loadSkyBox()\r\n    //     .then(() => BABYLON.SceneLoader.ImportMeshAsync('cat_body', './static/assets/resources/cat/babylon/', 'cat-target.babylon', scene))\r\n    //     .then(({meshes, skeletons}) => {\r\n    //       let mesh = meshes[0]\r\n    //       mesh.clone('dsa')\r\n    //       let skeleton = skeletons[0]\r\n\r\n    //       let positions = mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)\r\n\r\n    //       for (let t in targets['body-fat-max']) {\r\n    //         positions[t * 3] += (targets['body-fat-max'][t][0] - positions[t * 3]) * 1\r\n    //         positions[t * 3 + 1] += (targets['body-fat-max'][t][1] - positions[t * 3 + 1]) * 1\r\n    //         positions[t * 3 + 2] += (targets['body-fat-max'][t][2] - positions[t * 3 + 2]) * 1\r\n    //       }\r\n\r\n    //       mesh.setVerticesData(BABYLON.VertexBuffer.PositionKind, positions)\r\n\r\n    //       skeleton.createAnimationRange('blink', 1, 8)\r\n    //       skeleton.createAnimationRange('blink double', 8, 20)\r\n    //       skeleton.createAnimationRange('breathe', 20, 150)\r\n    //       skeleton.createAnimationRange('tail', 151, 191)\r\n\r\n    //       let blinkRange = skeleton.getAnimationRange('blink')\r\n    //       let blinkDoubleRange = skeleton.getAnimationRange('blink double')\r\n    //       let breatheRange = skeleton.getAnimationRange('breathe')\r\n    //       let tailRange = skeleton.getAnimationRange('tail')\r\n\r\n    //       let breatheAnim = scene.beginWeightedAnimation(skeleton, breatheRange.from, breatheRange.to, 1, true, 1)\r\n    //     })\r\n    // })\r\n\r\n    /*\r\n    this.loadSkyBox()\r\n      .then(({meshes, skeletons}) => {\r\n        let mesh = meshes[0]\r\n        let skeleton = skeletons[0]\r\n\r\n        let positions = mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)\r\n        let uv = mesh.getVerticesData(BABYLON.VertexBuffer.UVKind)\r\n        // console.log(mesh.getIndices())\r\n\r\n        skeleton.animationPropertiesOverride = new BABYLON.AnimationPropertiesOverride()\r\n        skeleton.animationPropertiesOverride.enableBlending = true\r\n        skeleton.animationPropertiesOverride.blendingSpeed = 0.05\r\n        skeleton.animationPropertiesOverride.loopMode = 1\r\n\r\n        skeleton.createAnimationRange('blink', 1, 8)\r\n        skeleton.createAnimationRange('blink double', 8, 20)\r\n        skeleton.createAnimationRange('breathe', 20, 150)\r\n        skeleton.createAnimationRange('tail', 151, 191)\r\n\r\n        let blinkRange = skeleton.getAnimationRange('blink')\r\n        let blinkDoubleRange = skeleton.getAnimationRange('blink double')\r\n        let breatheRange = skeleton.getAnimationRange('breathe')\r\n        let tailRange = skeleton.getAnimationRange('tail')\r\n\r\n        scene.stopAnimation(skeleton)\r\n\r\n        let breatheAnim = scene.beginWeightedAnimation(skeleton, breatheRange.from, breatheRange.to, 1, true, 1)\r\n        let tailAnim = scene.beginWeightedAnimation(skeleton, tailRange.from, tailRange.to, 1, true, 1)\r\n\r\n        // breatheAnim.syncWith(null)\r\n\r\n        // const blinkAnimation = () => {\r\n        //   let blinkAnim = scene.beginWeightedAnimation(skeleton, blinkRange.from, blinkRange.to, 1, false, 1, () => {\r\n        //     blinkAnim.syncWith(breatheAnim)\r\n        //     setTimeout(() => { blinkAnimation() }, Math.random() * 1000 + 1000)\r\n        //   })\r\n        // }\r\n\r\n        // blinkAnimation()\r\n      })\r\n\r\n    /* .then(() => BABYLON.SceneLoader.AppendAsync('./static/assets/resources/cat/', 'cat.obj', scene))\r\n      .then(scene => {\r\n        game.camera.setTarget(BABYLON.Vector3.Zero())\r\n\r\n        game.camera.position.y = 15\r\n\r\n        let body = scene.getMeshByName('cat_body')\r\n\r\n        let furMaterial = new BABYLON.FurMaterial('fur', scene)\r\n        furMaterial.furLength = 0\r\n        furMaterial.furAngle = 0\r\n        furMaterial.furColor = new BABYLON.Color3(1, 1, 1)\r\n        furMaterial.diffuseTexture = new BABYLON.Texture('./static/assets/resources/cat/m_cat_body_pbr_mr_baseColor.jpg', scene)\r\n        furMaterial.furTexture = BABYLON.FurMaterial.GenerateTexture('furTexture', scene)\r\n        furMaterial.heightTexture = new BABYLON.Texture('./static/assets/resources/cat/m_cat_body_fur_mask.png', scene)\r\n        furMaterial.furSpacing = 0.4\r\n        furMaterial.furDensity = 80\r\n        furMaterial.furSpeed = 10000\r\n        furMaterial.furGravity = new BABYLON.Vector3(0, -1, 0)\r\n\r\n        body.material = furMaterial\r\n\r\n        let sphere = BABYLON.Mesh.CreateSphere('sphere 2', 48, 30, scene)\r\n\r\n        sphere.position = new BABYLON.Vector3(50, 0, 0)\r\n\r\n        sphere.material = furMaterial\r\n\r\n        const quality = 30\r\n\r\n        let shells = BABYLON.FurMaterial.FurifyMesh(body, quality)\r\n        BABYLON.FurMaterial.FurifyMesh(sphere, quality)\r\n\r\n        for (var i = 0; i < shells.length; i++) {\r\n          shells[i].material.backFaceCulling = false\r\n        }\r\n      }) */\r\n    /*\r\n    BABYLON.SceneLoader\r\n      .AppendAsync(_path, _name, this.game.scene)\r\n      .then(() => BABYLON.SceneLoader.AppendAsync)\r\n      .then(append => append(_path2, 'cat.gltf', this.game.scene))\r\n      .then(scene => {\r\n        scene.shadowsEnabled = true\r\n\r\n        this.game.light.shadowMinZ = 10\r\n        this.game.light.shadowMaxZ = 70\r\n\r\n        'pillar,planks,frame,carpet,bowl_water,floor,board,bowl_food'.split(',').map((n, i) => {\r\n          let mesh = scene.getMeshByName(`house_${n}_mesh`)\r\n          mesh.receiveShadows = true\r\n          this.game.shadowGenerator.getShadowMap().renderList.push(mesh)\r\n        })\r\n\r\n        // let catMesh = this.game.scene.getMeshByName('cat_body cat')\r\n\r\n        // let furMaterial = new BABYLON.FurMaterial('fur_material', this.game.scene)\r\n\r\n        // furMaterial.furLength = 0.25\r\n        // furMaterial.furAngle = 0\r\n        // furMaterial.furColor = new BABYLON.Color3(1, 1, 1)\r\n        // furMaterial.diffuseTexture = new BABYLON.Texture('./static/assets/resources/cat/m_cat_body_pbr_mr_baseColor.jpg', this.game.scene)\r\n        // furMaterial.furTexture = BABYLON.FurMaterial.GenerateTexture('./static/assets/resources/cat/m_cat_body_pbr_mr_baseColor.jpg', this.game.scene)\r\n        // furMaterial.furSpacing = 2\r\n        // furMaterial.furDensity = 20\r\n        // furMaterial.furSpeed = 100\r\n        // furMaterial.furGravity = new BABYLON.Vector3(0, -1, 0)\r\n\r\n        // // let furTexture = BABYLON.FurMaterial.GenerateTexture('./static/assets/resources/cat/fur.jpg', this.game.scene)\r\n        // // furMaterial.furTexture = furTexture\r\n\r\n        // catMesh.material = furMaterial\r\n\r\n        // BABYLON.FurMaterial.FurifyMesh(catMesh, 30)\r\n\r\n        // console.log(catMesh)\r\n      })\r\n      .then(() => { this.DEBUG && this.debug() })\r\n      */\r\n  }\r\n\r\n  debug () {\r\n    const game = this.game\r\n    const scene = game.scene\r\n    const shadowGenerator = game.shadowGenerator\r\n\r\n    let advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI('UI')\r\n    let panel = this.debugPanel()\r\n\r\n    advancedTexture.addControl(panel)\r\n\r\n    panel.addControl(this.debugChkBox('Shadow Enable', val => {\r\n      scene.shadowsEnabled = !scene.shadowsEnabled\r\n    }, scene.shadowsEnabled))\r\n    panel.addControl(this.debugChkBox('Use Poisson Sampling', val => {\r\n      shadowGenerator.usePoissonSampling = !shadowGenerator.usePoissonSampling\r\n    }, shadowGenerator.usePoissonSampling))\r\n    panel.addControl(this.debugChkBox('Use Exponential Shadow Map', val => {\r\n      shadowGenerator.useExponentialShadowMap = !shadowGenerator.useExponentialShadowMap\r\n    }, shadowGenerator.useExponentialShadowMap))\r\n    panel.addControl(this.debugChkBox('Use Blur Exponential Shadow Map', val => {\r\n      shadowGenerator.useBlurExponentialShadowMap = !shadowGenerator.useBlurExponentialShadowMap\r\n    }, shadowGenerator.useBlurExponentialShadowMap))\r\n    panel.addControl(this.debugChkBox('Use Close Exponential Shadow Map', val => {\r\n      shadowGenerator.useCloseExponentialShadowMap = !shadowGenerator.useCloseExponentialShadowMap\r\n    }, shadowGenerator.useCloseExponentialShadowMap))\r\n    panel.addControl(this.debugChkBox('Use Blur Close Exponential ShadowMap', val => {\r\n      shadowGenerator.useBlurCloseExponentialShadowMap = !shadowGenerator.useBlurCloseExponentialShadowMap\r\n    }, shadowGenerator.useBlurCloseExponentialShadowMap))\r\n    panel.addControl(this.debugChkBox('Use Percentage Closer Filtering', val => {\r\n      shadowGenerator.usePercentageCloserFiltering = !shadowGenerator.usePercentageCloserFiltering\r\n    }, shadowGenerator.usePercentageCloserFiltering))\r\n    panel.addControl(this.debugChkBox('Use Contact Hardening Shadow', val => {\r\n      shadowGenerator.useContactHardeningShadow = !shadowGenerator.useContactHardeningShadow\r\n    }, shadowGenerator.useContactHardeningShadow))\r\n    panel.addControl(this.debugChkBox('Force Back Faces Only', val => {\r\n      shadowGenerator.forceBackFacesOnly = !shadowGenerator.forceBackFacesOnly\r\n    }, shadowGenerator.forceBackFacesOnly))\r\n    panel.addControl(this.debugChkBox('Use Kernel Blur', val => {\r\n      shadowGenerator.useKernelBlur = !shadowGenerator.useKernelBlur\r\n    }, shadowGenerator.useKernelBlur))\r\n  }\r\n\r\n  debugPanel () {\r\n    let panel = new BABYLON.GUI.StackPanel()\r\n    panel.width = '1024px'\r\n    panel.isVertical = true\r\n    panel.paddingRight = '20px'\r\n    panel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    panel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP\r\n\r\n    return panel\r\n  }\r\n\r\n  debugChkBox (text, func, initialValue, left) {\r\n    let checkbox = new BABYLON.GUI.Checkbox()\r\n    checkbox.width = '20px'\r\n    checkbox.height = '20px'\r\n    checkbox.isChecked = initialValue\r\n    checkbox.color = 'green'\r\n    checkbox.fontSize = 12\r\n    checkbox.onIsCheckedChangedObservable.add(value => func(value))\r\n\r\n    const header = BABYLON.GUI.Control.AddHeader(checkbox, text, '180px', { isHorizontal: true, controlFirst: true })\r\n    header.height = '30px'\r\n    header.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n\r\n    if (left) { header.left = left }\r\n\r\n    return header\r\n  }\r\n}\r\n\r\nexport default SceneHouse\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/SceneHouse.js","import * as BABYLON from 'babylonjs'\r\n\r\nconst {SceneLoaderProgressEvent: e} = BABYLON\r\n/**\r\n * 场景对象资源加载过程事件\r\n *\r\n * @class SceneObjectAssetsLoaderProgressEvent\r\n * @extends {BABYLON.SceneLoaderProgressEvent}\r\n */\r\nexport default class SceneObjectAssetsLoaderProgressEvent extends e {\r\n  /**\r\n   * 百分比\r\n   *\r\n   * @readonly\r\n   * @memberof SceneObjectAssetsLoaderProgressEvent\r\n   */\r\n  get percent () {\r\n    return this.lengthComputable ? this.loaded / this.total * 100 : 0\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/scene-object-assets-loader-progress-event.js","// eslint-disable-next-line no-unused-vars\r\nimport Breeds from './../cat-breeds'\r\n\r\nexport default class Gene {\r\n  set breeds (val) { this._breeds = val }\r\n  set age (val) { this._age = val }\r\n  set sex (val) { this._sex = val }\r\n  set fatRate (val) { this._fatRate = val }\r\n  set weight (val) { this._weight = val }\r\n  set height (val) { this._height = val }\r\n\r\n  set headAge (val) { this._headAge = val }\r\n  set headFat (val) { this._headFat = val }\r\n  set headAngle (val) { this._headAngle = val }\r\n  set headOval (val) { this._headOval = val }\r\n  set headRound (val) { this._headRound = val }\r\n  set headRectangular (val) { this._headRectangular = val }\r\n  set headSquare (val) { this._headSquare = val }\r\n  set headTriangular (val) { this._headTriangular = val }\r\n  set headInvertedTriangular (val) { this._headInvertedTriangular = val }\r\n  set headDiamond (val) { this._headDiamond = val }\r\n  set headParietalScaleDepth (val) { this._headParietalScaleDepth = val }\r\n  set headScaleDepth (val) { this._headScaleDepth = val }\r\n  set headScaleHorizontally (val) { this._headScaleHorizontally = val }\r\n  set headScaleVertically (val) { this._headScaleVertically = val }\r\n  set headMoveHorizontally (val) { this._headMoveHorizontally = val }\r\n  set headMoveVertically (val) { this._headMoveVertically = val }\r\n  set headMoveDepth (val) { this._headMoveDepth = val }\r\n\r\n  set foreheadBulge (val) { this._foreheadBulge = val }\r\n  set foreheadScaleVertically (val) { this._foreheadScaleVertically = val }\r\n  set foreheadCranicShape (val) { this._foreheadCranicShape = val }\r\n  set foreheadTempleBulge (val) { this._foreheadTempleBulge = val }\r\n\r\n  set eyebrowsBulge (val) { this._eyebrowsBulge = val }\r\n  set eyebrowsAngle (val) { this._eyebrowsAngle = val }\r\n  set eyebrowsMoveVertically (val) { this._eyebrowsMoveVertically = val }\r\n\r\n  set neckDouble (val) { this._neckDouble = val }\r\n  set neckScaleDepth (val) { this._neckScaleDepth = val }\r\n  set neckScaleDepthOfNape (val) { this._neckScaleDepthOfNape = val }\r\n  set neckScaleHorizontally (val) { this._neckScaleHorizontally = val }\r\n  set neckScaleVertically (val) { this._neckScaleVertically = val }\r\n  set neckMoveDepth (val) { this._neckMoveDepth = val }\r\n  set neckMoveHorizontally (val) { this._neckMoveHorizontally = val }\r\n  set neckMoveVertically (val) { this._neckMoveVertically = val }\r\n\r\n  set eyeColorLeft (val) { this._eyeColorLeft = val }\r\n  set eyeColorRight (val) { this._eyeColorRight = val }\r\n  set eyeBagVolume (val) { this._eyeBagVolume = val }\r\n  set eyeBagDistorsion (val) { this._eyeBagDistorsion = val }\r\n  set eyeBagHeight (val) { this._eyeBagHeight = val }\r\n  set eyeFoldAngle (val) { this._eyeFoldAngle = val }\r\n  set eyeFoldVolume (val) { this._eyeFoldVolume = val }\r\n  set eyeEpicanthus (val) { this._eyeEpicanthus = val }\r\n  set eyeScaleHeight0 (val) { this._eyeScaleHeight0 = val }\r\n  set eyeScaleHeight1 (val) { this._eyeScaleHeight1 = val }\r\n  set eyeScaleHeight2 (val) { this._eyeScaleHeight2 = val }\r\n  set eyeScaleHeight3 (val) { this._eyeScaleHeight3 = val }\r\n  set eyeScaleHeight4 (val) { this._eyeScaleHeight4 = val }\r\n  set eyeMoveOuterCornerHorizontally (val) { this._eyeMoveOuterCornerHorizontally = val }\r\n  set eyeMoveInnerCornerHorizontally (val) { this._eyeMoveInnerCornerHorizontally = val }\r\n  set eyeMoveOuterCornerVertically (val) { this._eyeMoveOuterCornerVertically = val }\r\n  set eyeMoveInnerCornerVertically (val) { this._eyeMoveInnerCornerVertically = val }\r\n  set eyeMoveHorizontally (val) { this._eyeMoveHorizontally = val }\r\n  set eyeMoveVertically (val) { this._eyeMoveVertically = val }\r\n  set eyeScale (val) { this._eyeScale = val }\r\n\r\n  // 基本形态\r\n  /** 品种 @type {Breeds} */ get breeds () { return this._breeds }\r\n  /** 年龄 @type {Number} */ get age () { return this._age }\r\n  /** 性别 @type {Number} */ get sex () { return this._sex }\r\n  /** 体脂 @type {Number} */ get fatRate () { return this._fatRate }\r\n  /** 体重 @type {Number} */ get weight () { return this._weight }\r\n  /** 身高 @type {Number} */ get height () { return this._height }\r\n\r\n  // 头部形态\r\n  /** 面部年龄 @type {Number} */ get headAge () { return this._headAge }\r\n  /** 面部肥胖 @type {Number} */ get headFat () { return this._headFat }\r\n  /** 面部角度 @type {Number} */ get headAngle () { return this._headAngle }\r\n  /** 面部椭圆形 @type {Number} */ get headOval () { return this._headOval }\r\n  /** 面部圆形 @type {Number} */ get headRound () { return this._headRound }\r\n  /** 面部矩形 @type {Number} */ get headRectangular () { return this._headRectangular }\r\n  /** 面部正方形 @type {Number} */ get headSquare () { return this._headSquare }\r\n  /** 面部正三角形 @type {Number} */ get headTriangular () { return this._headTriangular }\r\n  /** 面部倒三角形 @type {Number} */ get headInvertedTriangular () { return this._headInvertedTriangular }\r\n  /** 面部菱形形态 @type {Number} */ get headDiamond () { return this._headDiamond }\r\n  /** 头顶缩放深度 @type {Number} */ get headParietalScaleDepth () { return this._headParietalScaleDepth }\r\n  /** 头部缩放深度 @type {Number} */ get headScaleDepth () { return this._headScaleDepth }\r\n  /** 头部水平缩放 @type {Number} */ get headScaleHorizontally () { return this._headScaleHorizontally }\r\n  /** 头部垂直缩放 @type {Number} */ get headScaleVertically () { return this._headScaleVertically }\r\n  /** 头部水平位移 * @type {Number} */ get headMoveHorizontally () { return this._headMoveHorizontally }\r\n  /** 头部垂直位移 * @type {Number} */ get headMoveVertically () { return this._headMoveVertically }\r\n  /** 头部深度位移 * @type {Number} */ get headMoveDepth () { return this._headMoveDepth }\r\n\r\n  // 额头形态\r\n  /** 额头凸起 @type {Number} */ get foreheadBulge () { return this._foreheadBulge }\r\n  /** 额头垂直缩放 @type {Number} */ get foreheadScaleVertically () { return this._foreheadScaleVertically }\r\n  /** 额头颅骨凸起 * @type {Number} */ get foreheadCranicShape () { return this._foreheadCranicShape }\r\n  /** 额头太阳穴凸起 @type {Number} */ get foreheadTempleBulge () { return this._foreheadTempleBulge }\r\n\r\n  // 眉骨\r\n  /** 眉骨凸起 @type {Number} */ get eyebrowsBulge () { return this._eyebrowsBulge }\r\n  /** 眉骨角度 @type {Number} */ get eyebrowsAngle () { return this._eyebrowsAngle }\r\n  /** 眉骨垂直位移 @type {Number} */ get eyebrowsMoveVertically () { return this._eyebrowsMoveVertically }\r\n\r\n  // 颈部\r\n  /** 颈部双下巴 @type {Number} */ get neckDouble () { return this._neckDouble }\r\n  /** 颈部深度缩放 @type {Number} */ get neckScaleDepth () { return this._neckScaleDepth }\r\n  /** 后颈深度缩放 @type {Number} */ get neckScaleDepthOfNape () { return this._neckScaleDepthOfNape }\r\n  /** 颈部水平缩放 @type {Number} */ get neckScaleHorizontally () { return this._neckScaleHorizontally }\r\n  /** 颈部垂直缩放 * @type {Number} */ get neckScaleVertically () { return this._neckScaleVertically }\r\n  /** 颈部深度位移 * @type {Number} */ get neckMoveDepth () { return this._neckMoveDepth }\r\n  /** 颈部水平位移 * @type {Number} */ get neckMoveHorizontally () { return this._neckMoveHorizontally }\r\n  /** 颈部垂直位移 * @type {Number} */ get neckMoveVertically () { return this._neckMoveVertically }\r\n\r\n  // 眼睛\r\n  /** 左眼颜色 @type {Number[]} */ get eyeColorLeft () { return this._eyeColorLeft }\r\n  /** 右眼颜色 @type {Number[]} */ get eyeColorRight () { return this._eyeColorRight }\r\n  /** 眼袋体积 @type {Number} */ get eyeBagVolume () { return this._eyeBagVolume }\r\n  /** 眼袋歪曲 @type {Number} */ get eyeBagDistorsion () { return this._eyeBagDistorsion }\r\n  /** 眼袋高度 @type {Number} */ get eyeBagHeight () { return this._eyeBagHeight }\r\n  /** 眼褶角度 @type {Number} */ get eyeFoldAngle () { return this._eyeFoldAngle }\r\n  /** 眼褶体积 @type {Number} */ get eyeFoldVolume () { return this._eyeFoldVolume }\r\n  /** 眼内眦赘皮深度 @type {Number} */ get eyeEpicanthus () { return this._eyeEpicanthus }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight0 () { return this._eyeScaleHeight0 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight1 () { return this._eyeScaleHeight1 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight2 () { return this._eyeScaleHeight2 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight3 () { return this._eyeScaleHeight3 }\r\n  /** 高度（内眼角方向开始） @type {Number} */ get eyeScaleHeight4 () { return this._eyeScaleHeight4 }\r\n  /** 眼角水平位移 @type {Number} */ get eyeMoveOuterCornerHorizontally () { return this._eyeMoveOuterCornerHorizontally }\r\n  /** 内眼角水平位移 @type {Number} */ get eyeMoveInnerCornerHorizontally () { return this._eyeMoveInnerCornerHorizontally }\r\n  /** 眼角垂直位移 @type {Number} */ get eyeMoveOuterCornerVertically () { return this._eyeMoveOuterCornerVertically }\r\n  /** 内眼角垂直位移 @type {Number} */ get eyeMoveInnerCornerVertically () { return this._eyeMoveInnerCornerVertically }\r\n  /** 眼睛水平移动 * @type {Number} */ get eyeMoveHorizontally () { return this._eyeMoveHorizontally }\r\n  /** 眼睛垂直移动 * @type {Number} */ get eyeMoveVertically () { return this._eyeMoveVertically }\r\n  /** 眼睛缩放 @type {Number} */ get eyeScale () { return this._eyeScale }\r\n\r\n  // 乳房形态 仅限母猫(sex < 0.5)\r\n  /** 乳房大小 @type {Number} */ get breastCupSize () { return this._breastCupSize }\r\n  /** 乳房坚挺 @type {Number} */ get breastFirmness () { return this._breastFirmness }\r\n  /** 乳房垂直位移 @type {Number} */ get breastVerticalPosition () { return this._breastVerticalPosition }\r\n  /** 乳房水平位移 @type {Number} */ get breastHorizontalPosition () { return this._breastHorizontalPosition }\r\n  /** 乳房尖锐度 @type {Number} */ get breastSharpness () { return this._breastSharpness }\r\n  /** 乳房体积垂直位移 @type {Number} */ get breastVolumeVerticalPosition () { return this._breastVolumeVerticalPosition }\r\n  /** 乳头尺寸 @type {Number} */ get breastNippleSize () { return this._breastNippleSize }\r\n  /** 乳晕大小 @type {Number} */ get breastNipplePoint () { return this._breastNipplePoint }\r\n\r\n  get noseMoveVertically () { return this._noseMoveVertically }\r\n  get noseMoveHorizontally () { return this._noseMoveHorizontally }\r\n  get noseMoveDepth () { return this._noseMoveDepth }\r\n  get noseScaleVertically () { return this._noseScaleVertically }\r\n  get noseScaleHorizontally () { return this._noseScaleHorizontally }\r\n  get noseScaleDepth () { return this._noseScaleDepth }\r\n  get noseScaleNostrilsWidth () { return this._noseScaleNostrilsWidth }\r\n  get noseScaleTipWidth () { return this._noseScaleTipWidth }\r\n  get noseMoveBaseVertically () { return this._noseMoveBaseVertically }\r\n  get noseScaleWidth0 () { return this._noseScaleWidth0 }\r\n  get noseScaleWidth1 () { return this._noseScaleWidth1 }\r\n  get noseScaleWidth2 () { return this._noseScaleWidth2 }\r\n  get noseCompression () { return this._noseCompression }\r\n  get noseCurve () { return this._noseCurve }\r\n  get noseGreek () { return this._noseGreek }\r\n  get noseHump () { return this._noseHump }\r\n  get noseVolume () { return this._noseVolume }\r\n  get noseNostrilsAngle () { return this._noseNostrilsAngle }\r\n  get noseMoveTipVertically () { return this._noseMoveTipVertically }\r\n  get noseSeptumAngle () { return this._noseSeptumAngle }\r\n  get noseScaleNostrilsFlaring () { return this._noseScaleNostrilsFlaring }\r\n\r\n  get mouseScaleVertically () { return this._mouseScaleVertically }\r\n  get mouseScaleHorizontally () { return this._mouseScaleHorizontally }\r\n  get mouseScaleDepth () { return this._mouseScaleDepth }\r\n  get mouseMoveVertically () { return this._mouseMoveVertically }\r\n  get mouseMoveHorizontally () { return this._mouseMoveHorizontally }\r\n  get mouseMoveDepth () { return this._mouseMoveDepth }\r\n  get mouseScaleLowerlipHeight () { return this._mouseScaleLowerlipHeight }\r\n  get mouseScaleLowerlipWidth () { return this._mouseScaleLowerlipWidth }\r\n  get mouseScaleUpperlipHeight () { return this._mouseScaleUpperlipHeight }\r\n  get mouseScaleUpperlipWidth () { return this._mouseScaleUpperlipWidth }\r\n  get mouseCupidsBowWidth () { return this._mouseCupidsBowWidth }\r\n  get mouseDimples () { return this._mouseDimples }\r\n  get mouseLaughLines () { return this._mouseLaughLines }\r\n  get mouseLowerlipCurvedShape () { return this._mouseLowerlipCurvedShape }\r\n  get mouseMoveCornersVertically () { return this._mouseMoveCornersVertically }\r\n  get mouseScaleMiddleLowerlip () { return this._mouseScaleMiddleLowerlip }\r\n  get mouseScaleLowerlipVolume () { return this._mouseScaleLowerlipVolume }\r\n  get mouseScalePhiltrumVolume () { return this._mouseScalePhiltrumVolume }\r\n  get mouseScaleUpperlipVolume () { return this._mouseScaleUpperlipVolume }\r\n  get mouseUpperlipCurvedShape () { return this._mouseUpperlipCurvedShape }\r\n  get mouseScaleMiddleUpperlip () { return this._mouseScaleMiddleUpperlip }\r\n  get mouseCupidsBowShape () { return this._mouseCupidsBowShape }\r\n\r\n  get earMoveDepth () { return this._earMoveDepth }\r\n  get earMoveHorizontally () { return this._earMoveHorizontally }\r\n  get earMoveVertically () { return this._earMoveVertically }\r\n  get earScale () { return this._earScale }\r\n  get earScaleHeight () { return this._earScaleHeight }\r\n  get earScaleLobe () { return this._earScaleLobe }\r\n  get earRatation () { return this._earRatation }\r\n  get earShape () { return this._earShape }\r\n  get earWingShaped () { return this._earWingShaped }\r\n  get earFlapped () { return this._earFlapped }\r\n\r\n  get chinToneOfSide () { return this._chinToneOfSide }\r\n  get chinCLeft () { return this._chinCLeft }\r\n  get chinScaleProminence () { return this._chinScaleProminence }\r\n  get chinScaleWidth () { return this._chinScaleWidth }\r\n  get chinScaleHeight () { return this._chinScaleHeight }\r\n  get chinScaleAngular () { return this._chinScaleAngular }\r\n  get chinScalePrognathism () { return this._chinScalePrognathism }\r\n\r\n  get cheekOuterVolume () { return this._cheekOuterVolume }\r\n  get cheekScaleProminence () { return this._cheekScaleProminence }\r\n  get cheekInnerVolume () { return this._cheekInnerVolume }\r\n  get cheekMoveVertically () { return this._cheekMoveVertically }\r\n\r\n  get torsoScaleDepth () { return this._torsoScaleDepth }\r\n  get torsoScaleHorizontally () { return this._torsoScaleHorizontally }\r\n  get torsoScaleVertically () { return this._torsoScaleVertically }\r\n  get torsoMoveHorizontally () { return this._torsoMoveHorizontally }\r\n  get torsoMoveVertically () { return this._torsoMoveVertically }\r\n  get torsoMoveDepth () { return this._torsoMoveDepth }\r\n  get torsoConeScale () { return this._torsoConeScale }\r\n  get torsoDrosiMuscle () { return this._torsoDrosiMuscle }\r\n  get torsoPectoralMuscle () { return this._torsoPectoralMuscle }\r\n  get torsoHipScaleDepth () { return this._torsoHipScaleDepth }\r\n  get torsoHipScaleHorizontally () { return this._torsoHipScaleHorizontally }\r\n  get torsoHipScaleVertically () { return this._torsoHipScaleVertically }\r\n  get torsoHipMoveHorizontally () { return this._torsoHipMoveHorizontally }\r\n  get torsoHipMoveVertically () { return this._torsoHipMoveVertically }\r\n  get torsoHipMoveDepth () { return this._torsoHipMoveDepth }\r\n  get torsoWaistVertically () { return this._torsoWaistVertically }\r\n  get torsoStomachMuscular () { return this._torsoStomachMuscular }\r\n  get torsoStomachPregnancy () { return this._torsoStomachPregnancy }\r\n  get torsoStomachNavieBump () { return this._torsoStomachNavieBump }\r\n  get torsoStomachNaviePosition () { return this._torsoStomachNaviePosition }\r\n  get torsoButtocksVolume () { return this._torsoButtocksVolume }\r\n  get torsoPelvisMuscular () { return this._torsoPelvisMuscular }\r\n  get torsoGenitalVolume () { return this._torsoGenitalVolume }\r\n\r\n  get armsLowerarmThinckness () { return this._armsLowerarmThinckness }\r\n  get armsLowerarmLength () { return this._armsLowerarmLength }\r\n  get armsLowerarmSinnyFat () { return this._armsLowerarmSinnyFat }\r\n  get armsLowerarmMuscles () { return this._armsLowerarmMuscles }\r\n  get armsUpperarmThinckness () { return this._armsUpperarmThinckness }\r\n  get armsUpperarmlength () { return this._armsUpperarmlength }\r\n  get armsUpperarmSinnyFat () { return this._armsUpperarmSinnyFat }\r\n  get armsUpperarmMuscles () { return this._armsUpperarmMuscles }\r\n\r\n  get handFingersDistence () { return this._handFingersDistence }\r\n  get handFingersDiameter () { return this._handFingersDiameter }\r\n  get handFingerslength () { return this._handFingerslength }\r\n  get handScale () { return this._handScale }\r\n  get handPosition () { return this._handPosition }\r\n\r\n  get fingernailLength () { return this._fingernailLength }\r\n\r\n  get legsUpperlegsHeight () { return this._legsUpperlegsHeight }\r\n  get legsLowerlegsHeight () { return this._legsLowerlegsHeight }\r\n  get legsKneeMoveHorizontally () { return this._legsKneeMoveHorizontally }\r\n  get legsKneeMoveVertically () { return this._legsKneeMoveVertically }\r\n  get legsLowerlegsScaleDepth () { return this._legsLowerlegsScaleDepth }\r\n  get legsLowerlegsHorizontally () { return this._legsLowerlegsHorizontally }\r\n  get legsLowerlegsSinnyFat () { return this._legsLowerlegsSinnyFat }\r\n  get legsLowerlegsMuscles () { return this._legsLowerlegsMuscles }\r\n  get legsUpperlegsScaleDepth () { return this._legsUpperlegsScaleDepth }\r\n  get legsUpperlegsHorizontally () { return this._legsUpperlegsHorizontally }\r\n  get legsUpperlegsSinnyFat () { return this._legsUpperlegsSinnyFat }\r\n  get legsUpperlegsMuscles () { return this._legsUpperlegsMuscles }\r\n\r\n  get tailLength () { return this._tailLength }\r\n  get tailWidth () { return this._tailWidth }\r\n\r\n  /** 基因重组 */\r\n  recombination () {\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/cat-gene/index.js","import Game from './game'\r\nimport Scene from './scene'\r\nimport SceneObject from './scene-object'\r\nimport SceneObjectAssets from './scene-object-assets'\r\nimport SceneObjectAssetsLoaderProgressEvent from './scene-object-assets-loader-progress-event'\r\nimport Outline from './outline'\r\nimport CatMaker from './cat-maker'\r\nimport CatBreeds from './cat-breeds'\r\nimport CatGene from './cat-gene'\r\nimport CatMesh from './cat-mesh'\r\nimport User from './user'\r\n\r\nexport {\r\n  Game,\r\n  Scene,\r\n  SceneObject,\r\n  SceneObjectAssets,\r\n  SceneObjectAssetsLoaderProgressEvent,\r\n  Outline,\r\n  CatMaker,\r\n  CatBreeds,\r\n  CatGene,\r\n  CatMesh,\r\n  User\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/@cat/index.js","import * as BABYLON from 'babylonjs'\r\n\r\nclass FurMaterialDefines extends BABYLON.MaterialDefines {\r\n  constructor (props) {\r\n    super(props)\r\n    this.DIFFUSE = false\r\n    this.HEIGHTMAP = false\r\n    this.CLIPPLANE = false\r\n    this.ALPHATEST = false\r\n    this.DEPTHPREPASS = false\r\n    this.POINTSIZE = false\r\n    this.FOG = false\r\n    this.NORMAL = false\r\n    this.UV1 = false\r\n    this.UV2 = false\r\n    this.VERTEXCOLOR = false\r\n    this.VERTEXALPHA = false\r\n    this.NUM_BONE_INFLUENCERS = 0\r\n    this.BonesPerMesh = 0\r\n    this.INSTANCES = false\r\n    this.HIGHLEVEL = false\r\n    this.rebuild()\r\n  }\r\n}\r\n\r\nclass FurMaterial extends BABYLON.PushMaterial {\r\n  // #region property\r\n  @BABYLON.serialize() get furTime () { return this._furTime }\r\n  @BABYLON.serialize() set furTime (val) { this._furTime = val }\r\n\r\n  @BABYLON.serialize() get highLevelFur () { return this._highLevelFur }\r\n  @BABYLON.serialize() set highLevelFur (val) { this._highLevelFur = val }\r\n\r\n  @BABYLON.serialize('maxSimultaneousLights')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsLightsDirty') get maxSimultaneousLights () { return this._maxSimultaneousLights }\r\n  @BABYLON.serialize('maxSimultaneousLights')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsLightsDirty') set maxSimultaneousLights (val) { this._maxSimultaneousLights = val }\r\n\r\n  @BABYLON.serialize('disableLighting')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsLightsDirty') get disableLighting () { return this._disableLighting }\r\n  @BABYLON.serialize('disableLighting')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsLightsDirty') set highLevedisableLightinglFur (val) { this._disableLighting = val }\r\n\r\n  @BABYLON.serialize() get furDensity () { return this._furDensity }\r\n  @BABYLON.serialize() set furDensity (val) { this._furDensity = val }\r\n\r\n  @BABYLON.serialize() get furSpeed () { return this._furSpeed }\r\n  @BABYLON.serialize() set furSpeed (val) { this._furSpeed = val }\r\n\r\n  @BABYLON.serializeAsVector3() get furGravity () { return this._furGravity }\r\n  @BABYLON.serializeAsVector3() set furGravity (val) { this._furGravity = val }\r\n\r\n  @BABYLON.serialize() get furSpacing () { return this._furSpacing }\r\n  @BABYLON.serialize() set furSpacing (val) { this._furSpacing = val }\r\n\r\n  @BABYLON.serialize() get furOffset () { return this._furOffset }\r\n  @BABYLON.serialize() set furOffset (val) { this._furOffset = val }\r\n\r\n  @BABYLON.serializeAsColor3() get furColor () { return this._furColor }\r\n  @BABYLON.serializeAsColor3() set furColor (val) { this._furColor = val }\r\n\r\n  @BABYLON.serialize() get furAngle () { return this._furAngle }\r\n  @BABYLON.serialize() set furAngle (val) { this._furAngle = val }\r\n\r\n  @BABYLON.serialize() get furLength () { return this._furLength }\r\n  @BABYLON.serialize() set furLength (val) { this._furLength = val }\r\n\r\n  /** 基本颜色 */\r\n  @BABYLON.serializeAsColor3() get diffuseColor () { return this._diffuseColor }\r\n  @BABYLON.serializeAsColor3() set diffuseColor (val) { this._diffuseColor = val }\r\n\r\n  /** 基本颜色贴图 */\r\n  @BABYLON.serializeAsTexture('diffuseTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') get diffuseTexture () { return this._diffuseTexture }\r\n  @BABYLON.serializeAsTexture('diffuseTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') set diffuseTexture (val) { this._diffuseTexture = val }\r\n\r\n  /** 区域遮罩贴图 */\r\n  @BABYLON.serializeAsTexture('maskTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') get maskTexture () { return this._maskTexture }\r\n  @BABYLON.serializeAsTexture('maskTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') set maskTexture (val) { this._maskTexture = val }\r\n\r\n  /** 高度贴图 */\r\n  @BABYLON.serializeAsTexture('heightTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') get heightTexture () { return this._heightTexture }\r\n  @BABYLON.serializeAsTexture('heightTexture')\r\n  @BABYLON.expandToProperty('_markAllSubMeshesAsTexturesDirty') set heightTexture (val) { this._heightTexture = val }\r\n  // #endregion\r\n\r\n  constructor (name, scene) {\r\n    super(name, scene)\r\n\r\n    this.diffuseColor = new BABYLON.Color3(1, 1, 1)\r\n    this.furLength = 1\r\n    this.furAngle = 0\r\n    this.furColor = new BABYLON.Color3(0.44, 0.21, 0.02)\r\n    this.furOffset = 0.0\r\n    this.furSpacing = 12\r\n    this.furGravity = new BABYLON.Vector3(0, 0, 0)\r\n    this.furSpeed = 100\r\n    this.furDensity = 20\r\n    this._disableLighting = false\r\n    this._maxSimultaneousLights = 4\r\n    this.highLevelFur = true\r\n    this._furTime = 0\r\n  }\r\n\r\n  needAlphaBlending () { return (this.alpha < 1.0) }\r\n  needAlphaTesting () { return false }\r\n  getAlphaTestTexture () { return null }\r\n\r\n  updateFur () {\r\n    for (let i = 1; i < this._meshes.length; i++) {\r\n      let offsetFur = this._meshes[i].material\r\n      offsetFur.furLength = this.furLength\r\n      offsetFur.furAngle = this.furAngle\r\n      offsetFur.furGravity = this.furGravity\r\n      offsetFur.furSpacing = this.furSpacing\r\n      offsetFur.furSpeed = this.furSpeed\r\n      offsetFur.furColor = this.furColor\r\n      offsetFur.diffuseTexture = this.diffuseTexture\r\n      offsetFur.furTexture = this.furTexture\r\n      offsetFur.maskTexture = this.maskTexture\r\n      offsetFur.highLevelFur = this.highLevelFur\r\n      offsetFur.furTime = this.furTime\r\n      offsetFur.furDensity = this.furDensity\r\n    }\r\n  }\r\n\r\n  // Methods\r\n  isReadyForSubMesh (mesh, subMesh, useInstances) {\r\n    if (this.isFrozen) if (this._wasPreviouslyReady && subMesh.effect) return true\r\n    if (!subMesh._materialDefines) subMesh._materialDefines = new BABYLON.FurMaterialDefines()\r\n\r\n    let defines = subMesh._materialDefines\r\n    let scene = this.getScene()\r\n\r\n    if (!this.checkReadyOnEveryCall && subMesh.effect) if (this._renderId === scene.getRenderId()) return true\r\n\r\n    let engine = scene.getEngine()\r\n\r\n    // Textures\r\n    if (defines._areTexturesDirty) {\r\n      if (scene.texturesEnabled) {\r\n        if (this.diffuseTexture && BABYLON.StandardMaterial.DiffuseTextureEnabled) {\r\n          if (!this.diffuseTexture.isReady()) return false\r\n          else {\r\n            defines._needUVs = true\r\n            defines.DIFFUSE = true\r\n          }\r\n        }\r\n        if (this.heightTexture && engine.getCaps().maxVertexTextureImageUnits) {\r\n          if (!this.heightTexture.isReady()) return false\r\n          else {\r\n            defines._needUVs = true\r\n            defines.HEIGHTMAP = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // High level\r\n    if (this.highLevelFur !== defines.HIGHLEVEL) {\r\n      defines.HIGHLEVEL = true\r\n      defines.markAsUnprocessed()\r\n    }\r\n    // Misc.\r\n    BABYLON.MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines)\r\n    // Lights\r\n    defines._needNormals = BABYLON.MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting)\r\n    // Values that need to be evaluated on every frame\r\n    BABYLON.MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, !!useInstances)\r\n    // Attribs\r\n    BABYLON.MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true)\r\n\r\n    // Get correct effect\r\n    if (defines.isDirty) {\r\n      defines.markAsProcessed()\r\n      scene.resetCachedMaterial()\r\n      // Fallbacks\r\n      let fallbacks = new BABYLON.EffectFallbacks()\r\n      if (defines.FOG) fallbacks.addFallback(1, 'FOG')\r\n\r\n      BABYLON.MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights)\r\n      if (defines.NUM_BONE_INFLUENCERS > 0) fallbacks.addCPUSkinningFallback(0, mesh)\r\n\r\n      // Attributes\r\n      let attribs = [BABYLON.VertexBuffer.PositionKind]\r\n      if (defines.NORMAL) attribs.push(BABYLON.VertexBuffer.NormalKind)\r\n      if (defines.UV1) attribs.push(BABYLON.VertexBuffer.UVKind)\r\n      if (defines.UV2) attribs.push(BABYLON.VertexBuffer.UV2Kind)\r\n      if (defines.VERTEXCOLOR) attribs.push(BABYLON.VertexBuffer.ColorKind)\r\n      BABYLON.MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks)\r\n      BABYLON.MaterialHelper.PrepareAttributesForInstances(attribs, defines)\r\n      // Legacy browser patch\r\n      let shaderName = 'fur'\r\n      let join = defines.toString()\r\n      let uniforms = ['world', 'view', 'viewProjection', 'vEyePosition', 'vLightsType', 'vDiffuseColor',\r\n        'vFogInfos', 'vFogColor', 'pointSize',\r\n        'vDiffuseInfos',\r\n        'mBones',\r\n        'vClipPlane', 'diffuseMatrix',\r\n        'furLength', 'furAngle', 'furColor', 'furOffset', 'furGravity', 'furTime', 'furSpacing', 'furDensity'\r\n      ]\r\n      let samplers = ['diffuseSampler', 'heightTexture', 'furTexture', 'maskTexture']\r\n      let uniformBuffers = []\r\n      BABYLON.MaterialHelper.PrepareUniformsAndSamplersList({\r\n        uniformsNames: uniforms,\r\n        uniformBuffersNames: uniformBuffers,\r\n        samplers: samplers,\r\n        defines: defines,\r\n        maxSimultaneousLights: this.maxSimultaneousLights\r\n      })\r\n      subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\r\n        attributes: attribs,\r\n        uniformsNames: uniforms,\r\n        uniformBuffersNames: uniformBuffers,\r\n        samplers: samplers,\r\n        defines: join,\r\n        fallbacks: fallbacks,\r\n        onCompiled: this.onCompiled,\r\n        onError: this.onError,\r\n        indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights }\r\n      }, engine), defines)\r\n    }\r\n\r\n    if (!subMesh.effect || !subMesh.effect.isReady()) return false\r\n    this._renderId = scene.getRenderId()\r\n    this._wasPreviouslyReady = true\r\n    return true\r\n  }\r\n  bindForSubMesh (world, mesh, subMesh) {\r\n    const scene = this.getScene()\r\n    const defines = subMesh._materialDefines\r\n    if (!defines) return\r\n    const effect = subMesh.effect\r\n    if (!effect) return\r\n\r\n    this._activeEffect = effect\r\n\r\n    // Matrices\r\n    this.bindOnlyWorldMatrix(world)\r\n    this._activeEffect.setMatrix('viewProjection', scene.getTransformMatrix())\r\n\r\n    // Bones\r\n    BABYLON.MaterialHelper.BindBonesParameters(mesh, this._activeEffect)\r\n    if (scene.getCachedMaterial() !== this) {\r\n      // Textures\r\n      if (this._diffuseTexture && BABYLON.StandardMaterial.DiffuseTextureEnabled) {\r\n        this._activeEffect.setTexture('diffuseSampler', this._diffuseTexture)\r\n        this._activeEffect.setFloat2('vDiffuseInfos', this._diffuseTexture.coordinatesIndex, this._diffuseTexture.level)\r\n        this._activeEffect.setMatrix('diffuseMatrix', this._diffuseTexture.getTextureMatrix())\r\n      }\r\n      if (this._heightTexture) this._activeEffect.setTexture('heightTexture', this._heightTexture)\r\n      // Clip plane\r\n      BABYLON.MaterialHelper.BindClipPlane(this._activeEffect, scene)\r\n      // Point size\r\n      if (this.pointsCloud) this._activeEffect.setFloat('pointSize', this.pointSize)\r\n      BABYLON.MaterialHelper.BindEyePosition(effect, scene)\r\n    }\r\n    this._activeEffect.setColor4('vDiffuseColor', this.diffuseColor, this.alpha * mesh.visibility)\r\n    if (scene.lightsEnabled && !this.disableLighting) {\r\n      BABYLON.MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights)\r\n    }\r\n\r\n    // View\r\n    if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== BABYLON.Scene.FOGMODE_NONE) {\r\n      this._activeEffect.setMatrix('view', scene.getViewMatrix())\r\n    }\r\n\r\n    // Fog\r\n    BABYLON.MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect)\r\n    this._activeEffect.setFloat('furLength', this.furLength)\r\n    this._activeEffect.setFloat('furAngle', this.furAngle)\r\n    this._activeEffect.setColor4('furColor', this.furColor, 1.0)\r\n    if (this.highLevelFur) {\r\n      this._activeEffect.setVector3('furGravity', this.furGravity)\r\n      this._activeEffect.setFloat('furOffset', this.furOffset)\r\n      this._activeEffect.setFloat('furSpacing', this.furSpacing)\r\n      this._activeEffect.setFloat('furDensity', this.furDensity)\r\n      this._furTime += this.getScene().getEngine().getDeltaTime() / this.furSpeed\r\n      this._activeEffect.setFloat('furTime', this._furTime)\r\n      this._activeEffect.setTexture('furTexture', this.furTexture)\r\n    }\r\n\r\n    this._afterBind(mesh, this._activeEffect)\r\n  }\r\n  getAnimatables () {\r\n    let results = []\r\n    if (this.diffuseTexture && this.diffuseTexture.animations && this.diffuseTexture.animations.length > 0) {\r\n      results.push(this.diffuseTexture)\r\n    }\r\n    if (this.heightTexture && this.heightTexture.animations && this.heightTexture.animations.length > 0) {\r\n      results.push(this.heightTexture)\r\n    }\r\n    return results\r\n  }\r\n  getActiveTextures () {\r\n    let activeTextures = super.getActiveTextures()\r\n\r\n    if (this._diffuseTexture) activeTextures.push(this._diffuseTexture)\r\n\r\n    if (this._heightTexture) activeTextures.push(this._heightTexture)\r\n\r\n    return activeTextures\r\n  }\r\n  hasTexture (texture) {\r\n    if (super.hasTexture(texture)) return true\r\n\r\n    if (this.diffuseTexture === texture) return true\r\n\r\n    if (this._heightTexture === texture) return true\r\n\r\n    return false\r\n  }\r\n  dispose (forceDisposeEffect) {\r\n    if (this.diffuseTexture) this.diffuseTexture.dispose()\r\n    if (this._meshes) {\r\n      for (var i = 1; i < this._meshes.length; i++) {\r\n        var mat = this._meshes[i].material\r\n        if (mat) {\r\n          mat.dispose(forceDisposeEffect)\r\n        }\r\n        this._meshes[i].dispose()\r\n      }\r\n    }\r\n    super.dispose(forceDisposeEffect)\r\n  }\r\n  clone (name) {\r\n    return BABYLON.SerializationHelper.Clone(() => { return new FurMaterial(name, this.getScene()) }, this)\r\n  }\r\n  serialize () {\r\n    let serializationObject = BABYLON.SerializationHelper.Serialize(this)\r\n    serializationObject.customType = 'BABYLON.FurMaterial'\r\n    if (this._meshes) {\r\n      serializationObject.sourceMeshName = this._meshes[0].name\r\n      serializationObject.quality = this._meshes.length\r\n    }\r\n    return serializationObject\r\n  }\r\n  getClassName () {\r\n    return 'FurMaterial'\r\n  }\r\n\r\n  // Statics\r\n  static Parse (source, scene, rootUrl) {\r\n    let material = BABYLON.SerializationHelper.Parse(() => new FurMaterial(source.name, scene), source, scene, rootUrl)\r\n    if (source.sourceMeshName && material.highLevelFur) {\r\n      scene.executeWhenReady(() => {\r\n        let sourceMesh = scene.getMeshByName(source.sourceMeshName)\r\n        if (sourceMesh) {\r\n          const furTexture = FurMaterial.GenerateTexture('Fur Texture', scene)\r\n          material.furTexture = furTexture\r\n          FurMaterial.FurifyMesh(sourceMesh, source.quality)\r\n        }\r\n      })\r\n    }\r\n    return material\r\n  }\r\n  static GenerateTexture (name, scene) {\r\n    // Generate fur textures\r\n    let texture = new BABYLON.DynamicTexture('FurTexture ' + name, 256, scene, true)\r\n    let context = texture.getContext()\r\n    for (let i = 0; i < 20000; ++i) {\r\n      context.fillStyle = `rgba(255, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`\r\n      context.fillRect((Math.random() * texture.getSize().width), (Math.random() * texture.getSize().height), 2, 2)\r\n    }\r\n    texture.update(false)\r\n    texture.wrapU = BABYLON.Texture.WRAP_ADDRESSMODE\r\n    texture.wrapV = BABYLON.Texture.WRAP_ADDRESSMODE\r\n\r\n    return texture\r\n  }\r\n  /** Creates and returns an array of meshes used as shells for the Fur Material\r\n   * that can be disposed later in your code\r\n   * The quality is in interval [0, 100]\r\n   */\r\n  static FurifyMesh (sourceMesh, quality) {\r\n    let meshes = [sourceMesh]\r\n    let mat = sourceMesh.material\r\n\r\n    if (!(mat instanceof FurMaterial)) throw new Error('The material of the source mesh must be a Fur Material')\r\n\r\n    for (let i = 1; i < quality; i++) {\r\n      let offsetFur = new BABYLON.FurMaterial(mat.name + i, sourceMesh.getScene())\r\n      sourceMesh.getScene().materials.pop()\r\n      BABYLON.Tags.EnableFor(offsetFur)\r\n      BABYLON.Tags.AddTagsTo(offsetFur, 'furShellMaterial')\r\n      offsetFur.furLength = mat.furLength\r\n      offsetFur.furAngle = mat.furAngle\r\n      offsetFur.furGravity = mat.furGravity\r\n      offsetFur.furSpacing = mat.furSpacing\r\n      offsetFur.furSpeed = mat.furSpeed\r\n      offsetFur.furColor = mat.furColor\r\n      offsetFur.diffuseTexture = mat.diffuseTexture\r\n      offsetFur.furOffset = i / quality\r\n      offsetFur.furTexture = mat.furTexture\r\n      offsetFur.highLevelFur = mat.highLevelFur\r\n      offsetFur.furTime = mat.furTime\r\n      offsetFur.furDensity = mat.furDensity\r\n\r\n      let offsetMesh = sourceMesh.clone(sourceMesh.name + i)\r\n      offsetMesh.material = offsetFur\r\n      offsetMesh.skeleton = sourceMesh.skeleton\r\n      offsetMesh.position = BABYLON.Vector3.Zero()\r\n      meshes.push(offsetMesh)\r\n    }\r\n    for (let i = 1; i < meshes.length; i++) { meshes[i].parent = sourceMesh }\r\n    sourceMesh.material._meshes = meshes\r\n    return meshes\r\n  }\r\n}\r\n\r\nBABYLON.FurMaterialDefines = FurMaterialDefines\r\nBABYLON.FurMaterial = FurMaterial\r\n\r\nBABYLON.Effect.ShadersStore['furVertexShader'] = `\r\n  precision highp float;\r\n\r\n  attribute vec3 position;\r\n  attribute vec3 normal;\r\n  #ifdef UV1\r\n  attribute vec2 uv;\r\n  #endif\r\n  #ifdef UV2\r\n  attribute vec2 uv2;\r\n  #endif\r\n  #ifdef VERTEXCOLOR\r\n  attribute vec4 color;\r\n  #endif\r\n  #include<bonesDeclaration>\r\n\r\n  uniform float furLength;\r\n  uniform float furAngle;\r\n  #ifdef HIGHLEVEL\r\n  uniform float furOffset;\r\n  uniform vec3 furGravity;\r\n  uniform float furTime;\r\n  uniform float furSpacing;\r\n  uniform float furDensity;\r\n  #endif\r\n  #ifdef HEIGHTMAP\r\n  uniform sampler2D heightTexture;\r\n  #endif\r\n  #ifdef HIGHLEVEL\r\n  varying vec2 vFurUV;\r\n  #endif\r\n  #include<instancesDeclaration>\r\n  uniform mat4 view;\r\n  uniform mat4 viewProjection;\r\n  #ifdef DIFFUSE\r\n  varying vec2 vDiffuseUV;\r\n  uniform mat4 diffuseMatrix;\r\n  uniform vec2 vDiffuseInfos;\r\n  #endif\r\n  #ifdef POINTSIZE\r\n  uniform float pointSize;\r\n  #endif\r\n\r\n  varying vec3 vPositionW;\r\n  #ifdef NORMAL\r\n  varying vec3 vNormalW;\r\n  #endif\r\n  varying float vfur_length;\r\n  #ifdef VERTEXCOLOR\r\n  varying vec4 vColor;\r\n  #endif\r\n  #include<clipPlaneVertexDeclaration>\r\n  #include<fogVertexDeclaration>\r\n  #include<__decl__lightFragment>[0..maxSimultaneousLights]\r\n  float Rand(vec3 rv) {\r\n    float x=dot(rv,vec3(12.9898,78.233,24.65487));\r\n    return fract(sin(x)*43758.5453);\r\n  }\r\n  void main(void) {\r\n    #include<instancesVertex>\r\n    #include<bonesVertex>\r\n\r\n    float r=Rand(position);\r\n    #ifdef HEIGHTMAP\r\n    #if __VERSION__>100\r\n    vfur_length=furLength*texture(heightTexture,uv).x;\r\n    #else\r\n    vfur_length=furLength*texture2D(heightTexture,uv).r;\r\n    #endif\r\n    #else\r\n    vfur_length=(furLength*r);\r\n    #endif\r\n    vec3 tangent1=vec3(normal.y,-normal.x,0);\r\n    vec3 tangent2=vec3(-normal.z,0,normal.x);\r\n    r=Rand(tangent1*r);\r\n    float J=(2.0+4.0*r);\r\n    r=Rand(tangent2*r);\r\n    float K=(2.0+2.0*r);\r\n    tangent1=tangent1*J+tangent2*K;\r\n    tangent1=normalize(tangent1);\r\n    vec3 newPosition=position+normal*vfur_length*cos(furAngle)+tangent1*vfur_length*sin(furAngle);\r\n    #ifdef HIGHLEVEL\r\n\r\n    vec3 forceDirection=vec3(0.0,0.0,0.0);\r\n    forceDirection.x=sin(furTime+position.x*0.05)*0.2;\r\n    forceDirection.y=cos(furTime*0.7+position.y*0.04)*0.2;\r\n    forceDirection.z=sin(furTime*0.7+position.z*0.04)*0.2;\r\n    vec3 displacement=vec3(0.0,0.0,0.0);\r\n    displacement=furGravity+forceDirection;\r\n    float displacementFactor=pow(furOffset,3.0);\r\n    vec3 aNormal=normal;\r\n    aNormal.xyz+=displacement*displacementFactor;\r\n    newPosition=vec3(newPosition.x,newPosition.y,newPosition.z)+(normalize(aNormal)*furOffset*furSpacing);\r\n    #endif\r\n    #ifdef NORMAL\r\n    vNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\r\n    #endif\r\n\r\n    gl_Position=viewProjection*finalWorld*vec4(newPosition,1.0);\r\n    vec4 worldPos=finalWorld*vec4(newPosition,1.0);\r\n    vPositionW=vec3(worldPos);\r\n\r\n    #ifndef UV1\r\n    vec2 uv=vec2(0.,0.);\r\n    #endif\r\n    #ifndef UV2\r\n    vec2 uv2=vec2(0.,0.);\r\n    #endif\r\n    #ifdef DIFFUSE\r\n    if (vDiffuseInfos.x == 0.)\r\n    {\r\n      vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));\r\n    }\r\n    else\r\n    {\r\n      vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\r\n    }\r\n    #ifdef HIGHLEVEL\r\n    vFurUV=vDiffuseUV*furDensity;\r\n    #endif\r\n    #else\r\n    #ifdef HIGHLEVEL\r\n    vFurUV=uv*furDensity;\r\n    #endif\r\n    #endif\r\n\r\n    #include<clipPlaneVertex>\r\n\r\n    #include<fogVertex>\r\n\r\n    #include<shadowsVertex>[0..maxSimultaneousLights]\r\n\r\n    #ifdef VERTEXCOLOR\r\n    vColor=color;\r\n    #endif\r\n\r\n    #ifdef POINTSIZE\r\n    gl_PointSize=pointSize;\r\n    #endif\r\n  }`\r\nBABYLON.Effect.ShadersStore['furPixelShader'] = `\r\n  precision highp float;\r\n\r\n  uniform vec3 vEyePosition;\r\n  uniform vec4 vDiffuseColor;\r\n\r\n  uniform vec4 furColor;\r\n  uniform float furLength;\r\n  varying vec3 vPositionW;\r\n  varying float vfur_length;\r\n\r\n  #ifdef NORMAL\r\n  varying vec3 vNormalW;\r\n  #endif\r\n  \r\n  #ifdef VERTEXCOLOR\r\n  varying vec4 vColor;\r\n  #endif\r\n\r\n  #include<helperFunctions>\r\n\r\n  #include<__decl__lightFragment>[0..maxSimultaneousLights]\r\n\r\n  #ifdef DIFFUSE\r\n  varying vec2 vDiffuseUV;\r\n  uniform sampler2D diffuseSampler;\r\n  uniform vec2 vDiffuseInfos;\r\n  #endif\r\n\r\n  uniform sampler2D maskTexture;\r\n\r\n  #ifdef HIGHLEVEL\r\n  uniform float furOffset;\r\n  uniform sampler2D furTexture;\r\n  varying vec2 vFurUV;\r\n  #endif\r\n  #include<lightsFragmentFunctions>\r\n  #include<shadowsFragmentFunctions>\r\n  #include<fogFragmentDeclaration>\r\n  #include<clipPlaneFragmentDeclaration>\r\n\r\n  float Rand(vec3 rv) {\r\n    float x=dot(rv,vec3(12.9898,78.233,24.65487));\r\n    return fract(sin(x)*43758.5453);\r\n  }\r\n\r\n  void main(void) {\r\n\r\n    #include<clipPlaneFragment>\r\n    vec3 viewDirectionW=normalize(vEyePosition - vPositionW);\r\n\r\n    vec4 baseColor = furColor;\r\n    vec3 diffuseColor=vDiffuseColor.rgb;\r\n\r\n    float alpha = vDiffuseColor.a;\r\n\r\n    #ifdef DIFFUSE\r\n    baseColor *= texture2D(diffuseSampler, vDiffuseUV);\r\n    #ifdef ALPHATEST\r\n    if (baseColor.a<0.4)\r\n    discard;\r\n    #endif\r\n    #include<depthPrePass>\r\n    baseColor.rgb *= vDiffuseInfos.y;\r\n    #endif\r\n    #ifdef VERTEXCOLOR\r\n    baseColor.rgb *= vColor.rgb;\r\n    #endif\r\n\r\n    #ifdef NORMAL\r\n    vec3 normalW=normalize(vNormalW);\r\n    #else\r\n    vec3 normalW=vec3(1.0, 1.0, 1.0);\r\n    #endif\r\n\r\n    #ifdef HIGHLEVEL\r\n    vec4 furTextureColor=texture2D(furTexture,vec2(vFurUV.x,vFurUV.y));\r\n    if (furTextureColor.a<=0.0 || furTextureColor.g<furOffset) {\r\n      discard;\r\n    }\r\n    float occlusion = mix(0.0, furTextureColor. b* 1.2, furOffset);\r\n    baseColor=vec4(baseColor.xyz * occlusion, 1.1 - furOffset);\r\n    #endif\r\n\r\n    vec3 diffuseBase=vec3(0.,0.,0.);\r\n    lightingInfo info;\r\n    float shadow=1.;\r\n    float glossiness=0.;\r\n    #ifdef SPECULARTERM\r\n    vec3 specularBase=vec3(0.,0.,0.);\r\n    #endif\r\n    #include<lightFragment>[0..maxSimultaneousLights]\r\n    #ifdef VERTEXALPHA\r\n    alpha *= vColor.a;\r\n    #endif\r\n    vec3 finalDiffuse=clamp(diffuseBase.rgb*baseColor.rgb,0.0,1.0);\r\n\r\n    #ifdef HIGHLEVEL\r\n    vec4 color=vec4(finalDiffuse, alpha);\r\n    #else\r\n    float r=vfur_length/furLength*0.5;\r\n    vec4 color=vec4(finalDiffuse*(0.5+r),alpha);\r\n    #endif\r\n    #include<fogFragment>\r\n    \r\n    gl_FragColor=color;\r\n  }`\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/fur-material/index.js","import * as GUI from 'babylonjs-gui'\r\nimport Game from './../main' // eslint-disable-line no-unused-vars\r\n\r\nimport {Scene, SceneObject, SceneObjectAssets} from './../lib/@cat/index'\r\n\r\nconst [{Texture, ShaderMaterial}, {TextBlock}] = [BABYLON, BABYLON.GUI]\r\n\r\nconst FPS = 60\r\n\r\nconst PARTICLE_START_TIME = 500 // eslint-disable-line no-unused-vars\r\n/** GUI 初始化延时，如果为 0 可能造成定位不准确。 */\r\nconst GUI_LABEL_READY_TIME = 50\r\n/** 飞溅网格资源文件路径 */\r\nconst MESH_SPLASH_FILE_PATH = './static/assets/resources/'\r\n/** 飞溅网格资源文件名称 */\r\nconst MESH_SPLASH_FILE_NAME = 'LoadingUI.babylon'\r\n/** 飞溅网格资源文件网格名称 */\r\nconst MESH_SPLASH_ASSETS_NAME = 'plane'\r\n/** GUI 入场透明度过渡时长 */\r\nconst GUI_BEGIN_FADE_IN_DURATION = 500\r\n/** GUI 入场透明度过渡区间值 */\r\nconst GUI_BEGIN_FADE_IN_OPACITY_STEP = 1 / (GUI_BEGIN_FADE_IN_DURATION / 1000) * FPS / 1000\r\n/** GUI 入场后静止时间 */\r\nconst GUI_BEGIN_WATTING_TIME = 1000\r\n\r\nclass SceneLoading extends Scene {\r\n  get guis () { return this._guis }\r\n  /** 星空网格 */\r\n  get star () { return this._star }\r\n  /** 星空网格材质 */\r\n  get starMaterial () { return this._starMaterial }\r\n  /** 星空网格时间 */\r\n  get starShaderTime () { return this._starShaderTime }\r\n  /** 星空网格时钟 */\r\n  get starShaderTimer () { return this._starShaderTimer }\r\n  /** 星空运动速度 */\r\n  get starSpeed () { return this._starSpeed }\r\n\r\n  set guis (val) { this._guis = val }\r\n  set star (val) { this._star = val }\r\n  set starMaterial (val) { this._starMaterial = val }\r\n  set starShaderTime (val) { this._starShaderTime = val }\r\n  set starShaderTimer (val) { this._starShaderTimer = val }\r\n  set starSpeed (val) { this._starSpeed = val }\r\n\r\n  PARTICLE_SHOW () {\r\n    this._particleSys = new BABYLON.ParticleSystem('particles', 1000, this.game.scene)\r\n    this._particleSys.particleTexture = new BABYLON.Texture('./static/assets/images/flare.png', this._scene)\r\n\r\n    // Where the particles come from\r\n    this._particleSys.emitter = new BABYLON.Vector3(0, 0, 0) // the starting object, the emitter\r\n    this._particleSys.minEmitBox = new BABYLON.Vector3(-1, 0, 0) // Starting all from\r\n    this._particleSys.maxEmitBox = new BABYLON.Vector3(1, 0, 0) // To...\r\n\r\n    // Colors of all particles\r\n    this._particleSys.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0)\r\n    this._particleSys.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0)\r\n    this._particleSys.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0)\r\n\r\n    // Size of each particle (random between...\r\n    this._particleSys.minSize = 0.1\r\n    this._particleSys.maxSize = 1.0\r\n\r\n    // Life time of each particle (random between...\r\n    this._particleSys.minLifeTime = 0.3\r\n    this._particleSys.maxLifeTime = 1.5\r\n    // Emission rate\r\n    this._particleSys.emitRate = 0\r\n\r\n    // Blend mode : BLENDMODE_ONEONE, or BLENDMODE_STANDARD\r\n    this._particleSys.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE\r\n\r\n    // Set the gravity of all particles\r\n    this._particleSys.gravity = new BABYLON.Vector3(0, 0, 0)\r\n\r\n    // Direction of each particle after it has been emitted\r\n    this._particleSys.direction1 = new BABYLON.Vector3(-5, -5, 2)\r\n    this._particleSys.direction2 = new BABYLON.Vector3(5, 5, 6)\r\n\r\n    // Angular speed, in radians\r\n    this._particleSys.minAngularSpeed = 0\r\n    this._particleSys.maxAngularSpeed = Math.PI\r\n\r\n    // Speed\r\n    this._particleSys.minEmitPower = 0.1\r\n    this._particleSys.maxEmitPower = 10\r\n    this._particleSys.updateSpeed = 0.01\r\n\r\n    this._particleSys.start()\r\n\r\n    let _keyEmitRate = [{frame: 0, value: 3000}, {frame: 48, value: 350}, {frame: 72, value: 150}]\r\n    let _keyMinSize = [{frame: 0, value: 0.1}, {frame: 48, value: 0.6}]\r\n    let _keyMaxSize = [{frame: 0, value: 0.1}, {frame: 48, value: 1.8}]\r\n    let _keyMaxEmitPower = [{frame: 0, value: 20}, {frame: 48, value: 10}, {frame: 72, value: 1}]\r\n    let _keyUpdateSpeed = [{frame: 24, value: 0.01}, {frame: 72, value: 0.005}]\r\n\r\n    let _aniEmitRate = new BABYLON.Animation('animationEmitRate', 'emitRate', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n    let _aniMinSize = new BABYLON.Animation('animationMinSize', 'minSize', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n    let _aniMaxSize = new BABYLON.Animation('animationMaxSize', 'maxSize', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n    let _aniMaxEmitPower = new BABYLON.Animation('animationMaxEmitPower', 'maxEmitPower', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n    let _aniUpdateSpeed = new BABYLON.Animation('animationUpdateSpeed', 'updateSpeed', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n\r\n    _aniEmitRate.setKeys(_keyEmitRate)\r\n    _aniMinSize.setKeys(_keyMinSize)\r\n    _aniMaxSize.setKeys(_keyMaxSize)\r\n    _aniMaxEmitPower.setKeys(_keyMaxEmitPower)\r\n    _aniUpdateSpeed.setKeys(_keyUpdateSpeed)\r\n\r\n    this.game.scene.beginDirectAnimation(this._particleSys, [_aniEmitRate, _aniMinSize, _aniMaxSize, _aniMaxEmitPower, _aniUpdateSpeed], 0, 100)\r\n    // setTimeout(() => {\r\n    //   this._particleSys.emitRate = 100\r\n    // }, 500)\r\n  }\r\n\r\n  _run () {\r\n    const game = this.game\r\n    const scene = game.scene\r\n\r\n    /** 飞溅网格加载完毕回调函数，可能为空函数。\r\n     * 当在GUI等待时间内加载完毕，如GUI等待时间已过尚未加载完毕，此方法会被复写为下文中 splashShow 方法\r\n     */\r\n    let splashReadyCallback = () => {}\r\n    // 加载飞溅动画网格\r\n    BABYLON.SceneLoader.ImportMeshAsync(\r\n      MESH_SPLASH_ASSETS_NAME,\r\n      MESH_SPLASH_FILE_PATH,\r\n      MESH_SPLASH_FILE_NAME,\r\n      scene)\r\n      .then(({meshes, skeletons}) => {\r\n        this.splash = meshes[0]\r\n        this.splashSkeletons = skeletons[0]\r\n        this.splash.visibility = 0\r\n\r\n        this.splash.material.emissiveColor = new BABYLON.Color3(255 / 255, 145 / 255, 72 / 255)\r\n        this.splash.material.alphaMode = BABYLON.Engine.ALPHA_ADD\r\n        this.splashIsReady = true\r\n        splashReadyCallback()\r\n      })\r\n\r\n    /** 飞溅网格显示并在一定延时开启动画和GUI移动至右下角 */\r\n    const splashShow = () => {\r\n      this.GUI_LABEL_MOVE_TO_END()\r\n      this.splash.visibility = 1\r\n      setTimeout(() => {\r\n        setTimeout(() => { starShow() }, 900)\r\n        scene.beginAnimation(this.splashSkeletons, 0, 26, false, 1, () => {\r\n          // this.PARTICLE_SHOW()\r\n          this.GUI_LOADING_MESSAGE_SHOW()\r\n          this.splash.dispose()\r\n        })\r\n      }, 750)\r\n    }\r\n    /** 显示星空 */\r\n    const starShow = () => {\r\n      // 播放音频\r\n      const soundOpt = {\r\n        loop: true,\r\n        autoplay: true,\r\n        volume: 0\r\n      }\r\n      this.sound = new BABYLON.Sound('loading-sound', './static/assets/sounds/loading.mp3', scene, null, soundOpt)\r\n      // 载入星空平面\r\n      const options = {\r\n        height: 10,\r\n        width: 10,\r\n        sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n      }\r\n      this.star = BABYLON.MeshBuilder.CreatePlane('star-plane', options, scene)\r\n      this.star.visibility = 0\r\n      this.star.material = this.starMaterial\r\n      this.star.visibility = 1\r\n      this.starSpeed = 0.05\r\n\r\n      let speedKey = [{frame: 0, value: 0.05}, {frame: 30, value: 0.03}, {frame: 60, value: 0.01}]\r\n\r\n      let aniSpeed = new BABYLON.Animation('star-speed-animation', 'starSpeed', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n\r\n      aniSpeed.setKeys(speedKey)\r\n\r\n      scene.beginDirectAnimation(this, [aniSpeed], 0, 60)\r\n\r\n      this.starShaderTimer = setInterval(() => {\r\n        this.starShaderTime += this.starSpeed\r\n        this.starMaterial.setFloat('time', this.starShaderTime)\r\n      }, 1000 / 60)\r\n      /** 绑定重力加速度 */\r\n      window.DeviceOrientationEvent && window.addEventListener('deviceorientation', e => {\r\n        this.star.position = new BABYLON.Vector3(e.gamma / 90 * 2, e.beta / 180 * 2, 0)\r\n      }, true)\r\n    }\r\n\r\n    // 开始\r\n    setTimeout(() => {\r\n      this.GUI_LABEL_REMOVE_TO_CENTER()\r\n      let opacity = 0\r\n      let opacityTimer = setInterval(() => {\r\n        opacity += GUI_BEGIN_FADE_IN_OPACITY_STEP\r\n\r\n        this.guis.textCompany.alpha = opacity\r\n        this.guis.textBestOf.alpha = opacity\r\n        this.guis.textPowerBy.alpha = opacity\r\n\r\n        if (opacity >= 1) { // 如果透明度为1，入场结束\r\n          setTimeout(() => { // 等待一定时间后准备显示飞溅网格\r\n            if (this.splashIsReady) splashShow()\r\n            else splashReadyCallback = () => { splashShow() }\r\n          }, GUI_BEGIN_WATTING_TIME)\r\n          window.clearInterval(opacityTimer) // 清理时钟\r\n        }\r\n      }, 1000 / FPS)\r\n    }, GUI_LABEL_READY_TIME)\r\n  }\r\n\r\n  constructor (game) {\r\n    super(game, 'scene house')\r\n    this._game = game\r\n    this._splashIsReady = false\r\n    this._starShaderTime = 0\r\n    this._starSpeed = 0.01\r\n\r\n    this.GUI_BEGIN_ALPHA_CHANGE_TIME = 500\r\n    this.GUI_MOVE_TO_RIGHT_BOTTOM_TIME = 1000\r\n    this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME = 200\r\n  }\r\n\r\n  initAfter () {\r\n    const [{game}, {scene}] = [this, this.game]\r\n    this.guis = {}\r\n\r\n    this.guis.advancedTexture = GUI.AdvancedDynamicTexture.CreateFullscreenUI('Begin-Scene-GUI', true, scene)\r\n    this.guis.advancedTexture.renderAtIdealSize = false\r\n\r\n    // #region 初始化标签\r\n    this.guis.textCompany = new TextBlock()\r\n    this.guis.textCompany.fontFamily = 'Microsoft YaHei'\r\n    this.guis.textCompany.fontSize = '32px'\r\n    this.guis.textCompany.color = 'white'\r\n    this.guis.textCompany.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    this.guis.textCompany.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP\r\n    this.guis.textCompany.resizeToFit = true\r\n    this.guis.textCompany.text = 'Parity Ltd. Present'\r\n    this.guis.textCompany.alpha = 0\r\n\r\n    this.guis.textBestOf = new TextBlock()\r\n    this.guis.textBestOf.fontFamily = 'Microsoft YaHei'\r\n    this.guis.textBestOf.resizeToFit = true\r\n    this.guis.textBestOf.text = 'BEST OF 2018-2020'\r\n    this.guis.textBestOf.fontSize = '14px'\r\n    this.guis.textBestOf.color = 'white'\r\n    this.guis.textBestOf.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    this.guis.textBestOf.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP\r\n    this.guis.textBestOf.alpha = 0\r\n\r\n    this.guis.textPowerBy = new TextBlock()\r\n    this.guis.textPowerBy.fontFamily = 'Microsoft YaHei'\r\n    this.guis.textPowerBy.resizeToFit = true\r\n    this.guis.textPowerBy.text = 'POWER BY BABYLON JS'\r\n    this.guis.textPowerBy.fontSize = '16px'\r\n    this.guis.textPowerBy.color = 'white'\r\n    this.guis.textPowerBy.scaleY = 0.5\r\n    this.guis.textPowerBy.scaleX = 0.5\r\n    this.guis.textPowerBy.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    this.guis.textPowerBy.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP\r\n    this.guis.textPowerBy.alpha = 0\r\n\r\n    this.guis.advancedTexture.addControl(this.guis.textCompany)\r\n    this.guis.advancedTexture.addControl(this.guis.textBestOf)\r\n    this.guis.advancedTexture.addControl(this.guis.textPowerBy)\r\n    // #endregion\r\n\r\n    // 初始化渲染管线\r\n    game.pipeline.samples = 1 // 多采样抗锯齿 1~4 默认：1\r\n    game.pipeline.fxaaEnabled = false // 快速抗锯齿，默认：false\r\n    game.pipeline.imageProcessing.toneMappingEnabled = false // Tone Mapping, default false\r\n    game.pipeline.imageProcessing.contrast = 1 // Camera contrast, range 1-4, default 1\r\n    game.pipeline.imageProcessing.exposure = 1 // Camera exposure, range 1-4, default 1\r\n    game.pipeline.bloomEnabled = false // Bloom, default false\r\n\r\n    // 星空材质\r\n    this.starMaterial = new ShaderMaterial('star-material',\r\n      scene, { vertex: 'star', fragment: 'star' }, { attributes: ['position', 'uv'],\r\n        uniforms: ['time', 'world', 'worldView', 'worldViewProjection', 'view', 'projection']\r\n      })\r\n\r\n    this.starMaterial.setTexture('textureSampler', new Texture('./static/assets/images/star.png', scene))\r\n  }\r\n\r\n  initOutLine () {\r\n    this.outline.set('splash',\r\n      new SceneObject(this.game, 'loading',\r\n        new SceneObjectAssets('./static/assets/resources/', 'LoadingUI.babylon', 'plane', [])))\r\n  }\r\n\r\n  run () {\r\n    setTimeout(() => { // GUI 初始化延时，如果为 0 或直接运行可能造成定位不准确。\r\n      this.__guiTextRemoveCenter() // 移动所有的 GUI 到屏幕中心\r\n      let opacity = 0\r\n      let opacityTimer = setInterval(() => {\r\n        opacity += GUI_BEGIN_FADE_IN_OPACITY_STEP\r\n\r\n        this.guis.textCompany.alpha = opacity\r\n        this.guis.textBestOf.alpha = opacity\r\n        this.guis.textPowerBy.alpha = opacity\r\n\r\n        if (opacity >= 1) { // 如果透明度为1，入场结束\r\n          // 等待一定时间后显示飞溅网格 GUI_BEGIN_WATTING_TIME\r\n          setTimeout(() => this.__splashMeshShow(), GUI_BEGIN_WATTING_TIME)\r\n          window.clearInterval(opacityTimer) // 清理时钟\r\n        }\r\n      }, 1000 / FPS)\r\n    }, 50)\r\n  }\r\n\r\n  // custom method\r\n  __loadHouseScene () {}\r\n  /**\r\n   * GUI 移动至屏幕中心\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __guiTextRemoveCenter () {\r\n    const [{canvas}, {textCompany, textBestOf, textPowerBy}] = [this.game, this.guis]\r\n\r\n    textCompany.left = (canvas.width - textCompany._width.internalValue) / 2 + 'px'\r\n    textCompany.top = (canvas.height - textCompany._height.internalValue) / 2 + 'px'\r\n    textBestOf.left = (canvas.width - textBestOf._width.internalValue) / 2 + 'px'\r\n    textBestOf.top = textCompany._top.internalValue + textCompany._height.internalValue + 0 + 'px'\r\n    textPowerBy.left = (canvas.width - textPowerBy._width.internalValue) / 2 + 'px'\r\n    textPowerBy.top = textBestOf._top.internalValue + textBestOf._height.internalValue / 2 + 0 + 'px'\r\n  }\r\n  /**\r\n   * GUI 移动至屏幕右下角\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __guiTextRemoveToScreenRB () {\r\n    const duration = this.GUI_MOVE_TO_RIGHT_BOTTOM_TIME\r\n\r\n    const t0 = FPS * this.GUI_MOVE_TO_RIGHT_BOTTOM_TIME / 1000\r\n    const t1 = FPS * (this.GUI_MOVE_TO_RIGHT_BOTTOM_TIME - this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME) / 1000\r\n    const t2 = FPS * (this.GUI_MOVE_TO_RIGHT_BOTTOM_TIME - this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME * 2) / 1000\r\n\r\n    const w = this.game._canvas.width\r\n    const h = this.game._canvas.height\r\n\r\n    const ui = this.guis\r\n\r\n    const tb0 = {\r\n      x: ((w - ui.textCompany._width.internalValue) - ui.textCompany._left.internalValue) / t0,\r\n      y: ((h - ui.textCompany._height.internalValue) - ui.textCompany._top.internalValue) / t0\r\n    }\r\n    const tb1 = {\r\n      x: ((w - ui.textBestOf._width.internalValue) - ui.textBestOf._left.internalValue) / t1,\r\n      y: ((h - ui.textBestOf._height.internalValue - ui.textCompany._height.internalValue) - ui.textBestOf._top.internalValue) / t1\r\n    }\r\n    const tb2 = {\r\n      x: ((w - ui.textPowerBy._width.internalValue + ui.textPowerBy._width.internalValue / 4) - ui.textPowerBy._left.internalValue) / t2,\r\n      y: ((h - ui.textPowerBy._height.internalValue + ui.textPowerBy._height.internalValue / 4) - ui.textCompany._height.internalValue - ui.textBestOf._height.internalValue - ui.textPowerBy._top.internalValue) / t2\r\n    }\r\n\r\n    let timed = 0\r\n\r\n    let timer = setInterval(() => {\r\n      timed += 1000 / FPS\r\n\r\n      if (timed > 0 && timed < duration) ui.textCompany.left = ui.textCompany._left.internalValue + tb0.x + 'px'\r\n      if (timed > this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME && timed < duration) ui.textBestOf.left = ui.textBestOf._left.internalValue + tb1.x + 'px'\r\n      if (timed > this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME * 2 && timed < duration) ui.textPowerBy.left = ui.textPowerBy._left.internalValue + tb2.x + 'px'\r\n\r\n      if (timed > 0 && timed < duration) ui.textCompany.top = ui.textCompany._top.internalValue + tb0.y + 'px'\r\n      if (timed > this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME && timed < duration) ui.textBestOf.top = ui.textBestOf._top.internalValue + tb1.y + 'px'\r\n      if (timed > this.GUI_MOVE_TO_RIGHT_BOTTOM_DELAY_TIME * 2 && timed < duration) ui.textPowerBy.top = ui.textPowerBy._top.internalValue + tb2.y + 'px'\r\n\r\n      timed >= duration && window.clearInterval(timer)\r\n    }, 1000 / FPS)\r\n  }\r\n  /**\r\n   * GUI 进度文本显示\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __guiTextLoadingProgressShow () {\r\n    this._loadingText = new LoadingProgressText(this.game)\r\n  }\r\n  /**\r\n   * GUI 进度文本改变\r\n   *\r\n   * @param {string} text 文本内容\r\n   * @memberof SceneLoading\r\n   */\r\n  __guiTextLoadingProgressText (text) {\r\n    this._loadingText.show(text)\r\n  }\r\n  /**\r\n   * 显示飞溅网格并播放动画\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __splashMeshShow () {\r\n    this.__guiTextRemoveToScreenRB()\r\n\r\n    const [{outline}, {scene}] = [this, this.game]\r\n\r\n    outline.get('splash').root.material.emissiveColor = new BABYLON.Color3(72 / 255, 145 / 255, 241 / 255)\r\n    outline.get('splash').root.material.alphaMode = BABYLON.Engine.ALPHA_ADD\r\n    outline.get('splash').root.visibility = 1\r\n\r\n    setTimeout(() => {\r\n      setTimeout(() => {\r\n        this.__soundPlay()\r\n        this.__starShow()\r\n      }, 900)\r\n      scene.beginAnimation(outline.get('splash').root.skeleton, 0, 26, false, 1, () => {\r\n        // this.PARTICLE_SHOW()\r\n        this.__guiTextLoadingProgressShow()\r\n        outline.get('splash').root.dispose()\r\n      })\r\n    }, 750)\r\n  }\r\n  /**\r\n   * 播放音频\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __soundPlay () {\r\n    this.sound = new BABYLON.Sound('loading-sound', './static/assets/sounds/loading.mp3', this.game.scene, null, {\r\n      loop: true,\r\n      autoplay: true,\r\n      volume: 0\r\n    })\r\n  }\r\n  /**\r\n   * 显示星空背景\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __starShow () {\r\n    // 载入星空平面\r\n    const options = {\r\n      height: 10,\r\n      width: 10,\r\n      sideOrientation: BABYLON.Mesh.DOUBLESIDE\r\n    }\r\n    this.star = BABYLON.MeshBuilder.CreatePlane('star-plane', options, this.game.scene)\r\n    this.star.visibility = 0\r\n    this.star.material = this.starMaterial\r\n    this.star.visibility = 1\r\n    this.starSpeed = 0.005\r\n\r\n    let speedKey = [{frame: 0, value: 0.05}, {frame: 30, value: 0.03}, {frame: 60, value: 0.01}]\r\n\r\n    let aniSpeed = new BABYLON.Animation('star-speed-animation', 'starSpeed', 24, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT)\r\n\r\n    aniSpeed.setKeys(speedKey)\r\n\r\n    this.game.scene.beginDirectAnimation(this, [aniSpeed], 0, 60)\r\n\r\n    this.starShaderTimer = setInterval(() => {\r\n      this.starShaderTime += this.starSpeed\r\n      this.starMaterial.setFloat('time', this.starShaderTime)\r\n    }, 1000 / 60)\r\n\r\n    this.__starBindDeviceOrientation()\r\n    this.__loadHouseScene()\r\n  }\r\n  /**\r\n   * 星空背景绑定重力感应事件\r\n   *\r\n   * @memberof SceneLoading\r\n   */\r\n  __starBindDeviceOrientation () {\r\n    window.DeviceOrientationEvent && window.addEventListener('deviceorientation', e => {\r\n      this.star.position = new BABYLON.Vector3(e.gamma / 90 * 2, e.beta / 180 * 2, 0)\r\n    }, true)\r\n  }\r\n\r\n  __disposeGUI () {\r\n    setTimeout(() => {\r\n      this.guis.advancedTexture.dispose()\r\n      this._loadingText.dispose()\r\n    }, 1500)\r\n  }\r\n}\r\n\r\nclass LoadingProgressText {\r\n  constructor (game) {\r\n    this.game = game\r\n\r\n    this._text = ''\r\n    this._textCache = ''\r\n\r\n    this._rotateCursors = '｜／－＼'.split('')\r\n    this._rotateCursorsIndex = 0\r\n\r\n    this._errorCharas = '箌淐喢鞞鴔燖鸎曖抧郂見锏饝婥繌鎅刉鄮@€\u0010О繞聽><?*&%:;{}[]()+#ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'.split('')\r\n    this._errorCharaTime = 0\r\n\r\n    this._TIMER = null\r\n    this.INIT_TEXTBLOCK()\r\n  }\r\n  INIT_TEXTBLOCK () {\r\n    this.advancedTexture = GUI.AdvancedDynamicTexture.CreateFullscreenUI('ui2', true, this.game.scene)\r\n\r\n    this._textBlock = new BABYLON.GUI.TextBlock()\r\n    this._textBlock.fontFamily = 'Microsoft YaHei'\r\n    this._textBlock.fontSize = '14px'\r\n    this._textBlock.color = 'white'\r\n    this._textBlock.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT\r\n    this._textBlock.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP\r\n    this._textBlock.resizeToFit = true\r\n    this._textBlock.text = ''\r\n    this._textBlock.alpha = 1\r\n    this._textBlock.left = '14px'\r\n    this._textBlock.top = '28px'\r\n    this.advancedTexture.addControl(this._textBlock)\r\n  }\r\n\r\n  show (text) {\r\n    if (this._text !== text) {\r\n      this._text = text\r\n      this._rotateCursorsIndex = 0\r\n\r\n      this._TIMER && clearInterval(this._TIMER)\r\n\r\n      this._TIMER = setInterval(() => {\r\n        if (this._textCache === '' || this._textCache === this._text.substring(0, this._textCache.length - 1)) { // 如果文字已经清空 或残留文字等同于新文字\r\n          clearInterval(this._TIMER)\r\n          this._TIMER = setInterval(() => {\r\n            if (this._textCache === this._text) {\r\n              clearInterval(this._TIMER)\r\n              this._TIMER = setInterval(() => {\r\n                this._rotateCursorsIndex = this._rotateCursorsIndex === 3 ? 0 : this._rotateCursorsIndex + 1\r\n                this._textBlock.text = `[ ${this._textCache} ... ${this._rotateCursors[this._rotateCursorsIndex]} ]`\r\n              }, 500)\r\n            } else {\r\n              if (this._errorCharaTime === 3) {\r\n                this._errorCharaTime = 0\r\n                this._textCache = this._text.substring(0, this._textCache.length + 1)\r\n                this._textBlock.text = `[ ${this._textCache}| ]`\r\n              } else {\r\n                this._errorCharaTime++\r\n                this._textBlock.text = `[ ${this._textCache}${this._errorCharas[Math.ceil(Math.random() * this._errorCharas.length) - 1]}| ]`\r\n              }\r\n            }\r\n          }, 12)\r\n        } else {\r\n          this._textCache = this._textCache.substring(0, this._textCache.length - 1)\r\n          this._textBlock.text = `[ ${this._textCache}| ]`\r\n        }\r\n      }, 24)\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    window.clearInterval(this._TIMER)\r\n    this.advancedTexture.dispose()\r\n  }\r\n}\r\n\r\nexport default SceneLoading\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/SceneLoading.js","import * as BABYLON from 'babylonjs'\r\n\r\nclass TargetMaker {\r\n  /** @type {BABYLON.Mesh} */\r\n  get sourceMesh () { return this._sourceMesh }\r\n  set sourceMesh (val) { this._sourceMesh = val }\r\n  /** @type {BABYLON.Mesh} */\r\n  get targetMesh () { return this._targetMesh }\r\n  set targetMesh (val) { this._targetMesh = val }\r\n\r\n  constructor (sourceMesh, targetMesh) {\r\n    this._sourceMesh = sourceMesh\r\n    this._targetMesh = targetMesh\r\n  }\r\n\r\n  build (filePath, fileName) {\r\n    if (this.sourceMesh && this.targetMesh) {\r\n      const source = { mesh: this.sourceMesh }\r\n      const target = { mesh: this.targetMesh }\r\n\r\n      source.p = source.mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)\r\n      target.p = target.mesh.getVerticesData(BABYLON.VertexBuffer.PositionKind)\r\n\r\n      if (source.p.length !== target.p.length) return console.error(new Error('different mesh vertex count.'))\r\n\r\n      let basePosition = `0 `\r\n      let result = ``\r\n\r\n      // let _i = -1\r\n      // let _vecIndex = 0\r\n      // source.p.map((v, i) => {\r\n      //   _i++\r\n      //   if (_i === 3) {\r\n      //     _vecIndex++\r\n      //     _i = 0\r\n      //     basePosition += `\\n ${_vecIndex}`\r\n      //   }\r\n      //   basePosition += ` ${v}`\r\n      // })\r\n\r\n      // for (let i = 0; i < source.p.length / 3; i++) {\r\n      //   let sourceVertex = new BABYLON.Vector3(source.p[i * 3], source.p[i * 3 + 1], source.p[i * 3 + 2])\r\n      //   let targetVertex = new BABYLON.Vector3(target.p[i * 3], target.p[i * 3 + 1], target.p[i * 3 + 2])\r\n\r\n      //   if (BABYLON.Vector3.Distance(sourceVertex, targetVertex) > 0) {\r\n      //     // let x = (targetVertex.x - sourceVertex.x).toFixed(4)\r\n      //     // let y = (targetVertex.y - sourceVertex.y).toFixed(4)\r\n      //     // let z = (targetVertex.z - sourceVertex.z).toFixed(4)\r\n      //     // result += (x > 0 || y > 0 || z > 0) ? `${i} ${x > 0 ? x : 0} ${y > 0 ? y : 0} ${z > 0 ? z : 0}\\n` : ''\r\n      //     result += `${i} ${targetVertex.x} ${targetVertex.y} ${targetVertex.z}\\n`\r\n      //   }\r\n      // }\r\n\r\n      // result = Buffer.from(result).toString('base64')\r\n      console.log(basePosition)\r\n      return {result, basePosition}\r\n      // return result\r\n    } else {\r\n      console.error(new Error('TargetMaker 必须需求源网格以及目标网格'))\r\n    }\r\n  }\r\n}\r\n\r\nexport default TargetMaker\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/cat-maker/src/target-maker.js","import * as BABYLON from 'babylonjs'\r\n// eslint-disable-next-line no-unused-vars\r\nimport Game from './../../main'\r\n// eslint-disable-next-line no-unused-vars\r\nimport Gene from './../cat-gene'\r\n\r\nconst POSITION_KIND = BABYLON.VertexBuffer.PositionKind\r\nconst TARGET_NAMES = (\r\n  'body-fat-max|body-fat-min|' +\r\n  'head-angle-max|head-angle-min')\r\n  .split('|')\r\n\r\nclass CatMaker {\r\n  /** 游戏\r\n   *\r\n   * @type {Game}\r\n   */\r\n  get game () { return this._game }\r\n  set game (val) { this._game = val }\r\n  /** 基因\r\n   *\r\n   * @type {Gene}\r\n   */\r\n  get genes () { return this._genes }\r\n  set genes (val) { this._genes = val }\r\n  /** 全部目标文件\r\n   *\r\n   * @type {Object}\r\n   */\r\n  get targets () { return this._targets }\r\n  set targets (val) { this._targets = val }\r\n  /** 全部已生成猫的模型\r\n   *\r\n   * @type {BABYLON.Mesh[]}\r\n   */\r\n  get meshes () { return this._meshes }\r\n  set meshs (val) { this._meshs = val }\r\n  /** 基本模型\r\n   *\r\n   * @type {BABYLON.Mesh}\r\n   */\r\n  get base () { return this._base }\r\n  set base (val) { this._base = val }\r\n  /** 基本模型Position数据\r\n   *\r\n   * @type {Number[]}\r\n   */\r\n  get basePosition () { return this._basePosition }\r\n  set basePosition (val) { this._basePosition = val }\r\n  /** 目标点文件全部就绪 */\r\n  get targetsIsReady () { return this._targetsIsReady }\r\n  set targetsIsReady (val) { this._targetsIsReady = val }\r\n\r\n  /** 构造函数\r\n   * @param {Game} game\r\n   */\r\n  constructor (game) {\r\n    this._game = game\r\n    this._genes = []\r\n    this._targets = {}\r\n    this._targetsIsReady = false\r\n    this._base = null\r\n    this._basePosition = []\r\n    this._meshes = {}\r\n  }\r\n\r\n  /** 加载资源回调函数\r\n   * @typedef {function(CatMaker)} loadAssetsCallback\r\n   * @callback loadAssetsCallback\r\n   * @param {CatMaker} 自身\r\n   */\r\n  /** 加载资源\r\n   * @param {loadAssetsCallback} callback 回调\r\n   * @returns {CatMaker} 返回自身\r\n   */\r\n  loadAssets (callback) {\r\n    const GAME = this.game\r\n    const ASSETS_MANAGER = GAME.assetsManager\r\n    const TARGETS = this.targets\r\n    const PATH = './static/assets/resources/cat/target/'\r\n    const BASE_FILE_PATH = './static/assets/resources/cat/babylon/'\r\n    const BASE_FILE_NAME = 'cat-target.babylon'\r\n    const BASE_NAME = 'cat_body'\r\n    const POSITION_KIND = BABYLON.VertexBuffer.PositionKind\r\n\r\n    // 资源管理器初始化\r\n    ASSETS_MANAGER.reset()\r\n\r\n    // 循环将目标点文件加入资源管理器任务列队\r\n    TARGET_NAMES.map((name, i) => {\r\n      let task = ASSETS_MANAGER.addTextFileTask(name, `${PATH + name}.target`)\r\n      task.onSuccess = ({text}) => {\r\n        TARGETS[name] = {}\r\n        text.split('\\n').map((line, i) => {\r\n          let arr = line.split(' ')\r\n          TARGETS[name][Number(arr[0])] = [Number(arr[1]), Number(arr[2]), Number(arr[3])]\r\n        })\r\n      }\r\n    })\r\n\r\n    // 将基本模型加入资源管理器任务列队\r\n    let task = ASSETS_MANAGER.addMeshTask('base mesh task', BASE_NAME, BASE_FILE_PATH, BASE_FILE_NAME)\r\n    task.onSuccess = ({loadedMeshes}) => {\r\n      this.base = loadedMeshes[0]\r\n      this.base.visibility = 0\r\n      this.basePosition = [].concat(this.base.getVerticesData(POSITION_KIND))\r\n    }\r\n\r\n    ASSETS_MANAGER.load() // 资源管理器启动加载任务\r\n    ASSETS_MANAGER.onTaskSuccessObservable.add(task => {})\r\n    // 资源管理器任务全部结束回调\r\n    ASSETS_MANAGER.onTasksDoneObservable.add(tasks => {\r\n      this.targetsIsReady = true\r\n      callback(this) // eslint-disable-line\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  /** 创建猫模型的Promise返回项\r\n   * @typedef {Object} createPromiseObject\r\n   * @property {CatMaker} maker -自身\r\n   * @property {BABYLON.Mesh} mesh -自身\r\n   */\r\n  /** 创建猫\r\n   * @param {string} name -名称\r\n   * @param {Gene} gene -基因\r\n   * @returns {Promise.<createPromiseObject, Error>} Promise\r\n   */\r\n  async create (name, gene) {\r\n    this.genes[name] = gene\r\n    this.rebuild(name)\r\n    return { maker: this, mesh: this.mesh(name) }\r\n  }\r\n\r\n  /** 根据猫的名称获取Mesh\r\n   * @returns {BABYLON.Mesh}\r\n   */\r\n  mesh (name) {\r\n    return this.meshes[name]\r\n  }\r\n\r\n  /** 重建模型\r\n   * @param {string} name 基因名称\r\n   */\r\n  rebuild (name) {\r\n    // 判断目标文件是否就绪、自身源网格是否就绪、基因是否存在\r\n    if (this.targetsIsReady && this._base && this.genes[name]) {\r\n      // 检测是否存在模型\r\n      if (!this.meshes[name]) this.meshes[name] = this.base.clone(`__${name}_MESH__`)\r\n      if (!this.meshes[name].skeleton) this.meshes[name].skeleton = this.base.skeleton.clone(`__${name}_SLELETON__`)\r\n\r\n      const mesh = this.mesh(name)\r\n\r\n      mesh.visibility = 0\r\n\r\n      this.COMPUTE_AGE(new Array(0).concat(this.basePosition), name)\r\n        .then(pos => this.COMPUTE_SEX(pos, name))\r\n        .then(pos => this.COMPUTE_FAT(pos, name))\r\n        .then(pos => this.COMPUTE_WEIGHT(pos, name))\r\n        .then(pos => this.COMPUTE_HEIGHT(pos, name))\r\n        // 头部\r\n        .then(pos => this.COMPUTE_HEAD_AGE(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_FAT(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_ANGLE(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_OVAL(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_ROUND(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_RECTANGULAR(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_SQUARE(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_TRIANGULAR(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_TRIANGULAR_INVERTED(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_DIAMOND(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_PARIETAL_SCALE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_SCALE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_HEAD_MOVE_VERTICALLY(pos, name))\r\n        // 额头\r\n        .then(pos => this.COMPUTE_FOREHEAD_BULGE(pos, name))\r\n        .then(pos => this.COMPUTE_FOREHEAD_SCALE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_FOREHEAD_CRANIC_SHAPE(pos, name))\r\n        .then(pos => this.COMPUTE_FOREHEAD_TEMPLE_BULGE(pos, name))\r\n        // 眉骨\r\n        .then(pos => this.COMPUTE_EYEBROWS_BULGE(pos, name))\r\n        .then(pos => this.COMPUTE_EYEBROWS_ANGLE(pos, name))\r\n        .then(pos => this.COMPUTE_EYEBROWS_MOVE_VERTICALLY(pos, name))\r\n        // 颈部\r\n        .then(pos => this.COMPUTE_NECK_DOUBLE(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_DEPTH_OF_NAPE(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_SCALE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NECK_MOVE_VERTICALLY(pos, name))\r\n        // 眼睛\r\n        .then(pos => this.COMPUTE_EYE_BAG_VOLUME(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_BAG_DISTORSION(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_BAG_HEIGHT(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_FOLD_ANGLE(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_FOLD_VOLUME(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_EPICANTHUS(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_0(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_1(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_2(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_3(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALEHEIGHT_4(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_OUTER_CORNER_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_INNER_CORNER_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_OUTER_CORNER_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_INNER_CORNER_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_MOVE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_EYE_SCALE(pos, name))\r\n        // 鼻子\r\n        .then(pos => this.COMPUTE_NOSE_MOVE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_MOVE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_MOVE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_HORIZONTALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_DEPTH(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_NOSTRILS_WIDTH(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_TIP_WIDTH(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_MOVE_BASE_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_WIDTH_0(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_WIDTH_1(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_WIDTH_2(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_COMPRESSION(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_CURVE(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_GREEK(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_HUMP(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_VOLUME(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_NOSTRILS_ANGLE(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_MOVE_TIP_VERTICALLY(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SEPTUM_ANGLE(pos, name))\r\n        .then(pos => this.COMPUTE_NOSE_SCALE_NOSTRILS_FLARING(pos, name))\r\n        // 嘴巴\r\n\r\n        .then(pos => mesh.setVerticesData(POSITION_KIND, pos)) // 更新顶点\r\n        .then(() => { mesh.visibility = 1 }) // 设置渲染\r\n    }\r\n  }\r\n\r\n  /** 重建全部模型 */\r\n  rebuildAll () {\r\n    if (this.targetsIsReady && this._base && this._genes.length > 0) {\r\n      this._genes.map((gene, i) => {\r\n        this.rebuild(i)\r\n      })\r\n    }\r\n  }\r\n\r\n  clamp (v, min, max) {\r\n    return v > max ? max : v < min ? min : v\r\n  }\r\n\r\n  /** 计算模型Promise返回项\r\n   * @typedef {Number[]} computePromiseObject\r\n   */\r\n  /** 计算年龄\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_AGE (pos, name) { return pos }\r\n  /** 计算性别\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_SEX (pos, name) { return pos }\r\n  /** 计算体脂率\r\n   * @param {number[]} pos\r\n   * @param {string} name\r\n   * @returns {Promise.<computePromiseObject, Error>} Promise\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_FAT (pos, name) {\r\n    const GENE = 'fatRate'\r\n    const TARGETS = this.targets\r\n    const BASE_POSITION = this.basePosition\r\n    const VALUE = this.clamp(this.genes[name][GENE], 0, 1)\r\n    const NAME = VALUE < 0.5 ? 'body-fat-min' : 'body-fat-max'\r\n    const LERP = VALUE < 0.5 ? 1 - 2 * VALUE : 2 * VALUE - 1\r\n\r\n    for (let i in TARGETS[NAME]) {\r\n      pos[i * 3 + 0] += (TARGETS[NAME][i][0] - BASE_POSITION[i * 3 + 0]) * LERP\r\n      pos[i * 3 + 1] += (TARGETS[NAME][i][1] - BASE_POSITION[i * 3 + 1]) * LERP\r\n      pos[i * 3 + 2] += (TARGETS[NAME][i][2] - BASE_POSITION[i * 3 + 2]) * LERP\r\n    }\r\n\r\n    return pos\r\n  }\r\n  /** 计算肥胖度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_WEIGHT (pos, name) { return pos }\r\n  /** 计算肥高度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEIGHT (pos, name) { return pos }\r\n  /** 计算肥面部年龄\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_AGE (pos, name) { return pos }\r\n  /** 计算肥面部肥胖度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_FAT (pos, name) { return pos }\r\n  /** 计算肥面部角度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_ANGLE (pos, name) { return pos }\r\n  /** 计算肥面部椭圆形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_OVAL (pos, name) { return pos }\r\n  /** 计算肥面部圆形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_ROUND (pos, name) { return pos }\r\n  /** 计算肥面部矩形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_RECTANGULAR (pos, name) { return pos }\r\n  /** 计算肥面部正方形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_SQUARE (pos, name) { return pos }\r\n  /** 计算肥面部三角形\r\n   *\r\n   * @param {any} pos\r\n   * @param {any} name\r\n   * @returns\r\n   * @memberof CatMaker\r\n   */\r\n  async COMPUTE_HEAD_TRIANGULAR (pos, name) { return pos }\r\n  /** 计算肥面部倒三角形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_TRIANGULAR_INVERTED (pos, name) { return pos }\r\n  /** 计算肥面部菱形\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_DIAMOND (pos, name) { return pos }\r\n  /** 计算头顶缩放深度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_PARIETAL_SCALE_DEPTH (pos, name) { return pos }\r\n  /** 计算头部缩放深度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_SCALE_DEPTH (pos, name) { return pos }\r\n  /** 计算头部水平缩放\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_SCALE_HORIZONTALLY (pos, name) { return pos }\r\n  /** 计算头部垂直缩放\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_SCALE_VERTICALLY (pos, name) { return pos }\r\n  /** 计算头部深度位移\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_MOVE_DEPTH (pos, name) { return pos }\r\n  /** 计算头部水平位移\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_MOVE_HORIZONTALLY (pos, name) { return pos }\r\n  /** 计算头部垂直位移\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_HEAD_MOVE_VERTICALLY (pos, name) { return pos }\r\n  /** 计算额头凸起\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_FOREHEAD_BULGE (pos, name) { return pos }\r\n  /** 计算额头垂直缩放\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_FOREHEAD_SCALE_VERTICALLY (pos, name) { return pos }\r\n  /** 计算额头颅骨凸起\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_FOREHEAD_CRANIC_SHAPE (pos, name) { return pos }\r\n  /** 计算额头太阳穴凸起\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_FOREHEAD_TEMPLE_BULGE (pos, name) { return pos }\r\n  /** 计算眉骨凸起\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_EYEBROWS_BULGE (pos, name) { return pos }\r\n  /** 计算眉骨角度\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_EYEBROWS_ANGLE (pos, name) { return pos }\r\n  /** 计算眉骨垂直位移\r\n   * @param {*} pos\r\n   * @param {*} name\r\n   */\r\n  async COMPUTE_EYEBROWS_MOVE_VERTICALLY (pos, name) { return pos }\r\n\r\n  async COMPUTE_NECK_DOUBLE (pos, name) { return pos }\r\n  async COMPUTE_NECK_SCALE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_NECK_SCALE_DEPTH_OF_NAPE (pos, name) { return pos }\r\n  async COMPUTE_NECK_SCALE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_NECK_SCALE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_NECK_MOVE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_NECK_MOVE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_NECK_MOVE_VERTICALLY (pos, name) { return pos }\r\n\r\n  async COMPUTE_EYE_BAG_VOLUME (pos, name) { return pos }\r\n  async COMPUTE_EYE_BAG_DISTORSION (pos, name) { return pos }\r\n  async COMPUTE_EYE_BAG_HEIGHT (pos, name) { return pos }\r\n  async COMPUTE_EYE_FOLD_ANGLE (pos, name) { return pos }\r\n  async COMPUTE_EYE_FOLD_VOLUME (pos, name) { return pos }\r\n  async COMPUTE_EYE_EPICANTHUS (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALEHEIGHT_0 (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALEHEIGHT_1 (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALEHEIGHT_2 (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALEHEIGHT_3 (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALEHEIGHT_4 (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_OUTER_CORNER_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_INNER_CORNER_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_OUTER_CORNER_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_INNER_CORNER_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_MOVE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_EYE_SCALE (pos, name) { return pos }\r\n\r\n  async COMPUTE_NOSE_MOVE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_MOVE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_MOVE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_NOSTRILS_WIDTH (pos, name) { return pos }\r\n  async COMPUTE_NOSE_TIP_WIDTH (pos, name) { return pos }\r\n  async COMPUTE_NOSE_MOVE_BASE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_0 (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_1 (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_WIDTH_2 (pos, name) { return pos }\r\n  async COMPUTE_NOSE_COMPRESSION (pos, name) { return pos }\r\n  async COMPUTE_NOSE_CURVE (pos, name) { return pos }\r\n  async COMPUTE_NOSE_GREEK (pos, name) { return pos }\r\n  async COMPUTE_NOSE_HUMP (pos, name) { return pos }\r\n  async COMPUTE_NOSE_VOLUME (pos, name) { return pos }\r\n  async COMPUTE_NOSE_NOSTRILS_ANGLE (pos, name) { return pos }\r\n  async COMPUTE_NOSE_MOVE_TIP_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SEPTUM_ANGLE (pos, name) { return pos }\r\n  async COMPUTE_NOSE_SCALE_NOSTRILS_FLARING (pos, name) { return pos }\r\n\r\n  async COMPUTE_MOUSE_SCALE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_VERTICALLY (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_HORIZONTALLY (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_MOVE_DEPTH (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_LOWERLIP_HEIGHT (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_LOWERLIP_WIDTH (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_UPPERLIP_HEIGHT (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_SCALE_UPPERLIP_WIDTH (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_CUPIDS_BOW_WIDTH (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_DIMPLES (pos, name) { return pos }\r\n  async COMPUTE_MOUSE_LAUGH_LINES (pos, name) { return pos }\r\n}\r\n\r\nexport default CatMaker\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/cat-maker/index.js"],"sourceRoot":""}